### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableHashSet
  commentId: T:System.Collections.Immutable.ImmutableHashSet
  id: ImmutableHashSet
  parent: System.Collections.Immutable
  children:
  - System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  - System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableHashSet.Create``1
  - System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  - System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  - System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  - System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Immutable.ImmutableHashSet{``0}.Builder)
  langs:
  - csharp
  - vb
  name: ImmutableHashSet
  nameWithType: ImmutableHashSet
  fullName: System.Collections.Immutable.ImmutableHashSet
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Provides a set of initialization methods for instances of the <xref href="System.Collections.Immutable.ImmutableHashSet%601" data-throw-if-not-resolved="false"></xref> class.  

     NuGet package: System.Collections.Immutable (about immutable collections and how to install)
  example: []
  syntax:
    content: public static class ImmutableHashSet
    content.vb: Public Module ImmutableHashSet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1
  id: Create``1
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: Create<T>()
  nameWithType: ImmutableHashSet.Create<T>()
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable hash set.
  example: []
  syntax:
    content: public static ImmutableHashSet<T> Create<T>()
    typeParameters:
    - id: T
      description: The type of items to be stored in the immutable hash set.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{T}}
      description: An empty immutable hash set.
    content.vb: Public Shared Function Create(Of T)() As ImmutableHashSet(Of T)
  overload: System.Collections.Immutable.ImmutableHashSet.Create*
  nameWithType.vb: ImmutableHashSet.Create(Of T)()
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.Create(Of T)()
  name.vb: Create(Of T)()
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  id: Create``1(System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: Create<T>(IEqualityComparer<T>?)
  nameWithType: ImmutableHashSet.Create<T>(IEqualityComparer<T>?)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(System.Collections.Generic.IEqualityComparer<T>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable hash set that uses the specified equality comparer.
  example: []
  syntax:
    content: public static ImmutableHashSet<T> Create<T>(IEqualityComparer<T>? equalityComparer)
    parameters:
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The object to use for comparing objects in the set for equality.
    typeParameters:
    - id: T
      description: The type of items in the immutable hash set.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{T}}
      description: An empty immutable hash set.
    content.vb: Public Shared Function Create(Of T)(equalityComparer As IEqualityComparer(Of T)) As ImmutableHashSet(Of T)
  overload: System.Collections.Immutable.ImmutableHashSet.Create*
  nameWithType.vb: ImmutableHashSet.Create(Of T)(IEqualityComparer(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.Create(Of T)(System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Create(Of T)(IEqualityComparer(Of T))
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  id: Create``1(``0)
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: Create<T>(T)
  nameWithType: ImmutableHashSet.Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable hash set that contains the specified item.
  example: []
  syntax:
    content: public static ImmutableHashSet<T> Create<T>(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to prepopulate the hash set with.
    typeParameters:
    - id: T
      description: The type of items in the immutable hash set.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{T}}
      description: A new immutable hash set that contains the specified item.
    content.vb: Public Shared Function Create(Of T)(item As T) As ImmutableHashSet(Of T)
  overload: System.Collections.Immutable.ImmutableHashSet.Create*
  nameWithType.vb: ImmutableHashSet.Create(Of T)(T)
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.Create(Of T)(T)
  name.vb: Create(Of T)(T)
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  id: Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: Create<T>(IEqualityComparer<T>?, T)
  nameWithType: ImmutableHashSet.Create<T>(IEqualityComparer<T>?, T)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(System.Collections.Generic.IEqualityComparer<T>?, T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable hash set that contains the specified item and uses the specified equality comparer for the set type.
  example: []
  syntax:
    content: public static ImmutableHashSet<T> Create<T>(IEqualityComparer<T>? equalityComparer, T item)
    parameters:
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The object to use for comparing objects in the set for equality.
    - id: item
      type: '{T}'
      description: The item to prepopulate the hash set with.
    typeParameters:
    - id: T
      description: The type of items in the immutable hash set.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{T}}
      description: A new immutable hash set that contains the specified item.
    content.vb: Public Shared Function Create(Of T)(equalityComparer As IEqualityComparer(Of T), item As T) As ImmutableHashSet(Of T)
  overload: System.Collections.Immutable.ImmutableHashSet.Create*
  nameWithType.vb: ImmutableHashSet.Create(Of T)(IEqualityComparer(Of T), T)
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.Create(Of T)(System.Collections.Generic.IEqualityComparer(Of T), T)
  name.vb: Create(Of T)(IEqualityComparer(Of T), T)
- uid: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: CreateRange<T>(IEnumerable<T>)
  nameWithType: ImmutableHashSet.CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateRange<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable hash set prefilled with the specified items.
  example: []
  syntax:
    content: public static ImmutableHashSet<T> CreateRange<T>(IEnumerable<T> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The items to add to the hash set.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{T}}
      description: The new immutable hash set that contains the specified items.
    content.vb: Public Shared Function CreateRange(Of T)(items As IEnumerable(Of T)) As ImmutableHashSet(Of T)
  overload: System.Collections.Immutable.ImmutableHashSet.CreateRange*
  nameWithType.vb: ImmutableHashSet.CreateRange(Of T)(IEnumerable(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.CreateRange(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: CreateRange(Of T)(IEnumerable(Of T))
- uid: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: CreateRange<T>(IEqualityComparer<T>?, IEnumerable<T>)
  nameWithType: ImmutableHashSet.CreateRange<T>(IEqualityComparer<T>?, IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateRange<T>(System.Collections.Generic.IEqualityComparer<T>?, System.Collections.Generic.IEnumerable<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable hash set that contains the specified items and uses the specified equality comparer for the set type.
  example: []
  syntax:
    content: public static ImmutableHashSet<T> CreateRange<T>(IEqualityComparer<T>? equalityComparer, IEnumerable<T> items)
    parameters:
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The object to use for comparing objects in the set for equality.
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The items add to the collection before immutability is applied.
    typeParameters:
    - id: T
      description: The type of items stored in the collection.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{T}}
      description: The new immutable hash set.
    content.vb: Public Shared Function CreateRange(Of T)(equalityComparer As IEqualityComparer(Of T), items As IEnumerable(Of T)) As ImmutableHashSet(Of T)
  overload: System.Collections.Immutable.ImmutableHashSet.CreateRange*
  nameWithType.vb: ImmutableHashSet.CreateRange(Of T)(IEqualityComparer(Of T), IEnumerable(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.CreateRange(Of T)(System.Collections.Generic.IEqualityComparer(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: CreateRange(Of T)(IEqualityComparer(Of T), IEnumerable(Of T))
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  id: Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: Create<T>(params T[])
  nameWithType: ImmutableHashSet.Create<T>(params T[])
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(params T[])
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable hash set that contains the specified array of items.
  example: []
  syntax:
    content: public static ImmutableHashSet<T> Create<T>(params T[] items)
    parameters:
    - id: items
      type: '{T}[]'
      description: An array that contains the items to prepopulate the hash set with.
    typeParameters:
    - id: T
      description: The type of items in the immutable hash set.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{T}}
      description: A new immutable hash set that contains the specified items.
    content.vb: Public Shared Function Create(Of T)(ParamArray items As T()) As ImmutableHashSet(Of T)
  overload: System.Collections.Immutable.ImmutableHashSet.Create*
  nameWithType.vb: ImmutableHashSet.Create(Of T)(ParamArray T())
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.Create(Of T)(ParamArray T())
  name.vb: Create(Of T)(ParamArray T())
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  id: Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: Create<T>(IEqualityComparer<T>?, params T[])
  nameWithType: ImmutableHashSet.Create<T>(IEqualityComparer<T>?, params T[])
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(System.Collections.Generic.IEqualityComparer<T>?, params T[])
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable hash set that contains the items in the specified collection and uses the specified equality comparer for the set type.
  example: []
  syntax:
    content: public static ImmutableHashSet<T> Create<T>(IEqualityComparer<T>? equalityComparer, params T[] items)
    parameters:
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The object to use for comparing objects in the set for equality.
    - id: items
      type: '{T}[]'
      description: An array that contains the items to prepopulate the hash set with.
    typeParameters:
    - id: T
      description: The type of items stored in the immutable hash set.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{T}}
      description: A new immutable hash set that contains the specified items.
    content.vb: Public Shared Function Create(Of T)(equalityComparer As IEqualityComparer(Of T), ParamArray items As T()) As ImmutableHashSet(Of T)
  overload: System.Collections.Immutable.ImmutableHashSet.Create*
  nameWithType.vb: ImmutableHashSet.Create(Of T)(IEqualityComparer(Of T), ParamArray T())
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.Create(Of T)(System.Collections.Generic.IEqualityComparer(Of T), ParamArray T())
  name.vb: Create(Of T)(IEqualityComparer(Of T), ParamArray T())
- uid: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  commentId: M:System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  id: CreateBuilder``1
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: CreateBuilder<T>()
  nameWithType: ImmutableHashSet.CreateBuilder<T>()
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateBuilder<T>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable hash set builder.
  example: []
  syntax:
    content: public static ImmutableHashSet<T>.Builder CreateBuilder<T>()
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{T}}.Builder
      description: The immutable hash set builder.
    content.vb: Public Shared Function CreateBuilder(Of T)() As ImmutableHashSet(Of T).Builder
  overload: System.Collections.Immutable.ImmutableHashSet.CreateBuilder*
  nameWithType.vb: ImmutableHashSet.CreateBuilder(Of T)()
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.CreateBuilder(Of T)()
  name.vb: CreateBuilder(Of T)()
- uid: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  id: CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: CreateBuilder<T>(IEqualityComparer<T>?)
  nameWithType: ImmutableHashSet.CreateBuilder<T>(IEqualityComparer<T>?)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateBuilder<T>(System.Collections.Generic.IEqualityComparer<T>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable hash set builder.
  example: []
  syntax:
    content: public static ImmutableHashSet<T>.Builder CreateBuilder<T>(IEqualityComparer<T>? equalityComparer)
    parameters:
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The object to use for comparing objects in the set for equality.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{T}}.Builder
      description: The new immutable hash set builder.
    content.vb: Public Shared Function CreateBuilder(Of T)(equalityComparer As IEqualityComparer(Of T)) As ImmutableHashSet(Of T).Builder
  overload: System.Collections.Immutable.ImmutableHashSet.CreateBuilder*
  nameWithType.vb: ImmutableHashSet.CreateBuilder(Of T)(IEqualityComparer(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.CreateBuilder(Of T)(System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: CreateBuilder(Of T)(IEqualityComparer(Of T))
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>?)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>?)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence, produces an immutable hash set of its contents, and uses the specified equality comparer for the set type.
  example: []
  syntax:
    content: public static ImmutableHashSet<TSource> ToImmutableHashSet<TSource>(this IEnumerable<TSource> source, IEqualityComparer<TSource>? equalityComparer)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate.
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{{TSource}}
      description: The object to use for comparing objects in the set for equality.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{TSource}}
      description: An immutable hash set that contains the items in the specified sequence and uses the specified equality comparer.
    content.vb: Public Shared Function ToImmutableHashSet(Of TSource)(source As IEnumerable(Of TSource), equalityComparer As IEqualityComparer(Of TSource)) As ImmutableHashSet(Of TSource)
  overload: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet*
  nameWithType.vb: ImmutableHashSet.ToImmutableHashSet(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: ToImmutableHashSet(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Immutable.ImmutableHashSet{``0}.Builder)
  commentId: M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Immutable.ImmutableHashSet{``0}.Builder)
  id: ToImmutableHashSet``1(System.Collections.Immutable.ImmutableHashSet{``0}.Builder)
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: ToImmutableHashSet<TSource>(Builder)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(ImmutableHashSet<TSource>.Builder)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(System.Collections.Immutable.ImmutableHashSet<TSource>.Builder)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an immutable hash set from the current contents of the builder's set.
  example: []
  syntax:
    content: public static ImmutableHashSet<TSource> ToImmutableHashSet<TSource>(this ImmutableHashSet<TSource>.Builder builder)
    parameters:
    - id: builder
      type: System.Collections.Immutable.ImmutableHashSet{{TSource}}.Builder
      description: The builder to create the immutable hash set from.
    typeParameters:
    - id: TSource
      description: The type of the elements in the hash set.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{TSource}}
      description: An immutable hash set that contains the current contents in the builder's set.
    content.vb: Public Shared Function ToImmutableHashSet(Of TSource)(builder As ImmutableHashSet(Of TSource).Builder) As ImmutableHashSet(Of TSource)
  overload: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet*
  nameWithType.vb: ImmutableHashSet.ToImmutableHashSet(Of TSource)(ImmutableHashSet(Of TSource).Builder)
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet(Of TSource)(System.Collections.Immutable.ImmutableHashSet(Of TSource).Builder)
  name.vb: ToImmutableHashSet(Of TSource)(Builder)
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  id: ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  - vb
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence and produces an immutable hash set of its contents.
  example: []
  syntax:
    content: public static ImmutableHashSet<TSource> ToImmutableHashSet<TSource>(this IEnumerable<TSource> source)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{{TSource}}
      description: An immutable hash set that contains the items in the specified sequence.
    content.vb: Public Shared Function ToImmutableHashSet(Of TSource)(source As IEnumerable(Of TSource)) As ImmutableHashSet(Of TSource)
  overload: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet*
  nameWithType.vb: ImmutableHashSet.ToImmutableHashSet(Of TSource)(IEnumerable(Of TSource))
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToImmutableHashSet(Of TSource)(IEnumerable(Of TSource))
references:
- uid: System.Collections.Immutable.ImmutableHashSet`1
  commentId: T:System.Collections.Immutable.ImmutableHashSet`1
  parent: System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  name: ImmutableHashSet<T>
  nameWithType: ImmutableHashSet<T>
  fullName: System.Collections.Immutable.ImmutableHashSet<T>
  nameWithType.vb: ImmutableHashSet(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableHashSet(Of T)
  name.vb: ImmutableHashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Immutable.ImmutableHashSet.Create*
  commentId: Overload:System.Collections.Immutable.ImmutableHashSet.Create
  isExternal: true
  href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_Create__1
  name: Create
  nameWithType: ImmutableHashSet.Create
  fullName: System.Collections.Immutable.ImmutableHashSet.Create
- uid: System.Collections.Immutable.ImmutableHashSet{{T}}
  commentId: T:System.Collections.Immutable.ImmutableHashSet{`0}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableHashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  name: ImmutableHashSet<T>
  nameWithType: ImmutableHashSet<T>
  fullName: System.Collections.Immutable.ImmutableHashSet<T>
  nameWithType.vb: ImmutableHashSet(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableHashSet(Of T)
  name.vb: ImmutableHashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Immutable.ImmutableHashSet.CreateRange*
  commentId: Overload:System.Collections.Immutable.ImmutableHashSet.CreateRange
  isExternal: true
  href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_CreateRange__1_System_Collections_Generic_IEnumerable___0__
  name: CreateRange
  nameWithType: ImmutableHashSet.CreateRange
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateRange
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Collections.Immutable.ImmutableHashSet.CreateBuilder*
  commentId: Overload:System.Collections.Immutable.ImmutableHashSet.CreateBuilder
  isExternal: true
  href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_CreateBuilder__1
  name: CreateBuilder
  nameWithType: ImmutableHashSet.CreateBuilder
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateBuilder
- uid: System.Collections.Immutable.ImmutableHashSet{{T}}.Builder
  commentId: T:System.Collections.Immutable.ImmutableHashSet{`0}.Builder
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableHashSet`1.Builder
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  name: ImmutableHashSet<T>.Builder
  nameWithType: ImmutableHashSet<T>.Builder
  fullName: System.Collections.Immutable.ImmutableHashSet<T>.Builder
  nameWithType.vb: ImmutableHashSet(Of T).Builder
  fullName.vb: System.Collections.Immutable.ImmutableHashSet(Of T).Builder
  name.vb: ImmutableHashSet(Of T).Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: System.Collections.Immutable.ImmutableHashSet{`0}.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1.builder
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: System.Collections.Immutable.ImmutableHashSet{`0}.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1.builder
- uid: System.Collections.Immutable.ImmutableHashSet`1.Builder
  commentId: T:System.Collections.Immutable.ImmutableHashSet`1.Builder
  parent: System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  name: ImmutableHashSet<T>.Builder
  nameWithType: ImmutableHashSet<T>.Builder
  fullName: System.Collections.Immutable.ImmutableHashSet<T>.Builder
  nameWithType.vb: ImmutableHashSet(Of T).Builder
  fullName.vb: System.Collections.Immutable.ImmutableHashSet(Of T).Builder
  name.vb: ImmutableHashSet(Of T).Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: System.Collections.Immutable.ImmutableHashSet`1.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1.builder
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: System.Collections.Immutable.ImmutableHashSet`1.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1.builder
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet*
  commentId: Overload:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet
  isExternal: true
  href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  name: ToImmutableHashSet
  nameWithType: ImmutableHashSet.ToImmutableHashSet
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet
- uid: System.Collections.Generic.IEnumerable{{TSource}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TSource>
  nameWithType: IEnumerable<TSource>
  fullName: System.Collections.Generic.IEnumerable<TSource>
  nameWithType.vb: IEnumerable(Of TSource)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TSource)
  name.vb: IEnumerable(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: System.Collections.Generic.IEqualityComparer{{TSource}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<TSource>
  nameWithType: IEqualityComparer<TSource>
  fullName: System.Collections.Generic.IEqualityComparer<TSource>
  nameWithType.vb: IEqualityComparer(Of TSource)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TSource)
  name.vb: IEqualityComparer(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: System.Collections.Immutable.ImmutableHashSet{{TSource}}
  commentId: T:System.Collections.Immutable.ImmutableHashSet{``0}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableHashSet`1
  href: System.Collections.Immutable.ImmutableHashSet-1.html
  name: ImmutableHashSet<TSource>
  nameWithType: ImmutableHashSet<TSource>
  fullName: System.Collections.Immutable.ImmutableHashSet<TSource>
  nameWithType.vb: ImmutableHashSet(Of TSource)
  fullName.vb: System.Collections.Immutable.ImmutableHashSet(Of TSource)
  name.vb: ImmutableHashSet(Of TSource)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet-1.html
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: System.Collections.Immutable.ImmutableHashSet{{TSource}}.Builder
  commentId: T:System.Collections.Immutable.ImmutableHashSet{``0}.Builder
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableHashSet`1.Builder
  href: System.Collections.Immutable.ImmutableHashSet-1.html
  name: ImmutableHashSet<TSource>.Builder
  nameWithType: ImmutableHashSet<TSource>.Builder
  fullName: System.Collections.Immutable.ImmutableHashSet<TSource>.Builder
  nameWithType.vb: ImmutableHashSet(Of TSource).Builder
  fullName.vb: System.Collections.Immutable.ImmutableHashSet(Of TSource).Builder
  name.vb: ImmutableHashSet(Of TSource).Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet-1.html
  - name: <
  - name: TSource
  - name: '>'
  - name: .
  - uid: System.Collections.Immutable.ImmutableHashSet{``0}.Builder
    name: Builder
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet-1.Builder.html
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: .
  - uid: System.Collections.Immutable.ImmutableHashSet{``0}.Builder
    name: Builder
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet-1.Builder.html
