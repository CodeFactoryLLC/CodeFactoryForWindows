### YamlMime:ManagedReference
items:
- uid: Serilog.Data.LogEventPropertyValueVisitor`2
  commentId: T:Serilog.Data.LogEventPropertyValueVisitor`2
  id: LogEventPropertyValueVisitor`2
  parent: Serilog.Data
  children:
  - Serilog.Data.LogEventPropertyValueVisitor`2.#ctor
  - Serilog.Data.LogEventPropertyValueVisitor`2.Visit(`0,Serilog.Events.LogEventPropertyValue)
  - Serilog.Data.LogEventPropertyValueVisitor`2.VisitDictionaryValue(`0,Serilog.Events.DictionaryValue)
  - Serilog.Data.LogEventPropertyValueVisitor`2.VisitScalarValue(`0,Serilog.Events.ScalarValue)
  - Serilog.Data.LogEventPropertyValueVisitor`2.VisitSequenceValue(`0,Serilog.Events.SequenceValue)
  - Serilog.Data.LogEventPropertyValueVisitor`2.VisitStructureValue(`0,Serilog.Events.StructureValue)
  - Serilog.Data.LogEventPropertyValueVisitor`2.VisitUnsupportedValue(`0,Serilog.Events.LogEventPropertyValue)
  langs:
  - csharp
  - vb
  name: LogEventPropertyValueVisitor<TState, TResult>
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>
  type: Class
  assemblies:
  - Serilog
  namespace: Serilog.Data
  summary: >-
    An abstract base class for visitors that walk data in the

    <xref href="Serilog.Events.LogEventPropertyValue" data-throw-if-not-resolved="false"></xref> format. Subclasses, by

    overriding appropriate methods, may search for, transform,

    or print the value structures being visited.
  remarks: >-
    Stateless, designed to accommodate allocation-free visiting of multiple

    values by the same visitor instance.
  example: []
  syntax:
    content: public abstract class LogEventPropertyValueVisitor<TState, TResult>
    typeParameters:
    - id: TState
      description: >-
        The type of a state object passed through
                    the visiting process.
    - id: TResult
      description: >-
        The type of the result generated by visiting
                    a node.
    content.vb: Public MustInherit Class LogEventPropertyValueVisitor(Of TState, TResult)
  inheritance:
  - System.Object
  derivedClasses:
  - Serilog.Data.LogEventPropertyValueRewriter`1
  - Serilog.Formatting.Json.JsonValueFormatter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult)
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult)
  name.vb: LogEventPropertyValueVisitor(Of TState, TResult)
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.Visit(`0,Serilog.Events.LogEventPropertyValue)
  commentId: M:Serilog.Data.LogEventPropertyValueVisitor`2.Visit(`0,Serilog.Events.LogEventPropertyValue)
  id: Visit(`0,Serilog.Events.LogEventPropertyValue)
  parent: Serilog.Data.LogEventPropertyValueVisitor`2
  langs:
  - csharp
  - vb
  name: Visit(TState, LogEventPropertyValue)
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.Visit(TState, LogEventPropertyValue)
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.Visit(TState, Serilog.Events.LogEventPropertyValue)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Data
  summary: >-
    Visit the root node type. This method delegates to

    a concrete Visit*Value() method appropriate for the value.
  example: []
  syntax:
    content: protected virtual TResult Visit(TState state, LogEventPropertyValue value)
    parameters:
    - id: state
      type: '{TState}'
      description: Operation state.
    - id: value
      type: Serilog.Events.LogEventPropertyValue
      description: The value to visit.
    return:
      type: '{TResult}'
      description: The result of visiting <code class="paramref">value</code>.
    content.vb: Protected Overridable Function Visit(state As TState, value As LogEventPropertyValue) As TResult
  overload: Serilog.Data.LogEventPropertyValueVisitor`2.Visit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code class="paramref">value</code> is <pre><code class="lang-csharp">null</code></pre>
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).Visit(TState, LogEventPropertyValue)
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).Visit(TState, Serilog.Events.LogEventPropertyValue)
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.VisitScalarValue(`0,Serilog.Events.ScalarValue)
  commentId: M:Serilog.Data.LogEventPropertyValueVisitor`2.VisitScalarValue(`0,Serilog.Events.ScalarValue)
  id: VisitScalarValue(`0,Serilog.Events.ScalarValue)
  parent: Serilog.Data.LogEventPropertyValueVisitor`2
  langs:
  - csharp
  - vb
  name: VisitScalarValue(TState, ScalarValue)
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.VisitScalarValue(TState, ScalarValue)
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.VisitScalarValue(TState, Serilog.Events.ScalarValue)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Data
  summary: Visit a <xref href="Serilog.Events.ScalarValue" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: protected abstract TResult VisitScalarValue(TState state, ScalarValue scalar)
    parameters:
    - id: state
      type: '{TState}'
      description: Operation state.
    - id: scalar
      type: Serilog.Events.ScalarValue
      description: The value to visit.
    return:
      type: '{TResult}'
      description: The result of visiting <code class="paramref">scalar</code>.
    content.vb: Protected MustOverride Function VisitScalarValue(state As TState, scalar As ScalarValue) As TResult
  overload: Serilog.Data.LogEventPropertyValueVisitor`2.VisitScalarValue*
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).VisitScalarValue(TState, ScalarValue)
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).VisitScalarValue(TState, Serilog.Events.ScalarValue)
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.VisitSequenceValue(`0,Serilog.Events.SequenceValue)
  commentId: M:Serilog.Data.LogEventPropertyValueVisitor`2.VisitSequenceValue(`0,Serilog.Events.SequenceValue)
  id: VisitSequenceValue(`0,Serilog.Events.SequenceValue)
  parent: Serilog.Data.LogEventPropertyValueVisitor`2
  langs:
  - csharp
  - vb
  name: VisitSequenceValue(TState, SequenceValue)
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.VisitSequenceValue(TState, SequenceValue)
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.VisitSequenceValue(TState, Serilog.Events.SequenceValue)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Data
  summary: Visit a <xref href="Serilog.Events.SequenceValue" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: protected abstract TResult VisitSequenceValue(TState state, SequenceValue sequence)
    parameters:
    - id: state
      type: '{TState}'
      description: Operation state.
    - id: sequence
      type: Serilog.Events.SequenceValue
      description: The value to visit.
    return:
      type: '{TResult}'
      description: The result of visiting <code class="paramref">sequence</code>.
    content.vb: Protected MustOverride Function VisitSequenceValue(state As TState, sequence As SequenceValue) As TResult
  overload: Serilog.Data.LogEventPropertyValueVisitor`2.VisitSequenceValue*
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).VisitSequenceValue(TState, SequenceValue)
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).VisitSequenceValue(TState, Serilog.Events.SequenceValue)
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.VisitStructureValue(`0,Serilog.Events.StructureValue)
  commentId: M:Serilog.Data.LogEventPropertyValueVisitor`2.VisitStructureValue(`0,Serilog.Events.StructureValue)
  id: VisitStructureValue(`0,Serilog.Events.StructureValue)
  parent: Serilog.Data.LogEventPropertyValueVisitor`2
  langs:
  - csharp
  - vb
  name: VisitStructureValue(TState, StructureValue)
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.VisitStructureValue(TState, StructureValue)
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.VisitStructureValue(TState, Serilog.Events.StructureValue)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Data
  summary: Visit a <xref href="Serilog.Events.StructureValue" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: protected abstract TResult VisitStructureValue(TState state, StructureValue structure)
    parameters:
    - id: state
      type: '{TState}'
      description: Operation state.
    - id: structure
      type: Serilog.Events.StructureValue
      description: The value to visit.
    return:
      type: '{TResult}'
      description: The result of visiting <code class="paramref">structure</code>.
    content.vb: Protected MustOverride Function VisitStructureValue(state As TState, [structure] As StructureValue) As TResult
  overload: Serilog.Data.LogEventPropertyValueVisitor`2.VisitStructureValue*
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).VisitStructureValue(TState, StructureValue)
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).VisitStructureValue(TState, Serilog.Events.StructureValue)
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.VisitDictionaryValue(`0,Serilog.Events.DictionaryValue)
  commentId: M:Serilog.Data.LogEventPropertyValueVisitor`2.VisitDictionaryValue(`0,Serilog.Events.DictionaryValue)
  id: VisitDictionaryValue(`0,Serilog.Events.DictionaryValue)
  parent: Serilog.Data.LogEventPropertyValueVisitor`2
  langs:
  - csharp
  - vb
  name: VisitDictionaryValue(TState, DictionaryValue)
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.VisitDictionaryValue(TState, DictionaryValue)
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.VisitDictionaryValue(TState, Serilog.Events.DictionaryValue)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Data
  summary: Visit a <xref href="Serilog.Events.DictionaryValue" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: protected abstract TResult VisitDictionaryValue(TState state, DictionaryValue dictionary)
    parameters:
    - id: state
      type: '{TState}'
      description: Operation state.
    - id: dictionary
      type: Serilog.Events.DictionaryValue
      description: The value to visit.
    return:
      type: '{TResult}'
      description: The result of visiting <code class="paramref">dictionary</code>.
    content.vb: Protected MustOverride Function VisitDictionaryValue(state As TState, dictionary As DictionaryValue) As TResult
  overload: Serilog.Data.LogEventPropertyValueVisitor`2.VisitDictionaryValue*
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).VisitDictionaryValue(TState, DictionaryValue)
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).VisitDictionaryValue(TState, Serilog.Events.DictionaryValue)
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.VisitUnsupportedValue(`0,Serilog.Events.LogEventPropertyValue)
  commentId: M:Serilog.Data.LogEventPropertyValueVisitor`2.VisitUnsupportedValue(`0,Serilog.Events.LogEventPropertyValue)
  id: VisitUnsupportedValue(`0,Serilog.Events.LogEventPropertyValue)
  parent: Serilog.Data.LogEventPropertyValueVisitor`2
  langs:
  - csharp
  - vb
  name: VisitUnsupportedValue(TState, LogEventPropertyValue)
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.VisitUnsupportedValue(TState, LogEventPropertyValue)
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.VisitUnsupportedValue(TState, Serilog.Events.LogEventPropertyValue)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Data
  summary: Visit a value of an unsupported type. Always throws <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>, when is not overridden.
  example: []
  syntax:
    content: protected virtual TResult VisitUnsupportedValue(TState state, LogEventPropertyValue value)
    parameters:
    - id: state
      type: '{TState}'
      description: Operation state.
    - id: value
      type: Serilog.Events.LogEventPropertyValue
      description: The value to visit.
    return:
      type: '{TResult}'
      description: The result of visiting <code class="paramref">value</code>.
    content.vb: Protected Overridable Function VisitUnsupportedValue(state As TState, value As LogEventPropertyValue) As TResult
  overload: Serilog.Data.LogEventPropertyValueVisitor`2.VisitUnsupportedValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code class="paramref">value</code> is <pre><code class="lang-csharp">null</code></pre>
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Always
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).VisitUnsupportedValue(TState, LogEventPropertyValue)
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).VisitUnsupportedValue(TState, Serilog.Events.LogEventPropertyValue)
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.#ctor
  commentId: M:Serilog.Data.LogEventPropertyValueVisitor`2.#ctor
  id: '#ctor'
  parent: Serilog.Data.LogEventPropertyValueVisitor`2
  langs:
  - csharp
  - vb
  name: LogEventPropertyValueVisitor()
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.LogEventPropertyValueVisitor()
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.LogEventPropertyValueVisitor()
  type: Constructor
  assemblies:
  - Serilog
  namespace: Serilog.Data
  syntax:
    content: protected LogEventPropertyValueVisitor()
    content.vb: Protected Sub New()
  overload: Serilog.Data.LogEventPropertyValueVisitor`2.#ctor*
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).New()
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).New()
  name.vb: New()
references:
- uid: Serilog.Events.LogEventPropertyValue
  commentId: T:Serilog.Events.LogEventPropertyValue
  parent: Serilog.Events
  isExternal: true
  href: Serilog.Events.LogEventPropertyValue.html
  name: LogEventPropertyValue
  nameWithType: LogEventPropertyValue
  fullName: Serilog.Events.LogEventPropertyValue
- uid: Serilog.Data
  commentId: N:Serilog.Data
  isExternal: true
  href: Serilog.html
  name: Serilog.Data
  nameWithType: Serilog.Data
  fullName: Serilog.Data
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Data
    name: Data
    isExternal: true
    href: Serilog.Data.html
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Data
    name: Data
    isExternal: true
    href: Serilog.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: Serilog.Events
  commentId: N:Serilog.Events
  isExternal: true
  href: Serilog.html
  name: Serilog.Events
  nameWithType: Serilog.Events
  fullName: Serilog.Events
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Events
    name: Events
    isExternal: true
    href: Serilog.Events.html
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Events
    name: Events
    isExternal: true
    href: Serilog.Events.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.Visit*
  commentId: Overload:Serilog.Data.LogEventPropertyValueVisitor`2.Visit
  isExternal: true
  href: Serilog.Data.LogEventPropertyValueVisitor-2.html#Serilog_Data_LogEventPropertyValueVisitor_2_Visit__0_Serilog_Events_LogEventPropertyValue_
  name: Visit
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.Visit
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.Visit
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).Visit
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).Visit
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Serilog.Events.ScalarValue
  commentId: T:Serilog.Events.ScalarValue
  parent: Serilog.Events
  isExternal: true
  href: Serilog.Events.ScalarValue.html
  name: ScalarValue
  nameWithType: ScalarValue
  fullName: Serilog.Events.ScalarValue
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.VisitScalarValue*
  commentId: Overload:Serilog.Data.LogEventPropertyValueVisitor`2.VisitScalarValue
  isExternal: true
  href: Serilog.Data.LogEventPropertyValueVisitor-2.html#Serilog_Data_LogEventPropertyValueVisitor_2_VisitScalarValue__0_Serilog_Events_ScalarValue_
  name: VisitScalarValue
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.VisitScalarValue
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.VisitScalarValue
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).VisitScalarValue
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).VisitScalarValue
- uid: Serilog.Events.SequenceValue
  commentId: T:Serilog.Events.SequenceValue
  parent: Serilog.Events
  isExternal: true
  href: Serilog.Events.SequenceValue.html
  name: SequenceValue
  nameWithType: SequenceValue
  fullName: Serilog.Events.SequenceValue
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.VisitSequenceValue*
  commentId: Overload:Serilog.Data.LogEventPropertyValueVisitor`2.VisitSequenceValue
  isExternal: true
  href: Serilog.Data.LogEventPropertyValueVisitor-2.html#Serilog_Data_LogEventPropertyValueVisitor_2_VisitSequenceValue__0_Serilog_Events_SequenceValue_
  name: VisitSequenceValue
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.VisitSequenceValue
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.VisitSequenceValue
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).VisitSequenceValue
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).VisitSequenceValue
- uid: Serilog.Events.StructureValue
  commentId: T:Serilog.Events.StructureValue
  parent: Serilog.Events
  isExternal: true
  href: Serilog.Events.StructureValue.html
  name: StructureValue
  nameWithType: StructureValue
  fullName: Serilog.Events.StructureValue
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.VisitStructureValue*
  commentId: Overload:Serilog.Data.LogEventPropertyValueVisitor`2.VisitStructureValue
  isExternal: true
  href: Serilog.Data.LogEventPropertyValueVisitor-2.html#Serilog_Data_LogEventPropertyValueVisitor_2_VisitStructureValue__0_Serilog_Events_StructureValue_
  name: VisitStructureValue
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.VisitStructureValue
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.VisitStructureValue
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).VisitStructureValue
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).VisitStructureValue
- uid: Serilog.Events.DictionaryValue
  commentId: T:Serilog.Events.DictionaryValue
  parent: Serilog.Events
  isExternal: true
  href: Serilog.Events.DictionaryValue.html
  name: DictionaryValue
  nameWithType: DictionaryValue
  fullName: Serilog.Events.DictionaryValue
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.VisitDictionaryValue*
  commentId: Overload:Serilog.Data.LogEventPropertyValueVisitor`2.VisitDictionaryValue
  isExternal: true
  href: Serilog.Data.LogEventPropertyValueVisitor-2.html#Serilog_Data_LogEventPropertyValueVisitor_2_VisitDictionaryValue__0_Serilog_Events_DictionaryValue_
  name: VisitDictionaryValue
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.VisitDictionaryValue
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.VisitDictionaryValue
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).VisitDictionaryValue
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).VisitDictionaryValue
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.VisitUnsupportedValue*
  commentId: Overload:Serilog.Data.LogEventPropertyValueVisitor`2.VisitUnsupportedValue
  isExternal: true
  href: Serilog.Data.LogEventPropertyValueVisitor-2.html#Serilog_Data_LogEventPropertyValueVisitor_2_VisitUnsupportedValue__0_Serilog_Events_LogEventPropertyValue_
  name: VisitUnsupportedValue
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.VisitUnsupportedValue
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.VisitUnsupportedValue
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).VisitUnsupportedValue
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).VisitUnsupportedValue
- uid: Serilog.Data.LogEventPropertyValueVisitor`2.#ctor*
  commentId: Overload:Serilog.Data.LogEventPropertyValueVisitor`2.#ctor
  isExternal: true
  href: Serilog.Data.LogEventPropertyValueVisitor-2.html#Serilog_Data_LogEventPropertyValueVisitor_2__ctor
  name: LogEventPropertyValueVisitor
  nameWithType: LogEventPropertyValueVisitor<TState, TResult>.LogEventPropertyValueVisitor
  fullName: Serilog.Data.LogEventPropertyValueVisitor<TState, TResult>.LogEventPropertyValueVisitor
  nameWithType.vb: LogEventPropertyValueVisitor(Of TState, TResult).New
  fullName.vb: Serilog.Data.LogEventPropertyValueVisitor(Of TState, TResult).New
  name.vb: New
