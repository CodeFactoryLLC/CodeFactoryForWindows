### YamlMime:ManagedReference
items:
- uid: Serilog.Configuration.LoggerFilterConfiguration
  commentId: T:Serilog.Configuration.LoggerFilterConfiguration
  id: LoggerFilterConfiguration
  parent: Serilog.Configuration
  children:
  - Serilog.Configuration.LoggerFilterConfiguration.ByExcluding(System.Func{Serilog.Events.LogEvent,System.Boolean})
  - Serilog.Configuration.LoggerFilterConfiguration.ByIncludingOnly(System.Func{Serilog.Events.LogEvent,System.Boolean})
  - Serilog.Configuration.LoggerFilterConfiguration.With(Serilog.Core.ILogEventFilter[])
  - Serilog.Configuration.LoggerFilterConfiguration.With``1
  langs:
  - csharp
  - vb
  name: LoggerFilterConfiguration
  nameWithType: LoggerFilterConfiguration
  fullName: Serilog.Configuration.LoggerFilterConfiguration
  type: Class
  assemblies:
  - Serilog
  namespace: Serilog.Configuration
  summary: Controls filter configuration.
  example: []
  syntax:
    content: public class LoggerFilterConfiguration
    content.vb: Public Class LoggerFilterConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Serilog.Configuration.LoggerFilterConfiguration.With(Serilog.Core.ILogEventFilter[])
  commentId: M:Serilog.Configuration.LoggerFilterConfiguration.With(Serilog.Core.ILogEventFilter[])
  id: With(Serilog.Core.ILogEventFilter[])
  parent: Serilog.Configuration.LoggerFilterConfiguration
  langs:
  - csharp
  - vb
  name: With(params ILogEventFilter[])
  nameWithType: LoggerFilterConfiguration.With(params ILogEventFilter[])
  fullName: Serilog.Configuration.LoggerFilterConfiguration.With(params Serilog.Core.ILogEventFilter[])
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Configuration
  summary: Filter out log events from the stream based on the provided filter.
  example: []
  syntax:
    content: public LoggerConfiguration With(params ILogEventFilter[] filters)
    parameters:
    - id: filters
      type: Serilog.Core.ILogEventFilter[]
      description: The filters to apply.
    return:
      type: Serilog.LoggerConfiguration
      description: Configuration object allowing method chaining.
    content.vb: Public Function [With](ParamArray filters As ILogEventFilter()) As LoggerConfiguration
  overload: Serilog.Configuration.LoggerFilterConfiguration.With*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code class="paramref">filters</code> is <pre><code class="lang-csharp">null</code></pre>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: When any element of <code class="paramref">filters</code> is <pre><code class="lang-csharp">null</code></pre>
  nameWithType.vb: LoggerFilterConfiguration.With(ParamArray ILogEventFilter())
  fullName.vb: Serilog.Configuration.LoggerFilterConfiguration.With(ParamArray Serilog.Core.ILogEventFilter())
  name.vb: With(ParamArray ILogEventFilter())
- uid: Serilog.Configuration.LoggerFilterConfiguration.With``1
  commentId: M:Serilog.Configuration.LoggerFilterConfiguration.With``1
  id: With``1
  parent: Serilog.Configuration.LoggerFilterConfiguration
  langs:
  - csharp
  - vb
  name: With<TFilter>()
  nameWithType: LoggerFilterConfiguration.With<TFilter>()
  fullName: Serilog.Configuration.LoggerFilterConfiguration.With<TFilter>()
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Configuration
  summary: Filter out log events from the stream based on the provided filter.
  example: []
  syntax:
    content: 'public LoggerConfiguration With<TFilter>() where TFilter : ILogEventFilter, new()'
    typeParameters:
    - id: TFilter
      description: The filters to apply.
    return:
      type: Serilog.LoggerConfiguration
      description: Configuration object allowing method chaining.
    content.vb: Public Function [With](Of TFilter As {ILogEventFilter, New})() As LoggerConfiguration
  overload: Serilog.Configuration.LoggerFilterConfiguration.With*
  nameWithType.vb: LoggerFilterConfiguration.With(Of TFilter)()
  fullName.vb: Serilog.Configuration.LoggerFilterConfiguration.With(Of TFilter)()
  name.vb: With(Of TFilter)()
- uid: Serilog.Configuration.LoggerFilterConfiguration.ByExcluding(System.Func{Serilog.Events.LogEvent,System.Boolean})
  commentId: M:Serilog.Configuration.LoggerFilterConfiguration.ByExcluding(System.Func{Serilog.Events.LogEvent,System.Boolean})
  id: ByExcluding(System.Func{Serilog.Events.LogEvent,System.Boolean})
  parent: Serilog.Configuration.LoggerFilterConfiguration
  langs:
  - csharp
  - vb
  name: ByExcluding(Func<LogEvent, bool>)
  nameWithType: LoggerFilterConfiguration.ByExcluding(Func<LogEvent, bool>)
  fullName: Serilog.Configuration.LoggerFilterConfiguration.ByExcluding(System.Func<Serilog.Events.LogEvent, bool>)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Configuration
  summary: Filter out log events that match a predicate.
  example: []
  syntax:
    content: public LoggerConfiguration ByExcluding(Func<LogEvent, bool> exclusionPredicate)
    parameters:
    - id: exclusionPredicate
      type: System.Func{Serilog.Events.LogEvent,System.Boolean}
      description: >-
        Function that returns true when an event
                    should be excluded (silenced).
    return:
      type: Serilog.LoggerConfiguration
      description: Configuration object allowing method chaining.
    content.vb: Public Function ByExcluding(exclusionPredicate As Func(Of LogEvent, Boolean)) As LoggerConfiguration
  overload: Serilog.Configuration.LoggerFilterConfiguration.ByExcluding*
  nameWithType.vb: LoggerFilterConfiguration.ByExcluding(Func(Of LogEvent, Boolean))
  fullName.vb: Serilog.Configuration.LoggerFilterConfiguration.ByExcluding(System.Func(Of Serilog.Events.LogEvent, Boolean))
  name.vb: ByExcluding(Func(Of LogEvent, Boolean))
- uid: Serilog.Configuration.LoggerFilterConfiguration.ByIncludingOnly(System.Func{Serilog.Events.LogEvent,System.Boolean})
  commentId: M:Serilog.Configuration.LoggerFilterConfiguration.ByIncludingOnly(System.Func{Serilog.Events.LogEvent,System.Boolean})
  id: ByIncludingOnly(System.Func{Serilog.Events.LogEvent,System.Boolean})
  parent: Serilog.Configuration.LoggerFilterConfiguration
  langs:
  - csharp
  - vb
  name: ByIncludingOnly(Func<LogEvent, bool>)
  nameWithType: LoggerFilterConfiguration.ByIncludingOnly(Func<LogEvent, bool>)
  fullName: Serilog.Configuration.LoggerFilterConfiguration.ByIncludingOnly(System.Func<Serilog.Events.LogEvent, bool>)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Configuration
  summary: Filter log events to include only those that match a predicate.
  example: []
  syntax:
    content: public LoggerConfiguration ByIncludingOnly(Func<LogEvent, bool> inclusionPredicate)
    parameters:
    - id: inclusionPredicate
      type: System.Func{Serilog.Events.LogEvent,System.Boolean}
      description: >-
        Function that returns true when an event
                    should be included (emitted).
    return:
      type: Serilog.LoggerConfiguration
      description: Configuration object allowing method chaining.
    content.vb: Public Function ByIncludingOnly(inclusionPredicate As Func(Of LogEvent, Boolean)) As LoggerConfiguration
  overload: Serilog.Configuration.LoggerFilterConfiguration.ByIncludingOnly*
  nameWithType.vb: LoggerFilterConfiguration.ByIncludingOnly(Func(Of LogEvent, Boolean))
  fullName.vb: Serilog.Configuration.LoggerFilterConfiguration.ByIncludingOnly(System.Func(Of Serilog.Events.LogEvent, Boolean))
  name.vb: ByIncludingOnly(Func(Of LogEvent, Boolean))
references:
- uid: Serilog.Configuration
  commentId: N:Serilog.Configuration
  isExternal: true
  href: Serilog.html
  name: Serilog.Configuration
  nameWithType: Serilog.Configuration
  fullName: Serilog.Configuration
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Configuration
    name: Configuration
    isExternal: true
    href: Serilog.Configuration.html
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Configuration
    name: Configuration
    isExternal: true
    href: Serilog.Configuration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Serilog.Configuration.LoggerFilterConfiguration.With*
  commentId: Overload:Serilog.Configuration.LoggerFilterConfiguration.With
  isExternal: true
  href: Serilog.Configuration.LoggerFilterConfiguration.html#Serilog_Configuration_LoggerFilterConfiguration_With_Serilog_Core_ILogEventFilter___
  name: With
  nameWithType: LoggerFilterConfiguration.With
  fullName: Serilog.Configuration.LoggerFilterConfiguration.With
- uid: Serilog.Core.ILogEventFilter[]
  isExternal: true
  href: Serilog.Core.ILogEventFilter.html
  name: ILogEventFilter[]
  nameWithType: ILogEventFilter[]
  fullName: Serilog.Core.ILogEventFilter[]
  nameWithType.vb: ILogEventFilter()
  fullName.vb: Serilog.Core.ILogEventFilter()
  name.vb: ILogEventFilter()
  spec.csharp:
  - uid: Serilog.Core.ILogEventFilter
    name: ILogEventFilter
    isExternal: true
    href: Serilog.Core.ILogEventFilter.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Serilog.Core.ILogEventFilter
    name: ILogEventFilter
    isExternal: true
    href: Serilog.Core.ILogEventFilter.html
  - name: (
  - name: )
- uid: Serilog.LoggerConfiguration
  commentId: T:Serilog.LoggerConfiguration
  parent: Serilog
  isExternal: true
  href: Serilog.LoggerConfiguration.html
  name: LoggerConfiguration
  nameWithType: LoggerConfiguration
  fullName: Serilog.LoggerConfiguration
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  href: Serilog.html
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Serilog.Configuration.LoggerFilterConfiguration.ByExcluding*
  commentId: Overload:Serilog.Configuration.LoggerFilterConfiguration.ByExcluding
  isExternal: true
  href: Serilog.Configuration.LoggerFilterConfiguration.html#Serilog_Configuration_LoggerFilterConfiguration_ByExcluding_System_Func_Serilog_Events_LogEvent_System_Boolean__
  name: ByExcluding
  nameWithType: LoggerFilterConfiguration.ByExcluding
  fullName: Serilog.Configuration.LoggerFilterConfiguration.ByExcluding
- uid: System.Func{Serilog.Events.LogEvent,System.Boolean}
  commentId: T:System.Func{Serilog.Events.LogEvent,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<LogEvent, bool>
  nameWithType: Func<LogEvent, bool>
  fullName: System.Func<Serilog.Events.LogEvent, bool>
  nameWithType.vb: Func(Of LogEvent, Boolean)
  fullName.vb: System.Func(Of Serilog.Events.LogEvent, Boolean)
  name.vb: Func(Of LogEvent, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Serilog.Events.LogEvent
    name: LogEvent
    isExternal: true
    href: Serilog.Events.LogEvent.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Serilog.Events.LogEvent
    name: LogEvent
    isExternal: true
    href: Serilog.Events.LogEvent.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Serilog.Configuration.LoggerFilterConfiguration.ByIncludingOnly*
  commentId: Overload:Serilog.Configuration.LoggerFilterConfiguration.ByIncludingOnly
  isExternal: true
  href: Serilog.Configuration.LoggerFilterConfiguration.html#Serilog_Configuration_LoggerFilterConfiguration_ByIncludingOnly_System_Func_Serilog_Events_LogEvent_System_Boolean__
  name: ByIncludingOnly
  nameWithType: LoggerFilterConfiguration.ByIncludingOnly
  fullName: Serilog.Configuration.LoggerFilterConfiguration.ByIncludingOnly
