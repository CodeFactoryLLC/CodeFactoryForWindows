### YamlMime:ManagedReference
items:
- uid: CodeFactory.ModelStore`1
  commentId: T:CodeFactory.ModelStore`1
  id: ModelStore`1
  parent: CodeFactory
  children:
  - CodeFactory.ModelStore`1.#ctor
  - CodeFactory.ModelStore`1.AddModel(System.String,`0)
  - CodeFactory.ModelStore`1.GetModel(System.String)
  langs:
  - csharp
  - vb
  name: ModelStore<T>
  nameWithType: ModelStore<T>
  fullName: CodeFactory.ModelStore<T>
  type: Class
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory/ModelStore.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Stores code factory models so they can be extracted when needed.
  example: []
  syntax:
    content: 'public class ModelStore<T> where T : class'
    typeParameters:
    - id: T
      description: The type of model that is being stored.
    content.vb: Public Class ModelStore(Of T As Class)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  nameWithType.vb: ModelStore(Of T)
  fullName.vb: CodeFactory.ModelStore(Of T)
  name.vb: ModelStore(Of T)
- uid: CodeFactory.ModelStore`1.#ctor
  commentId: M:CodeFactory.ModelStore`1.#ctor
  id: '#ctor'
  parent: CodeFactory.ModelStore`1
  langs:
  - csharp
  - vb
  name: ModelStore()
  nameWithType: ModelStore<T>.ModelStore()
  fullName: CodeFactory.ModelStore<T>.ModelStore()
  type: Constructor
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory/ModelStore.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Initialization of the model store
  example: []
  syntax:
    content: public ModelStore()
    content.vb: Public Sub New()
  overload: CodeFactory.ModelStore`1.#ctor*
  nameWithType.vb: ModelStore(Of T).New()
  fullName.vb: CodeFactory.ModelStore(Of T).New()
  name.vb: New()
- uid: CodeFactory.ModelStore`1.GetModel(System.String)
  commentId: M:CodeFactory.ModelStore`1.GetModel(System.String)
  id: GetModel(System.String)
  parent: CodeFactory.ModelStore`1
  langs:
  - csharp
  - vb
  name: GetModel(string)
  nameWithType: ModelStore<T>.GetModel(string)
  fullName: CodeFactory.ModelStore<T>.GetModel(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory/ModelStore.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Gets a target model from the store.
  remarks: Thread safe operation.
  example: []
  syntax:
    content: public T GetModel(string index)
    parameters:
    - id: index
      type: System.String
      description: Index number of the model to load.
    return:
      type: '{T}'
      description: The stored model or null if the model could not be returned.
    content.vb: Public Function GetModel(index As String) As T
  overload: CodeFactory.ModelStore`1.GetModel*
  nameWithType.vb: ModelStore(Of T).GetModel(String)
  fullName.vb: CodeFactory.ModelStore(Of T).GetModel(String)
  name.vb: GetModel(String)
- uid: CodeFactory.ModelStore`1.AddModel(System.String,`0)
  commentId: M:CodeFactory.ModelStore`1.AddModel(System.String,`0)
  id: AddModel(System.String,`0)
  parent: CodeFactory.ModelStore`1
  langs:
  - csharp
  - vb
  name: AddModel(string, T)
  nameWithType: ModelStore<T>.AddModel(string, T)
  fullName: CodeFactory.ModelStore<T>.AddModel(string, T)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory/ModelStore.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Adds a model to the model store.
  example: []
  syntax:
    content: public void AddModel(string index, T model)
    parameters:
    - id: index
      type: System.String
      description: The unique index for the model.
    - id: model
      type: '{T}'
      description: The model to be added to the store. The model cannot be null otherwise it will not be added.
    content.vb: Public Sub AddModel(index As String, model As T)
  overload: CodeFactory.ModelStore`1.AddModel*
  nameWithType.vb: ModelStore(Of T).AddModel(String, T)
  fullName.vb: CodeFactory.ModelStore(Of T).AddModel(String, T)
  name.vb: AddModel(String, T)
references:
- uid: CodeFactory
  commentId: N:CodeFactory
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory
  nameWithType: CodeFactory
  fullName: CodeFactory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CodeFactory.ModelStore`1.#ctor*
  commentId: Overload:CodeFactory.ModelStore`1.#ctor
  isExternal: true
  href: CodeFactory.ModelStore-1.html#CodeFactory_ModelStore_1__ctor
  name: ModelStore
  nameWithType: ModelStore<T>.ModelStore
  fullName: CodeFactory.ModelStore<T>.ModelStore
  nameWithType.vb: ModelStore(Of T).New
  fullName.vb: CodeFactory.ModelStore(Of T).New
  name.vb: New
- uid: CodeFactory.ModelStore`1.GetModel*
  commentId: Overload:CodeFactory.ModelStore`1.GetModel
  isExternal: true
  href: CodeFactory.ModelStore-1.html#CodeFactory_ModelStore_1_GetModel_System_String_
  name: GetModel
  nameWithType: ModelStore<T>.GetModel
  fullName: CodeFactory.ModelStore<T>.GetModel
  nameWithType.vb: ModelStore(Of T).GetModel
  fullName.vb: CodeFactory.ModelStore(Of T).GetModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: CodeFactory.ModelStore`1.AddModel*
  commentId: Overload:CodeFactory.ModelStore`1.AddModel
  isExternal: true
  href: CodeFactory.ModelStore-1.html#CodeFactory_ModelStore_1_AddModel_System_String__0_
  name: AddModel
  nameWithType: ModelStore<T>.AddModel
  fullName: CodeFactory.ModelStore<T>.AddModel
  nameWithType.vb: ModelStore(Of T).AddModel
  fullName.vb: CodeFactory.ModelStore(Of T).AddModel
