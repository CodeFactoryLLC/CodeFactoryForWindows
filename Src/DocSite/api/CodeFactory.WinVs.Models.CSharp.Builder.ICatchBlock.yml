### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
  id: ICatchBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  children:
  - CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.String,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.LoggerBlock
  langs:
  - csharp
  - vb
  name: ICatchBlock
  nameWithType: ICatchBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
  type: Interface
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ICatchBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Contract definition all catch block implementation should implement.
  example: []
  syntax:
    content: 'public interface ICatchBlock : IBlock'
    content.vb: Public Interface ICatchBlock Inherits IBlock
  inheritedMembers:
  - CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.String)
  id: GenerateCatchBlock(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
  langs:
  - csharp
  - vb
  name: GenerateCatchBlock(string)
  nameWithType: ICatchBlock.GenerateCatchBlock(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ICatchBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the catch block
  example: []
  syntax:
    content: string GenerateCatchBlock(string memberName = null)
    parameters:
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the catch block is implemented in.
    return:
      type: System.String
      description: Returns the generated catch block
    content.vb: Function GenerateCatchBlock(memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock*
  nameWithType.vb: ICatchBlock.GenerateCatchBlock(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(String)
  name.vb: GenerateCatchBlock(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.String,System.String)
  id: GenerateCatchBlock(System.String,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
  langs:
  - csharp
  - vb
  name: GenerateCatchBlock(string, string)
  nameWithType: ICatchBlock.GenerateCatchBlock(string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(string, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ICatchBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the catch block
  example: []
  syntax:
    content: string GenerateCatchBlock(string syntax, string memberName = null)
    parameters:
    - id: syntax
      type: System.String
      description: Syntax to be injected into the catch block.
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the catch block is implemented in.
    return:
      type: System.String
      description: Returns the generated catch block
    content.vb: Function GenerateCatchBlock(syntax As String, memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock*
  nameWithType.vb: ICatchBlock.GenerateCatchBlock(String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(String, String)
  name.vb: GenerateCatchBlock(String, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  id: GenerateCatchBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
  langs:
  - csharp
  - vb
  name: GenerateCatchBlock(IEnumerable<NamedSyntax>, string)
  nameWithType: ICatchBlock.GenerateCatchBlock(IEnumerable<NamedSyntax>, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ICatchBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the catch block
  example: []
  syntax:
    content: string GenerateCatchBlock(IEnumerable<NamedSyntax> multipleSyntax, string memberName = null)
    parameters:
    - id: multipleSyntax
      type: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
      description: Multiple syntax statements has been provided to be used by the catch block.
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the catch block is implemented in.
    return:
      type: System.String
      description: Returns the generated catch block
    content.vb: Function GenerateCatchBlock(multipleSyntax As IEnumerable(Of NamedSyntax), memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock*
  nameWithType.vb: ICatchBlock.GenerateCatchBlock(IEnumerable(Of NamedSyntax), String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax), String)
  name.vb: GenerateCatchBlock(IEnumerable(Of NamedSyntax), String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  id: GenerateCatchBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
  langs:
  - csharp
  - vb
  name: GenerateCatchBlock(string, IEnumerable<NamedSyntax>, string)
  nameWithType: ICatchBlock.GenerateCatchBlock(string, IEnumerable<NamedSyntax>, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(string, System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ICatchBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the Catch block
  example: []
  syntax:
    content: string GenerateCatchBlock(string syntax, IEnumerable<NamedSyntax> multipleSyntax, string memberName = null)
    parameters:
    - id: syntax
      type: System.String
      description: Syntax to be injected into the Catch block.
    - id: multipleSyntax
      type: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
      description: Multiple syntax statements has been provided to be used by the Catch block.
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the catch block is implemented in.
    return:
      type: System.String
      description: Returns the generated catch block
    content.vb: Function GenerateCatchBlock(syntax As String, multipleSyntax As IEnumerable(Of NamedSyntax), memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock*
  nameWithType.vb: ICatchBlock.GenerateCatchBlock(String, IEnumerable(Of NamedSyntax), String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock(String, System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax), String)
  name.vb: GenerateCatchBlock(String, IEnumerable(Of NamedSyntax), String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.LoggerBlock
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.LoggerBlock
  id: LoggerBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
  langs:
  - csharp
  - vb
  name: LoggerBlock
  nameWithType: ICatchBlock.LoggerBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.LoggerBlock
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ICatchBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: The logger block supporting the catch block, this is optional.
  example: []
  syntax:
    content: ILoggerBlock LoggerBlock { get; }
    parameters: []
    return:
      type: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
    content.vb: ReadOnly Property LoggerBlock As ILoggerBlock
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.LoggerBlock*
references:
- uid: CodeFactory.WinVs.Models.CSharp.Builder
  commentId: N:CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp.Builder
  nameWithType: CodeFactory.WinVs.Models.CSharp.Builder
  fullName: CodeFactory.WinVs.Models.CSharp.Builder
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.Builder
    name: Builder
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.Builder
    name: Builder
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.html
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
  parent: CodeFactory.WinVs.Models.CSharp.Builder.IBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_IBlock_BlockType
  name: BlockType
  nameWithType: IBlock.BlockType
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.IBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.html
  name: IBlock
  nameWithType: IBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ICatchBlock_GenerateCatchBlock_System_String_
  name: GenerateCatchBlock
  nameWithType: ICatchBlock.GenerateCatchBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.GenerateCatchBlock
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
  commentId: T:System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<NamedSyntax>
  nameWithType: IEnumerable<NamedSyntax>
  fullName: System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>
  nameWithType.vb: IEnumerable(Of NamedSyntax)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax)
  name.vb: IEnumerable(Of NamedSyntax)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    name: NamedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    name: NamedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.LoggerBlock*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.LoggerBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ICatchBlock_LoggerBlock
  name: LoggerBlock
  nameWithType: ICatchBlock.LoggerBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.LoggerBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock.html
  name: ILoggerBlock
  nameWithType: ILoggerBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
