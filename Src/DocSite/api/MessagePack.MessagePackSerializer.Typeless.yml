### YamlMime:ManagedReference
items:
- uid: MessagePack.MessagePackSerializer.Typeless
  commentId: T:MessagePack.MessagePackSerializer.Typeless
  id: MessagePackSerializer.Typeless
  parent: MessagePack
  children:
  - MessagePack.MessagePackSerializer.Typeless.DefaultOptions
  - MessagePack.MessagePackSerializer.Typeless.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  - MessagePack.MessagePackSerializer.Typeless.Deserialize(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Typeless.Deserialize(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Typeless.Deserialize(System.Memory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Typeless.DeserializeAsync(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Typeless.Serialize(MessagePack.MessagePackWriter@,System.Object,MessagePack.MessagePackSerializerOptions)
  - MessagePack.MessagePackSerializer.Typeless.Serialize(System.Buffers.IBufferWriter{System.Byte},System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Typeless.Serialize(System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Typeless.Serialize(System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Typeless.SerializeAsync(System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: MessagePackSerializer.Typeless
  nameWithType: MessagePackSerializer.Typeless
  fullName: MessagePack.MessagePackSerializer.Typeless
  type: Class
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: >-
    A convenience wrapper around <xref href="MessagePack.MessagePackSerializer" data-throw-if-not-resolved="false"></xref> that assumes all generic type arguments are <xref href="System.Object" data-throw-if-not-resolved="false"></xref>

    causing the type of top-level objects to be recorded in the MessagePack stream and thus deserialized to the original type automatically.
  example: []
  syntax:
    content: public static class MessagePackSerializer.Typeless
    content.vb: Public Module MessagePackSerializer.Typeless
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: MessagePack.MessagePackSerializer.Typeless.Serialize(MessagePack.MessagePackWriter@,System.Object,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.Typeless.Serialize(MessagePack.MessagePackWriter@,System.Object,MessagePack.MessagePackSerializerOptions)
  id: Serialize(MessagePack.MessagePackWriter@,System.Object,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: Serialize(ref MessagePackWriter, object?, MessagePackSerializerOptions?)
  nameWithType: MessagePackSerializer.Typeless.Serialize(ref MessagePackWriter, object?, MessagePackSerializerOptions?)
  fullName: MessagePack.MessagePackSerializer.Typeless.Serialize(ref MessagePack.MessagePackWriter, object?, MessagePack.MessagePackSerializerOptions?)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  syntax:
    content: public static void Serialize(ref MessagePackWriter writer, object? obj, MessagePackSerializerOptions? options = null)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: obj
      type: System.Object
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    content.vb: Public Shared Sub Serialize(writer As MessagePackWriter, obj As Object, options As MessagePackSerializerOptions = Nothing)
  overload: MessagePack.MessagePackSerializer.Typeless.Serialize*
  nameWithType.vb: MessagePackSerializer.Typeless.Serialize(MessagePackWriter, Object, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.Typeless.Serialize(MessagePack.MessagePackWriter, Object, MessagePack.MessagePackSerializerOptions)
  name.vb: Serialize(MessagePackWriter, Object, MessagePackSerializerOptions)
- uid: MessagePack.MessagePackSerializer.Typeless.Serialize(System.Buffers.IBufferWriter{System.Byte},System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Typeless.Serialize(System.Buffers.IBufferWriter{System.Byte},System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Serialize(System.Buffers.IBufferWriter{System.Byte},System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: Serialize(IBufferWriter<byte>, object?, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Typeless.Serialize(IBufferWriter<byte>, object?, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Typeless.Serialize(System.Buffers.IBufferWriter<byte>, object?, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  syntax:
    content: public static void Serialize(IBufferWriter<byte> writer, object? obj, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: writer
      type: System.Buffers.IBufferWriter{System.Byte}
    - id: obj
      type: System.Object
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    content.vb: Public Shared Sub Serialize(writer As IBufferWriter(Of Byte), obj As Object, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing)
  overload: MessagePack.MessagePackSerializer.Typeless.Serialize*
  nameWithType.vb: MessagePackSerializer.Typeless.Serialize(IBufferWriter(Of Byte), Object, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Typeless.Serialize(System.Buffers.IBufferWriter(Of Byte), Object, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(IBufferWriter(Of Byte), Object, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Typeless.Serialize(System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Typeless.Serialize(System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Serialize(System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: Serialize(object?, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Typeless.Serialize(object?, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Typeless.Serialize(object?, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  syntax:
    content: public static byte[] Serialize(object? obj, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: obj
      type: System.Object
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Serialize(obj As Object, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Byte()
  overload: MessagePack.MessagePackSerializer.Typeless.Serialize*
  nameWithType.vb: MessagePackSerializer.Typeless.Serialize(Object, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Typeless.Serialize(Object, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Object, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Typeless.Serialize(System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Typeless.Serialize(System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Serialize(System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: Serialize(Stream, object?, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Typeless.Serialize(Stream, object?, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Typeless.Serialize(System.IO.Stream, object?, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  syntax:
    content: public static void Serialize(Stream stream, object? obj, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: obj
      type: System.Object
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    content.vb: Public Shared Sub Serialize(stream As Stream, obj As Object, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing)
  overload: MessagePack.MessagePackSerializer.Typeless.Serialize*
  nameWithType.vb: MessagePackSerializer.Typeless.Serialize(Stream, Object, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Typeless.Serialize(System.IO.Stream, Object, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Stream, Object, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Typeless.SerializeAsync(System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Typeless.SerializeAsync(System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: SerializeAsync(System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: SerializeAsync(Stream, object?, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Typeless.SerializeAsync(Stream, object?, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Typeless.SerializeAsync(System.IO.Stream, object?, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  syntax:
    content: public static Task SerializeAsync(Stream stream, object? obj, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: obj
      type: System.Object
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SerializeAsync(stream As Stream, obj As Object, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: MessagePack.MessagePackSerializer.Typeless.SerializeAsync*
  nameWithType.vb: MessagePackSerializer.Typeless.SerializeAsync(Stream, Object, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Typeless.SerializeAsync(System.IO.Stream, Object, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: SerializeAsync(Stream, Object, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Typeless.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.Typeless.Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  id: Deserialize(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: Deserialize(ref MessagePackReader, MessagePackSerializerOptions?)
  nameWithType: MessagePackSerializer.Typeless.Deserialize(ref MessagePackReader, MessagePackSerializerOptions?)
  fullName: MessagePack.MessagePackSerializer.Typeless.Deserialize(ref MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions?)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  syntax:
    content: public static object? Deserialize(ref MessagePackReader reader, MessagePackSerializerOptions? options = null)
    parameters:
    - id: reader
      type: MessagePack.MessagePackReader
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    return:
      type: System.Object
    content.vb: Public Shared Function Deserialize(reader As MessagePackReader, options As MessagePackSerializerOptions = Nothing) As Object
  overload: MessagePack.MessagePackSerializer.Typeless.Deserialize*
  nameWithType.vb: MessagePackSerializer.Typeless.Deserialize(MessagePackReader, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.Typeless.Deserialize(MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  name.vb: Deserialize(MessagePackReader, MessagePackSerializerOptions)
- uid: MessagePack.MessagePackSerializer.Typeless.Deserialize(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Typeless.Deserialize(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Deserialize(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: Deserialize(in ReadOnlySequence<byte>, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Typeless.Deserialize(in ReadOnlySequence<byte>, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Typeless.Deserialize(in System.Buffers.ReadOnlySequence<byte>, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  syntax:
    content: public static object? Deserialize(in ReadOnlySequence<byte> byteSequence, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: byteSequence
      type: System.Buffers.ReadOnlySequence{System.Byte}
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Object
    content.vb: Public Shared Function Deserialize(byteSequence As ReadOnlySequence(Of Byte), options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Object
  overload: MessagePack.MessagePackSerializer.Typeless.Deserialize*
  nameWithType.vb: MessagePackSerializer.Typeless.Deserialize(ReadOnlySequence(Of Byte), MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Typeless.Deserialize(System.Buffers.ReadOnlySequence(Of Byte), MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(ReadOnlySequence(Of Byte), MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Typeless.Deserialize(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Typeless.Deserialize(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Deserialize(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: Deserialize(Stream, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Typeless.Deserialize(Stream, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Typeless.Deserialize(System.IO.Stream, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  syntax:
    content: public static object? Deserialize(Stream stream, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Object
    content.vb: Public Shared Function Deserialize(stream As Stream, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Object
  overload: MessagePack.MessagePackSerializer.Typeless.Deserialize*
  nameWithType.vb: MessagePackSerializer.Typeless.Deserialize(Stream, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Typeless.Deserialize(System.IO.Stream, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(Stream, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Typeless.Deserialize(System.Memory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Typeless.Deserialize(System.Memory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Deserialize(System.Memory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: Deserialize(Memory<byte>, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Typeless.Deserialize(Memory<byte>, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Typeless.Deserialize(System.Memory<byte>, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  syntax:
    content: public static object? Deserialize(Memory<byte> bytes, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: bytes
      type: System.Memory{System.Byte}
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Object
    content.vb: Public Shared Function Deserialize(bytes As Memory(Of Byte), options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Object
  overload: MessagePack.MessagePackSerializer.Typeless.Deserialize*
  nameWithType.vb: MessagePackSerializer.Typeless.Deserialize(Memory(Of Byte), MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Typeless.Deserialize(System.Memory(Of Byte), MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(Memory(Of Byte), MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Typeless.DeserializeAsync(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Typeless.DeserializeAsync(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: DeserializeAsync(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: DeserializeAsync(Stream, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Typeless.DeserializeAsync(Stream, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Typeless.DeserializeAsync(System.IO.Stream, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  syntax:
    content: public static ValueTask<object?> DeserializeAsync(Stream stream, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.ValueTask{System.Object}
    content.vb: Public Shared Function DeserializeAsync(stream As Stream, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)
  overload: MessagePack.MessagePackSerializer.Typeless.DeserializeAsync*
  nameWithType.vb: MessagePackSerializer.Typeless.DeserializeAsync(Stream, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Typeless.DeserializeAsync(System.IO.Stream, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: DeserializeAsync(Stream, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Typeless.DefaultOptions
  commentId: P:MessagePack.MessagePackSerializer.Typeless.DefaultOptions
  id: DefaultOptions
  parent: MessagePack.MessagePackSerializer.Typeless
  langs:
  - csharp
  - vb
  name: DefaultOptions
  nameWithType: MessagePackSerializer.Typeless.DefaultOptions
  fullName: MessagePack.MessagePackSerializer.Typeless.DefaultOptions
  type: Property
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Gets or sets the default set of options to use when not explicitly specified for a method call.
  remarks: >-
    This is an AppDomain or process-wide setting.

    If you're writing a library, you should NOT set or rely on this property but should instead pass

    in <xref href="MessagePack.MessagePackSerializerOptions.Standard" data-throw-if-not-resolved="false"></xref> (or the required options) explicitly to every method call

    to guarantee appropriate behavior in any application.

    If you are an app author, realize that setting this property impacts the entire application so it should only be

    set once, and before any use of <xref href="MessagePack.MessagePackSerializer" data-throw-if-not-resolved="false"></xref> occurs.
  example: []
  syntax:
    content: public static MessagePackSerializerOptions DefaultOptions { get; set; }
    parameters: []
    return:
      type: MessagePack.MessagePackSerializerOptions
      description: The default value is <xref href="MessagePack.Resolvers.TypelessContractlessStandardResolver.Options" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Property DefaultOptions As MessagePackSerializerOptions
  overload: MessagePack.MessagePackSerializer.Typeless.DefaultOptions*
references:
- uid: MessagePack.MessagePackSerializer
  commentId: T:MessagePack.MessagePackSerializer
  isExternal: true
  href: MessagePack.MessagePackSerializer.html
  name: MessagePackSerializer
  nameWithType: MessagePackSerializer
  fullName: MessagePack.MessagePackSerializer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MessagePack
  commentId: N:MessagePack
  isExternal: true
  href: MessagePack.html
  name: MessagePack
  nameWithType: MessagePack
  fullName: MessagePack
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MessagePack.MessagePackSerializer.Typeless.Serialize*
  commentId: Overload:MessagePack.MessagePackSerializer.Typeless.Serialize
  isExternal: true
  href: MessagePack.MessagePackSerializer.Typeless.html#MessagePack_MessagePackSerializer_Typeless_Serialize_MessagePack_MessagePackWriter__System_Object_MessagePack_MessagePackSerializerOptions_
  name: Serialize
  nameWithType: MessagePackSerializer.Typeless.Serialize
  fullName: MessagePack.MessagePackSerializer.Typeless.Serialize
- uid: MessagePack.MessagePackWriter
  commentId: T:MessagePack.MessagePackWriter
  parent: MessagePack
  isExternal: true
  href: MessagePack.MessagePackWriter.html
  name: MessagePackWriter
  nameWithType: MessagePackWriter
  fullName: MessagePack.MessagePackWriter
- uid: MessagePack.MessagePackSerializerOptions
  commentId: T:MessagePack.MessagePackSerializerOptions
  parent: MessagePack
  isExternal: true
  href: MessagePack.MessagePackSerializerOptions.html
  name: MessagePackSerializerOptions
  nameWithType: MessagePackSerializerOptions
  fullName: MessagePack.MessagePackSerializerOptions
- uid: System.Buffers.IBufferWriter{System.Byte}
  commentId: T:System.Buffers.IBufferWriter{System.Byte}
  parent: System.Buffers
  definition: System.Buffers.IBufferWriter`1
  href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  name: IBufferWriter<byte>
  nameWithType: IBufferWriter<byte>
  fullName: System.Buffers.IBufferWriter<byte>
  nameWithType.vb: IBufferWriter(Of Byte)
  fullName.vb: System.Buffers.IBufferWriter(Of Byte)
  name.vb: IBufferWriter(Of Byte)
  spec.csharp:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Buffers.IBufferWriter`1
  commentId: T:System.Buffers.IBufferWriter`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  name: IBufferWriter<T>
  nameWithType: IBufferWriter<T>
  fullName: System.Buffers.IBufferWriter<T>
  nameWithType.vb: IBufferWriter(Of T)
  fullName.vb: System.Buffers.IBufferWriter(Of T)
  name.vb: IBufferWriter(Of T)
  spec.csharp:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: MessagePack.MessagePackSerializer.Typeless.SerializeAsync*
  commentId: Overload:MessagePack.MessagePackSerializer.Typeless.SerializeAsync
  isExternal: true
  href: MessagePack.MessagePackSerializer.Typeless.html#MessagePack_MessagePackSerializer_Typeless_SerializeAsync_System_IO_Stream_System_Object_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: SerializeAsync
  nameWithType: MessagePackSerializer.Typeless.SerializeAsync
  fullName: MessagePack.MessagePackSerializer.Typeless.SerializeAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MessagePack.MessagePackSerializer.Typeless.Deserialize*
  commentId: Overload:MessagePack.MessagePackSerializer.Typeless.Deserialize
  isExternal: true
  href: MessagePack.MessagePackSerializer.Typeless.html#MessagePack_MessagePackSerializer_Typeless_Deserialize_MessagePack_MessagePackReader__MessagePack_MessagePackSerializerOptions_
  name: Deserialize
  nameWithType: MessagePackSerializer.Typeless.Deserialize
  fullName: MessagePack.MessagePackSerializer.Typeless.Deserialize
- uid: MessagePack.MessagePackReader
  commentId: T:MessagePack.MessagePackReader
  parent: MessagePack
  isExternal: true
  href: MessagePack.MessagePackReader.html
  name: MessagePackReader
  nameWithType: MessagePackReader
  fullName: MessagePack.MessagePackReader
- uid: System.Buffers.ReadOnlySequence{System.Byte}
  commentId: T:System.Buffers.ReadOnlySequence{System.Byte}
  parent: System.Buffers
  definition: System.Buffers.ReadOnlySequence`1
  href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  name: ReadOnlySequence<byte>
  nameWithType: ReadOnlySequence<byte>
  fullName: System.Buffers.ReadOnlySequence<byte>
  nameWithType.vb: ReadOnlySequence(Of Byte)
  fullName.vb: System.Buffers.ReadOnlySequence(Of Byte)
  name.vb: ReadOnlySequence(Of Byte)
  spec.csharp:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Buffers.ReadOnlySequence`1
  commentId: T:System.Buffers.ReadOnlySequence`1
  parent: System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  name: ReadOnlySequence<T>
  nameWithType: ReadOnlySequence<T>
  fullName: System.Buffers.ReadOnlySequence<T>
  nameWithType.vb: ReadOnlySequence(Of T)
  fullName.vb: System.Buffers.ReadOnlySequence(Of T)
  name.vb: ReadOnlySequence(Of T)
  spec.csharp:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Memory{System.Byte}
  commentId: T:System.Memory{System.Byte}
  parent: System
  definition: System.Memory`1
  href: https://learn.microsoft.com/dotnet/api/system.memory-1
  name: Memory<byte>
  nameWithType: Memory<byte>
  fullName: System.Memory<byte>
  nameWithType.vb: Memory(Of Byte)
  fullName.vb: System.Memory(Of Byte)
  name.vb: Memory(Of Byte)
  spec.csharp:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Memory`1
  commentId: T:System.Memory`1
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.memory-1
  name: Memory<T>
  nameWithType: Memory<T>
  fullName: System.Memory<T>
  nameWithType.vb: Memory(Of T)
  fullName.vb: System.Memory(Of T)
  name.vb: Memory(Of T)
  spec.csharp:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MessagePack.MessagePackSerializer.Typeless.DeserializeAsync*
  commentId: Overload:MessagePack.MessagePackSerializer.Typeless.DeserializeAsync
  isExternal: true
  href: MessagePack.MessagePackSerializer.Typeless.html#MessagePack_MessagePackSerializer_Typeless_DeserializeAsync_System_IO_Stream_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: DeserializeAsync
  nameWithType: MessagePackSerializer.Typeless.DeserializeAsync
  fullName: MessagePack.MessagePackSerializer.Typeless.DeserializeAsync
- uid: System.Threading.Tasks.ValueTask{System.Object}
  commentId: T:System.Threading.Tasks.ValueTask{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<object>
  nameWithType: ValueTask<object>
  fullName: System.Threading.Tasks.ValueTask<object>
  nameWithType.vb: ValueTask(Of Object)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Object)
  name.vb: ValueTask(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: MessagePack.Resolvers.TypelessContractlessStandardResolver.Options
  commentId: F:MessagePack.Resolvers.TypelessContractlessStandardResolver.Options
  isExternal: true
  href: MessagePack.Resolvers.TypelessContractlessStandardResolver.html#MessagePack_Resolvers_TypelessContractlessStandardResolver_Options
  name: Options
  nameWithType: TypelessContractlessStandardResolver.Options
  fullName: MessagePack.Resolvers.TypelessContractlessStandardResolver.Options
- uid: MessagePack.MessagePackSerializerOptions.Standard
  commentId: P:MessagePack.MessagePackSerializerOptions.Standard
  isExternal: true
  href: MessagePack.MessagePackSerializerOptions.html#MessagePack_MessagePackSerializerOptions_Standard
  name: Standard
  nameWithType: MessagePackSerializerOptions.Standard
  fullName: MessagePack.MessagePackSerializerOptions.Standard
- uid: MessagePack.MessagePackSerializer.Typeless.DefaultOptions*
  commentId: Overload:MessagePack.MessagePackSerializer.Typeless.DefaultOptions
  isExternal: true
  href: MessagePack.MessagePackSerializer.Typeless.html#MessagePack_MessagePackSerializer_Typeless_DefaultOptions
  name: DefaultOptions
  nameWithType: MessagePackSerializer.Typeless.DefaultOptions
  fullName: MessagePack.MessagePackSerializer.Typeless.DefaultOptions
