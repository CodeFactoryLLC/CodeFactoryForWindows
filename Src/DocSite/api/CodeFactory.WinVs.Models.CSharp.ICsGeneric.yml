### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.ICsGeneric
  commentId: T:CodeFactory.WinVs.Models.CSharp.ICsGeneric
  id: ICsGeneric
  parent: CodeFactory.WinVs.Models.CSharp
  children:
  - CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericParameters
  - CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericTypes
  - CodeFactory.WinVs.Models.CSharp.ICsGeneric.HasStrongTypesInGenerics
  - CodeFactory.WinVs.Models.CSharp.ICsGeneric.IsGeneric
  langs:
  - csharp
  - vb
  name: ICsGeneric
  nameWithType: ICsGeneric
  fullName: CodeFactory.WinVs.Models.CSharp.ICsGeneric
  type: Interface
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/ICsGeneric.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Definition that determines if the c# model implements generics.
  example: []
  syntax:
    content: public interface ICsGeneric
    content.vb: Public Interface ICsGeneric
- uid: CodeFactory.WinVs.Models.CSharp.ICsGeneric.IsGeneric
  commentId: P:CodeFactory.WinVs.Models.CSharp.ICsGeneric.IsGeneric
  id: IsGeneric
  parent: CodeFactory.WinVs.Models.CSharp.ICsGeneric
  langs:
  - csharp
  - vb
  name: IsGeneric
  nameWithType: ICsGeneric.IsGeneric
  fullName: CodeFactory.WinVs.Models.CSharp.ICsGeneric.IsGeneric
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/ICsGeneric.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Flag the determines if this item supports generics
  example: []
  syntax:
    content: bool IsGeneric { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsGeneric As Boolean
  overload: CodeFactory.WinVs.Models.CSharp.ICsGeneric.IsGeneric*
- uid: CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericParameters
  commentId: P:CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericParameters
  id: GenericParameters
  parent: CodeFactory.WinVs.Models.CSharp.ICsGeneric
  langs:
  - csharp
  - vb
  name: GenericParameters
  nameWithType: ICsGeneric.GenericParameters
  fullName: CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericParameters
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/ICsGeneric.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: List of the generic parameters assigned.
  example: []
  syntax:
    content: IReadOnlyList<CsGenericParameter> GenericParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{CodeFactory.WinVs.Models.CSharp.CsGenericParameter}
    content.vb: ReadOnly Property GenericParameters As IReadOnlyList(Of CsGenericParameter)
  overload: CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericParameters*
- uid: CodeFactory.WinVs.Models.CSharp.ICsGeneric.HasStrongTypesInGenerics
  commentId: P:CodeFactory.WinVs.Models.CSharp.ICsGeneric.HasStrongTypesInGenerics
  id: HasStrongTypesInGenerics
  parent: CodeFactory.WinVs.Models.CSharp.ICsGeneric
  langs:
  - csharp
  - vb
  name: HasStrongTypesInGenerics
  nameWithType: ICsGeneric.HasStrongTypesInGenerics
  fullName: CodeFactory.WinVs.Models.CSharp.ICsGeneric.HasStrongTypesInGenerics
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/ICsGeneric.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Flag that determines if the generics implementation has strong types passed in to the generics implementation.
  example: []
  syntax:
    content: bool HasStrongTypesInGenerics { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property HasStrongTypesInGenerics As Boolean
  overload: CodeFactory.WinVs.Models.CSharp.ICsGeneric.HasStrongTypesInGenerics*
- uid: CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericTypes
  commentId: P:CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericTypes
  id: GenericTypes
  parent: CodeFactory.WinVs.Models.CSharp.ICsGeneric
  langs:
  - csharp
  - vb
  name: GenericTypes
  nameWithType: ICsGeneric.GenericTypes
  fullName: CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericTypes
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/ICsGeneric.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: List of the strong types that are implemented for each generic parameter. This will be an empty List when there is no generic types implemented.
  example: []
  syntax:
    content: IReadOnlyList<CsType> GenericTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{CodeFactory.WinVs.Models.CSharp.CsType}
    content.vb: ReadOnly Property GenericTypes As IReadOnlyList(Of CsType)
  overload: CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericTypes*
references:
- uid: CodeFactory.WinVs.Models.CSharp
  commentId: N:CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp
  nameWithType: CodeFactory.WinVs.Models.CSharp
  fullName: CodeFactory.WinVs.Models.CSharp
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
- uid: CodeFactory.WinVs.Models.CSharp.ICsGeneric.IsGeneric*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.ICsGeneric.IsGeneric
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.ICsGeneric.html#CodeFactory_WinVs_Models_CSharp_ICsGeneric_IsGeneric
  name: IsGeneric
  nameWithType: ICsGeneric.IsGeneric
  fullName: CodeFactory.WinVs.Models.CSharp.ICsGeneric.IsGeneric
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericParameters*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericParameters
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.ICsGeneric.html#CodeFactory_WinVs_Models_CSharp_ICsGeneric_GenericParameters
  name: GenericParameters
  nameWithType: ICsGeneric.GenericParameters
  fullName: CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericParameters
- uid: System.Collections.Generic.IReadOnlyList{CodeFactory.WinVs.Models.CSharp.CsGenericParameter}
  commentId: T:System.Collections.Generic.IReadOnlyList{CodeFactory.WinVs.Models.CSharp.CsGenericParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<CsGenericParameter>
  nameWithType: IReadOnlyList<CsGenericParameter>
  fullName: System.Collections.Generic.IReadOnlyList<CodeFactory.WinVs.Models.CSharp.CsGenericParameter>
  nameWithType.vb: IReadOnlyList(Of CsGenericParameter)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of CodeFactory.WinVs.Models.CSharp.CsGenericParameter)
  name.vb: IReadOnlyList(Of CsGenericParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.CsGenericParameter
    name: CsGenericParameter
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.CsGenericParameter.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.CsGenericParameter
    name: CsGenericParameter
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.CsGenericParameter.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: CodeFactory.WinVs.Models.CSharp.ICsGeneric.HasStrongTypesInGenerics*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.ICsGeneric.HasStrongTypesInGenerics
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.ICsGeneric.html#CodeFactory_WinVs_Models_CSharp_ICsGeneric_HasStrongTypesInGenerics
  name: HasStrongTypesInGenerics
  nameWithType: ICsGeneric.HasStrongTypesInGenerics
  fullName: CodeFactory.WinVs.Models.CSharp.ICsGeneric.HasStrongTypesInGenerics
- uid: CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericTypes*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericTypes
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.ICsGeneric.html#CodeFactory_WinVs_Models_CSharp_ICsGeneric_GenericTypes
  name: GenericTypes
  nameWithType: ICsGeneric.GenericTypes
  fullName: CodeFactory.WinVs.Models.CSharp.ICsGeneric.GenericTypes
- uid: System.Collections.Generic.IReadOnlyList{CodeFactory.WinVs.Models.CSharp.CsType}
  commentId: T:System.Collections.Generic.IReadOnlyList{CodeFactory.WinVs.Models.CSharp.CsType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<CsType>
  nameWithType: IReadOnlyList<CsType>
  fullName: System.Collections.Generic.IReadOnlyList<CodeFactory.WinVs.Models.CSharp.CsType>
  nameWithType.vb: IReadOnlyList(Of CsType)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of CodeFactory.WinVs.Models.CSharp.CsType)
  name.vb: IReadOnlyList(Of CsType)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.CsType
    name: CsType
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.CsType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.CsType
    name: CsType
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.CsType.html
  - name: )
