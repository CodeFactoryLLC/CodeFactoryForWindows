### YamlMime:ManagedReference
items:
- uid: System.Buffers.Binary.BinaryPrimitives
  commentId: T:System.Buffers.Binary.BinaryPrimitives
  id: BinaryPrimitives
  parent: System.Buffers.Binary
  children:
  - System.Buffers.Binary.BinaryPrimitives.ReadInt16BigEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadInt16LittleEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadInt32BigEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadInt32LittleEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadInt64BigEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadInt64LittleEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadUInt16BigEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadUInt16LittleEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadUInt32BigEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadUInt32LittleEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadUInt64BigEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReadUInt64LittleEndian(System.ReadOnlySpan{System.Byte})
  - System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Byte)
  - System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Int16)
  - System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Int32)
  - System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Int64)
  - System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.SByte)
  - System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.UInt16)
  - System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.UInt32)
  - System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.UInt64)
  - System.Buffers.Binary.BinaryPrimitives.TryReadInt16BigEndian(System.ReadOnlySpan{System.Byte},System.Int16@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadInt16LittleEndian(System.ReadOnlySpan{System.Byte},System.Int16@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadInt32BigEndian(System.ReadOnlySpan{System.Byte},System.Int32@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadInt32LittleEndian(System.ReadOnlySpan{System.Byte},System.Int32@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadInt64BigEndian(System.ReadOnlySpan{System.Byte},System.Int64@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadInt64LittleEndian(System.ReadOnlySpan{System.Byte},System.Int64@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadUInt16BigEndian(System.ReadOnlySpan{System.Byte},System.UInt16@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadUInt16LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt16@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadUInt32BigEndian(System.ReadOnlySpan{System.Byte},System.UInt32@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadUInt32LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt32@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadUInt64BigEndian(System.ReadOnlySpan{System.Byte},System.UInt64@)
  - System.Buffers.Binary.BinaryPrimitives.TryReadUInt64LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt64@)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteInt16BigEndian(System.Span{System.Byte},System.Int16)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteInt16LittleEndian(System.Span{System.Byte},System.Int16)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteInt32BigEndian(System.Span{System.Byte},System.Int32)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteInt32LittleEndian(System.Span{System.Byte},System.Int32)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteInt64BigEndian(System.Span{System.Byte},System.Int64)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteInt64LittleEndian(System.Span{System.Byte},System.Int64)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16BigEndian(System.Span{System.Byte},System.UInt16)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16LittleEndian(System.Span{System.Byte},System.UInt16)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32BigEndian(System.Span{System.Byte},System.UInt32)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32LittleEndian(System.Span{System.Byte},System.UInt32)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64BigEndian(System.Span{System.Byte},System.UInt64)
  - System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64LittleEndian(System.Span{System.Byte},System.UInt64)
  - System.Buffers.Binary.BinaryPrimitives.WriteInt16BigEndian(System.Span{System.Byte},System.Int16)
  - System.Buffers.Binary.BinaryPrimitives.WriteInt16LittleEndian(System.Span{System.Byte},System.Int16)
  - System.Buffers.Binary.BinaryPrimitives.WriteInt32BigEndian(System.Span{System.Byte},System.Int32)
  - System.Buffers.Binary.BinaryPrimitives.WriteInt32LittleEndian(System.Span{System.Byte},System.Int32)
  - System.Buffers.Binary.BinaryPrimitives.WriteInt64BigEndian(System.Span{System.Byte},System.Int64)
  - System.Buffers.Binary.BinaryPrimitives.WriteInt64LittleEndian(System.Span{System.Byte},System.Int64)
  - System.Buffers.Binary.BinaryPrimitives.WriteUInt16BigEndian(System.Span{System.Byte},System.UInt16)
  - System.Buffers.Binary.BinaryPrimitives.WriteUInt16LittleEndian(System.Span{System.Byte},System.UInt16)
  - System.Buffers.Binary.BinaryPrimitives.WriteUInt32BigEndian(System.Span{System.Byte},System.UInt32)
  - System.Buffers.Binary.BinaryPrimitives.WriteUInt32LittleEndian(System.Span{System.Byte},System.UInt32)
  - System.Buffers.Binary.BinaryPrimitives.WriteUInt64BigEndian(System.Span{System.Byte},System.UInt64)
  - System.Buffers.Binary.BinaryPrimitives.WriteUInt64LittleEndian(System.Span{System.Byte},System.UInt64)
  langs:
  - csharp
  - vb
  name: BinaryPrimitives
  nameWithType: BinaryPrimitives
  fullName: System.Buffers.Binary.BinaryPrimitives
  type: Class
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static class BinaryPrimitives
    content.vb: Public Module BinaryPrimitives
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.SByte)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.SByte)
  id: ReverseEndianness(System.SByte)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReverseEndianness(sbyte)
  nameWithType: BinaryPrimitives.ReverseEndianness(sbyte)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(sbyte)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static sbyte ReverseEndianness(sbyte value)
    parameters:
    - id: value
      type: System.SByte
    return:
      type: System.SByte
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ReverseEndianness(value As SByte) As SByte
  overload: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.ReverseEndianness(SByte)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(SByte)
  name.vb: ReverseEndianness(SByte)
- uid: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Int16)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Int16)
  id: ReverseEndianness(System.Int16)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReverseEndianness(short)
  nameWithType: BinaryPrimitives.ReverseEndianness(short)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(short)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static short ReverseEndianness(short value)
    parameters:
    - id: value
      type: System.Int16
    return:
      type: System.Int16
    content.vb: Public Shared Function ReverseEndianness(value As Short) As Short
  overload: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness*
  nameWithType.vb: BinaryPrimitives.ReverseEndianness(Short)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(Short)
  name.vb: ReverseEndianness(Short)
- uid: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Int32)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Int32)
  id: ReverseEndianness(System.Int32)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReverseEndianness(int)
  nameWithType: BinaryPrimitives.ReverseEndianness(int)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(int)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static int ReverseEndianness(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ReverseEndianness(value As Integer) As Integer
  overload: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness*
  nameWithType.vb: BinaryPrimitives.ReverseEndianness(Integer)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(Integer)
  name.vb: ReverseEndianness(Integer)
- uid: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Int64)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Int64)
  id: ReverseEndianness(System.Int64)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReverseEndianness(long)
  nameWithType: BinaryPrimitives.ReverseEndianness(long)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(long)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static long ReverseEndianness(long value)
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Shared Function ReverseEndianness(value As Long) As Long
  overload: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness*
  nameWithType.vb: BinaryPrimitives.ReverseEndianness(Long)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(Long)
  name.vb: ReverseEndianness(Long)
- uid: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Byte)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.Byte)
  id: ReverseEndianness(System.Byte)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReverseEndianness(byte)
  nameWithType: BinaryPrimitives.ReverseEndianness(byte)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(byte)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static byte ReverseEndianness(byte value)
    parameters:
    - id: value
      type: System.Byte
    return:
      type: System.Byte
    content.vb: Public Shared Function ReverseEndianness(value As Byte) As Byte
  overload: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness*
  nameWithType.vb: BinaryPrimitives.ReverseEndianness(Byte)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(Byte)
  name.vb: ReverseEndianness(Byte)
- uid: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.UInt16)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.UInt16)
  id: ReverseEndianness(System.UInt16)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReverseEndianness(ushort)
  nameWithType: BinaryPrimitives.ReverseEndianness(ushort)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(ushort)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ushort ReverseEndianness(ushort value)
    parameters:
    - id: value
      type: System.UInt16
    return:
      type: System.UInt16
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ReverseEndianness(value As UShort) As UShort
  overload: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.ReverseEndianness(UShort)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(UShort)
  name.vb: ReverseEndianness(UShort)
- uid: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.UInt32)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.UInt32)
  id: ReverseEndianness(System.UInt32)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReverseEndianness(uint)
  nameWithType: BinaryPrimitives.ReverseEndianness(uint)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(uint)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static uint ReverseEndianness(uint value)
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ReverseEndianness(value As UInteger) As UInteger
  overload: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.ReverseEndianness(UInteger)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(UInteger)
  name.vb: ReverseEndianness(UInteger)
- uid: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.UInt64)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(System.UInt64)
  id: ReverseEndianness(System.UInt64)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReverseEndianness(ulong)
  nameWithType: BinaryPrimitives.ReverseEndianness(ulong)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(ulong)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ulong ReverseEndianness(ulong value)
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ReverseEndianness(value As ULong) As ULong
  overload: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.ReverseEndianness(ULong)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness(ULong)
  name.vb: ReverseEndianness(ULong)
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt16BigEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadInt16BigEndian(System.ReadOnlySpan{System.Byte})
  id: ReadInt16BigEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadInt16BigEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadInt16BigEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt16BigEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static short ReadInt16BigEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.Int16
    content.vb: Public Shared Function ReadInt16BigEndian(source As ReadOnlySpan(Of Byte)) As Short
  overload: System.Buffers.Binary.BinaryPrimitives.ReadInt16BigEndian*
  nameWithType.vb: BinaryPrimitives.ReadInt16BigEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadInt16BigEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadInt16BigEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt32BigEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadInt32BigEndian(System.ReadOnlySpan{System.Byte})
  id: ReadInt32BigEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadInt32BigEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadInt32BigEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt32BigEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static int ReadInt32BigEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.Int32
    content.vb: Public Shared Function ReadInt32BigEndian(source As ReadOnlySpan(Of Byte)) As Integer
  overload: System.Buffers.Binary.BinaryPrimitives.ReadInt32BigEndian*
  nameWithType.vb: BinaryPrimitives.ReadInt32BigEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadInt32BigEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadInt32BigEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt64BigEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadInt64BigEndian(System.ReadOnlySpan{System.Byte})
  id: ReadInt64BigEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadInt64BigEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadInt64BigEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt64BigEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static long ReadInt64BigEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.Int64
    content.vb: Public Shared Function ReadInt64BigEndian(source As ReadOnlySpan(Of Byte)) As Long
  overload: System.Buffers.Binary.BinaryPrimitives.ReadInt64BigEndian*
  nameWithType.vb: BinaryPrimitives.ReadInt64BigEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadInt64BigEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadInt64BigEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt16BigEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadUInt16BigEndian(System.ReadOnlySpan{System.Byte})
  id: ReadUInt16BigEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadUInt16BigEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadUInt16BigEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt16BigEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ushort ReadUInt16BigEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.UInt16
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ReadUInt16BigEndian(source As ReadOnlySpan(Of Byte)) As UShort
  overload: System.Buffers.Binary.BinaryPrimitives.ReadUInt16BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.ReadUInt16BigEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadUInt16BigEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadUInt16BigEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt32BigEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadUInt32BigEndian(System.ReadOnlySpan{System.Byte})
  id: ReadUInt32BigEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadUInt32BigEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadUInt32BigEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt32BigEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static uint ReadUInt32BigEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.UInt32
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ReadUInt32BigEndian(source As ReadOnlySpan(Of Byte)) As UInteger
  overload: System.Buffers.Binary.BinaryPrimitives.ReadUInt32BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.ReadUInt32BigEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadUInt32BigEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadUInt32BigEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt64BigEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadUInt64BigEndian(System.ReadOnlySpan{System.Byte})
  id: ReadUInt64BigEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadUInt64BigEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadUInt64BigEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt64BigEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ulong ReadUInt64BigEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.UInt64
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ReadUInt64BigEndian(source As ReadOnlySpan(Of Byte)) As ULong
  overload: System.Buffers.Binary.BinaryPrimitives.ReadUInt64BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.ReadUInt64BigEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadUInt64BigEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadUInt64BigEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt16BigEndian(System.ReadOnlySpan{System.Byte},System.Int16@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadInt16BigEndian(System.ReadOnlySpan{System.Byte},System.Int16@)
  id: TryReadInt16BigEndian(System.ReadOnlySpan{System.Byte},System.Int16@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadInt16BigEndian(ReadOnlySpan<byte>, out short)
  nameWithType: BinaryPrimitives.TryReadInt16BigEndian(ReadOnlySpan<byte>, out short)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt16BigEndian(System.ReadOnlySpan<byte>, out short)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryReadInt16BigEndian(ReadOnlySpan<byte> source, out short value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.Int16
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryReadInt16BigEndian(source As ReadOnlySpan(Of Byte), value As Short) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadInt16BigEndian*
  nameWithType.vb: BinaryPrimitives.TryReadInt16BigEndian(ReadOnlySpan(Of Byte), Short)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadInt16BigEndian(System.ReadOnlySpan(Of Byte), Short)
  name.vb: TryReadInt16BigEndian(ReadOnlySpan(Of Byte), Short)
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt32BigEndian(System.ReadOnlySpan{System.Byte},System.Int32@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadInt32BigEndian(System.ReadOnlySpan{System.Byte},System.Int32@)
  id: TryReadInt32BigEndian(System.ReadOnlySpan{System.Byte},System.Int32@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadInt32BigEndian(ReadOnlySpan<byte>, out int)
  nameWithType: BinaryPrimitives.TryReadInt32BigEndian(ReadOnlySpan<byte>, out int)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt32BigEndian(System.ReadOnlySpan<byte>, out int)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryReadInt32BigEndian(ReadOnlySpan<byte> source, out int value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryReadInt32BigEndian(source As ReadOnlySpan(Of Byte), value As Integer) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadInt32BigEndian*
  nameWithType.vb: BinaryPrimitives.TryReadInt32BigEndian(ReadOnlySpan(Of Byte), Integer)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadInt32BigEndian(System.ReadOnlySpan(Of Byte), Integer)
  name.vb: TryReadInt32BigEndian(ReadOnlySpan(Of Byte), Integer)
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt64BigEndian(System.ReadOnlySpan{System.Byte},System.Int64@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadInt64BigEndian(System.ReadOnlySpan{System.Byte},System.Int64@)
  id: TryReadInt64BigEndian(System.ReadOnlySpan{System.Byte},System.Int64@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadInt64BigEndian(ReadOnlySpan<byte>, out long)
  nameWithType: BinaryPrimitives.TryReadInt64BigEndian(ReadOnlySpan<byte>, out long)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt64BigEndian(System.ReadOnlySpan<byte>, out long)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryReadInt64BigEndian(ReadOnlySpan<byte> source, out long value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryReadInt64BigEndian(source As ReadOnlySpan(Of Byte), value As Long) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadInt64BigEndian*
  nameWithType.vb: BinaryPrimitives.TryReadInt64BigEndian(ReadOnlySpan(Of Byte), Long)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadInt64BigEndian(System.ReadOnlySpan(Of Byte), Long)
  name.vb: TryReadInt64BigEndian(ReadOnlySpan(Of Byte), Long)
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16BigEndian(System.ReadOnlySpan{System.Byte},System.UInt16@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadUInt16BigEndian(System.ReadOnlySpan{System.Byte},System.UInt16@)
  id: TryReadUInt16BigEndian(System.ReadOnlySpan{System.Byte},System.UInt16@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadUInt16BigEndian(ReadOnlySpan<byte>, out ushort)
  nameWithType: BinaryPrimitives.TryReadUInt16BigEndian(ReadOnlySpan<byte>, out ushort)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16BigEndian(System.ReadOnlySpan<byte>, out ushort)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryReadUInt16BigEndian(ReadOnlySpan<byte> source, out ushort value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.UInt16
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryReadUInt16BigEndian(source As ReadOnlySpan(Of Byte), value As UShort) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryReadUInt16BigEndian(ReadOnlySpan(Of Byte), UShort)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16BigEndian(System.ReadOnlySpan(Of Byte), UShort)
  name.vb: TryReadUInt16BigEndian(ReadOnlySpan(Of Byte), UShort)
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32BigEndian(System.ReadOnlySpan{System.Byte},System.UInt32@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadUInt32BigEndian(System.ReadOnlySpan{System.Byte},System.UInt32@)
  id: TryReadUInt32BigEndian(System.ReadOnlySpan{System.Byte},System.UInt32@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadUInt32BigEndian(ReadOnlySpan<byte>, out uint)
  nameWithType: BinaryPrimitives.TryReadUInt32BigEndian(ReadOnlySpan<byte>, out uint)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32BigEndian(System.ReadOnlySpan<byte>, out uint)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryReadUInt32BigEndian(ReadOnlySpan<byte> source, out uint value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryReadUInt32BigEndian(source As ReadOnlySpan(Of Byte), value As UInteger) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryReadUInt32BigEndian(ReadOnlySpan(Of Byte), UInteger)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32BigEndian(System.ReadOnlySpan(Of Byte), UInteger)
  name.vb: TryReadUInt32BigEndian(ReadOnlySpan(Of Byte), UInteger)
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64BigEndian(System.ReadOnlySpan{System.Byte},System.UInt64@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadUInt64BigEndian(System.ReadOnlySpan{System.Byte},System.UInt64@)
  id: TryReadUInt64BigEndian(System.ReadOnlySpan{System.Byte},System.UInt64@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadUInt64BigEndian(ReadOnlySpan<byte>, out ulong)
  nameWithType: BinaryPrimitives.TryReadUInt64BigEndian(ReadOnlySpan<byte>, out ulong)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64BigEndian(System.ReadOnlySpan<byte>, out ulong)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryReadUInt64BigEndian(ReadOnlySpan<byte> source, out ulong value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.UInt64
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryReadUInt64BigEndian(source As ReadOnlySpan(Of Byte), value As ULong) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryReadUInt64BigEndian(ReadOnlySpan(Of Byte), ULong)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64BigEndian(System.ReadOnlySpan(Of Byte), ULong)
  name.vb: TryReadUInt64BigEndian(ReadOnlySpan(Of Byte), ULong)
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt16LittleEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadInt16LittleEndian(System.ReadOnlySpan{System.Byte})
  id: ReadInt16LittleEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadInt16LittleEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadInt16LittleEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt16LittleEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static short ReadInt16LittleEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.Int16
    content.vb: Public Shared Function ReadInt16LittleEndian(source As ReadOnlySpan(Of Byte)) As Short
  overload: System.Buffers.Binary.BinaryPrimitives.ReadInt16LittleEndian*
  nameWithType.vb: BinaryPrimitives.ReadInt16LittleEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadInt16LittleEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadInt16LittleEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt32LittleEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadInt32LittleEndian(System.ReadOnlySpan{System.Byte})
  id: ReadInt32LittleEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadInt32LittleEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadInt32LittleEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt32LittleEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static int ReadInt32LittleEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.Int32
    content.vb: Public Shared Function ReadInt32LittleEndian(source As ReadOnlySpan(Of Byte)) As Integer
  overload: System.Buffers.Binary.BinaryPrimitives.ReadInt32LittleEndian*
  nameWithType.vb: BinaryPrimitives.ReadInt32LittleEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadInt32LittleEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadInt32LittleEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt64LittleEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadInt64LittleEndian(System.ReadOnlySpan{System.Byte})
  id: ReadInt64LittleEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadInt64LittleEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadInt64LittleEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt64LittleEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static long ReadInt64LittleEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.Int64
    content.vb: Public Shared Function ReadInt64LittleEndian(source As ReadOnlySpan(Of Byte)) As Long
  overload: System.Buffers.Binary.BinaryPrimitives.ReadInt64LittleEndian*
  nameWithType.vb: BinaryPrimitives.ReadInt64LittleEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadInt64LittleEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadInt64LittleEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt16LittleEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadUInt16LittleEndian(System.ReadOnlySpan{System.Byte})
  id: ReadUInt16LittleEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadUInt16LittleEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadUInt16LittleEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt16LittleEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ushort ReadUInt16LittleEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.UInt16
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ReadUInt16LittleEndian(source As ReadOnlySpan(Of Byte)) As UShort
  overload: System.Buffers.Binary.BinaryPrimitives.ReadUInt16LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.ReadUInt16LittleEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadUInt16LittleEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadUInt16LittleEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt32LittleEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadUInt32LittleEndian(System.ReadOnlySpan{System.Byte})
  id: ReadUInt32LittleEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadUInt32LittleEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadUInt32LittleEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt32LittleEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static uint ReadUInt32LittleEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.UInt32
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ReadUInt32LittleEndian(source As ReadOnlySpan(Of Byte)) As UInteger
  overload: System.Buffers.Binary.BinaryPrimitives.ReadUInt32LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.ReadUInt32LittleEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadUInt32LittleEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadUInt32LittleEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt64LittleEndian(System.ReadOnlySpan{System.Byte})
  commentId: M:System.Buffers.Binary.BinaryPrimitives.ReadUInt64LittleEndian(System.ReadOnlySpan{System.Byte})
  id: ReadUInt64LittleEndian(System.ReadOnlySpan{System.Byte})
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: ReadUInt64LittleEndian(ReadOnlySpan<byte>)
  nameWithType: BinaryPrimitives.ReadUInt64LittleEndian(ReadOnlySpan<byte>)
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt64LittleEndian(System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ulong ReadUInt64LittleEndian(ReadOnlySpan<byte> source)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.UInt64
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ReadUInt64LittleEndian(source As ReadOnlySpan(Of Byte)) As ULong
  overload: System.Buffers.Binary.BinaryPrimitives.ReadUInt64LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.ReadUInt64LittleEndian(ReadOnlySpan(Of Byte))
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.ReadUInt64LittleEndian(System.ReadOnlySpan(Of Byte))
  name.vb: ReadUInt64LittleEndian(ReadOnlySpan(Of Byte))
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt16LittleEndian(System.ReadOnlySpan{System.Byte},System.Int16@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadInt16LittleEndian(System.ReadOnlySpan{System.Byte},System.Int16@)
  id: TryReadInt16LittleEndian(System.ReadOnlySpan{System.Byte},System.Int16@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadInt16LittleEndian(ReadOnlySpan<byte>, out short)
  nameWithType: BinaryPrimitives.TryReadInt16LittleEndian(ReadOnlySpan<byte>, out short)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt16LittleEndian(System.ReadOnlySpan<byte>, out short)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryReadInt16LittleEndian(ReadOnlySpan<byte> source, out short value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.Int16
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryReadInt16LittleEndian(source As ReadOnlySpan(Of Byte), value As Short) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadInt16LittleEndian*
  nameWithType.vb: BinaryPrimitives.TryReadInt16LittleEndian(ReadOnlySpan(Of Byte), Short)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadInt16LittleEndian(System.ReadOnlySpan(Of Byte), Short)
  name.vb: TryReadInt16LittleEndian(ReadOnlySpan(Of Byte), Short)
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt32LittleEndian(System.ReadOnlySpan{System.Byte},System.Int32@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadInt32LittleEndian(System.ReadOnlySpan{System.Byte},System.Int32@)
  id: TryReadInt32LittleEndian(System.ReadOnlySpan{System.Byte},System.Int32@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadInt32LittleEndian(ReadOnlySpan<byte>, out int)
  nameWithType: BinaryPrimitives.TryReadInt32LittleEndian(ReadOnlySpan<byte>, out int)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt32LittleEndian(System.ReadOnlySpan<byte>, out int)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryReadInt32LittleEndian(ReadOnlySpan<byte> source, out int value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryReadInt32LittleEndian(source As ReadOnlySpan(Of Byte), value As Integer) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadInt32LittleEndian*
  nameWithType.vb: BinaryPrimitives.TryReadInt32LittleEndian(ReadOnlySpan(Of Byte), Integer)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadInt32LittleEndian(System.ReadOnlySpan(Of Byte), Integer)
  name.vb: TryReadInt32LittleEndian(ReadOnlySpan(Of Byte), Integer)
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt64LittleEndian(System.ReadOnlySpan{System.Byte},System.Int64@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadInt64LittleEndian(System.ReadOnlySpan{System.Byte},System.Int64@)
  id: TryReadInt64LittleEndian(System.ReadOnlySpan{System.Byte},System.Int64@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadInt64LittleEndian(ReadOnlySpan<byte>, out long)
  nameWithType: BinaryPrimitives.TryReadInt64LittleEndian(ReadOnlySpan<byte>, out long)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt64LittleEndian(System.ReadOnlySpan<byte>, out long)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryReadInt64LittleEndian(ReadOnlySpan<byte> source, out long value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryReadInt64LittleEndian(source As ReadOnlySpan(Of Byte), value As Long) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadInt64LittleEndian*
  nameWithType.vb: BinaryPrimitives.TryReadInt64LittleEndian(ReadOnlySpan(Of Byte), Long)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadInt64LittleEndian(System.ReadOnlySpan(Of Byte), Long)
  name.vb: TryReadInt64LittleEndian(ReadOnlySpan(Of Byte), Long)
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt16@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadUInt16LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt16@)
  id: TryReadUInt16LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt16@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadUInt16LittleEndian(ReadOnlySpan<byte>, out ushort)
  nameWithType: BinaryPrimitives.TryReadUInt16LittleEndian(ReadOnlySpan<byte>, out ushort)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16LittleEndian(System.ReadOnlySpan<byte>, out ushort)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryReadUInt16LittleEndian(ReadOnlySpan<byte> source, out ushort value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.UInt16
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryReadUInt16LittleEndian(source As ReadOnlySpan(Of Byte), value As UShort) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryReadUInt16LittleEndian(ReadOnlySpan(Of Byte), UShort)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16LittleEndian(System.ReadOnlySpan(Of Byte), UShort)
  name.vb: TryReadUInt16LittleEndian(ReadOnlySpan(Of Byte), UShort)
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt32@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadUInt32LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt32@)
  id: TryReadUInt32LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt32@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadUInt32LittleEndian(ReadOnlySpan<byte>, out uint)
  nameWithType: BinaryPrimitives.TryReadUInt32LittleEndian(ReadOnlySpan<byte>, out uint)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32LittleEndian(System.ReadOnlySpan<byte>, out uint)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryReadUInt32LittleEndian(ReadOnlySpan<byte> source, out uint value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryReadUInt32LittleEndian(source As ReadOnlySpan(Of Byte), value As UInteger) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryReadUInt32LittleEndian(ReadOnlySpan(Of Byte), UInteger)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32LittleEndian(System.ReadOnlySpan(Of Byte), UInteger)
  name.vb: TryReadUInt32LittleEndian(ReadOnlySpan(Of Byte), UInteger)
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt64@)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryReadUInt64LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt64@)
  id: TryReadUInt64LittleEndian(System.ReadOnlySpan{System.Byte},System.UInt64@)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryReadUInt64LittleEndian(ReadOnlySpan<byte>, out ulong)
  nameWithType: BinaryPrimitives.TryReadUInt64LittleEndian(ReadOnlySpan<byte>, out ulong)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64LittleEndian(System.ReadOnlySpan<byte>, out ulong)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryReadUInt64LittleEndian(ReadOnlySpan<byte> source, out ulong value)
    parameters:
    - id: source
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.UInt64
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryReadUInt64LittleEndian(source As ReadOnlySpan(Of Byte), value As ULong) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryReadUInt64LittleEndian(ReadOnlySpan(Of Byte), ULong)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64LittleEndian(System.ReadOnlySpan(Of Byte), ULong)
  name.vb: TryReadUInt64LittleEndian(ReadOnlySpan(Of Byte), ULong)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt16BigEndian(System.Span{System.Byte},System.Int16)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteInt16BigEndian(System.Span{System.Byte},System.Int16)
  id: WriteInt16BigEndian(System.Span{System.Byte},System.Int16)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteInt16BigEndian(Span<byte>, short)
  nameWithType: BinaryPrimitives.WriteInt16BigEndian(Span<byte>, short)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt16BigEndian(System.Span<byte>, short)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static void WriteInt16BigEndian(Span<byte> destination, short value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int16
    content.vb: Public Shared Sub WriteInt16BigEndian(destination As Span(Of Byte), value As Short)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteInt16BigEndian*
  nameWithType.vb: BinaryPrimitives.WriteInt16BigEndian(Span(Of Byte), Short)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteInt16BigEndian(System.Span(Of Byte), Short)
  name.vb: WriteInt16BigEndian(Span(Of Byte), Short)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt32BigEndian(System.Span{System.Byte},System.Int32)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteInt32BigEndian(System.Span{System.Byte},System.Int32)
  id: WriteInt32BigEndian(System.Span{System.Byte},System.Int32)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteInt32BigEndian(Span<byte>, int)
  nameWithType: BinaryPrimitives.WriteInt32BigEndian(Span<byte>, int)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt32BigEndian(System.Span<byte>, int)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static void WriteInt32BigEndian(Span<byte> destination, int value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int32
    content.vb: Public Shared Sub WriteInt32BigEndian(destination As Span(Of Byte), value As Integer)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteInt32BigEndian*
  nameWithType.vb: BinaryPrimitives.WriteInt32BigEndian(Span(Of Byte), Integer)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteInt32BigEndian(System.Span(Of Byte), Integer)
  name.vb: WriteInt32BigEndian(Span(Of Byte), Integer)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt64BigEndian(System.Span{System.Byte},System.Int64)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteInt64BigEndian(System.Span{System.Byte},System.Int64)
  id: WriteInt64BigEndian(System.Span{System.Byte},System.Int64)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteInt64BigEndian(Span<byte>, long)
  nameWithType: BinaryPrimitives.WriteInt64BigEndian(Span<byte>, long)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt64BigEndian(System.Span<byte>, long)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static void WriteInt64BigEndian(Span<byte> destination, long value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int64
    content.vb: Public Shared Sub WriteInt64BigEndian(destination As Span(Of Byte), value As Long)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteInt64BigEndian*
  nameWithType.vb: BinaryPrimitives.WriteInt64BigEndian(Span(Of Byte), Long)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteInt64BigEndian(System.Span(Of Byte), Long)
  name.vb: WriteInt64BigEndian(Span(Of Byte), Long)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt16BigEndian(System.Span{System.Byte},System.UInt16)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteUInt16BigEndian(System.Span{System.Byte},System.UInt16)
  id: WriteUInt16BigEndian(System.Span{System.Byte},System.UInt16)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteUInt16BigEndian(Span<byte>, ushort)
  nameWithType: BinaryPrimitives.WriteUInt16BigEndian(Span<byte>, ushort)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt16BigEndian(System.Span<byte>, ushort)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static void WriteUInt16BigEndian(Span<byte> destination, ushort value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt16
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Sub WriteUInt16BigEndian(destination As Span(Of Byte), value As UShort)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteUInt16BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.WriteUInt16BigEndian(Span(Of Byte), UShort)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteUInt16BigEndian(System.Span(Of Byte), UShort)
  name.vb: WriteUInt16BigEndian(Span(Of Byte), UShort)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt32BigEndian(System.Span{System.Byte},System.UInt32)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteUInt32BigEndian(System.Span{System.Byte},System.UInt32)
  id: WriteUInt32BigEndian(System.Span{System.Byte},System.UInt32)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteUInt32BigEndian(Span<byte>, uint)
  nameWithType: BinaryPrimitives.WriteUInt32BigEndian(Span<byte>, uint)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt32BigEndian(System.Span<byte>, uint)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static void WriteUInt32BigEndian(Span<byte> destination, uint value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt32
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Sub WriteUInt32BigEndian(destination As Span(Of Byte), value As UInteger)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteUInt32BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.WriteUInt32BigEndian(Span(Of Byte), UInteger)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteUInt32BigEndian(System.Span(Of Byte), UInteger)
  name.vb: WriteUInt32BigEndian(Span(Of Byte), UInteger)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt64BigEndian(System.Span{System.Byte},System.UInt64)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteUInt64BigEndian(System.Span{System.Byte},System.UInt64)
  id: WriteUInt64BigEndian(System.Span{System.Byte},System.UInt64)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteUInt64BigEndian(Span<byte>, ulong)
  nameWithType: BinaryPrimitives.WriteUInt64BigEndian(Span<byte>, ulong)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt64BigEndian(System.Span<byte>, ulong)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static void WriteUInt64BigEndian(Span<byte> destination, ulong value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt64
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Sub WriteUInt64BigEndian(destination As Span(Of Byte), value As ULong)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteUInt64BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.WriteUInt64BigEndian(Span(Of Byte), ULong)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteUInt64BigEndian(System.Span(Of Byte), ULong)
  name.vb: WriteUInt64BigEndian(Span(Of Byte), ULong)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16BigEndian(System.Span{System.Byte},System.Int16)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteInt16BigEndian(System.Span{System.Byte},System.Int16)
  id: TryWriteInt16BigEndian(System.Span{System.Byte},System.Int16)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteInt16BigEndian(Span<byte>, short)
  nameWithType: BinaryPrimitives.TryWriteInt16BigEndian(Span<byte>, short)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16BigEndian(System.Span<byte>, short)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryWriteInt16BigEndian(Span<byte> destination, short value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int16
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryWriteInt16BigEndian(destination As Span(Of Byte), value As Short) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16BigEndian*
  nameWithType.vb: BinaryPrimitives.TryWriteInt16BigEndian(Span(Of Byte), Short)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16BigEndian(System.Span(Of Byte), Short)
  name.vb: TryWriteInt16BigEndian(Span(Of Byte), Short)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32BigEndian(System.Span{System.Byte},System.Int32)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteInt32BigEndian(System.Span{System.Byte},System.Int32)
  id: TryWriteInt32BigEndian(System.Span{System.Byte},System.Int32)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteInt32BigEndian(Span<byte>, int)
  nameWithType: BinaryPrimitives.TryWriteInt32BigEndian(Span<byte>, int)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32BigEndian(System.Span<byte>, int)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryWriteInt32BigEndian(Span<byte> destination, int value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryWriteInt32BigEndian(destination As Span(Of Byte), value As Integer) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32BigEndian*
  nameWithType.vb: BinaryPrimitives.TryWriteInt32BigEndian(Span(Of Byte), Integer)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32BigEndian(System.Span(Of Byte), Integer)
  name.vb: TryWriteInt32BigEndian(Span(Of Byte), Integer)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64BigEndian(System.Span{System.Byte},System.Int64)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteInt64BigEndian(System.Span{System.Byte},System.Int64)
  id: TryWriteInt64BigEndian(System.Span{System.Byte},System.Int64)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteInt64BigEndian(Span<byte>, long)
  nameWithType: BinaryPrimitives.TryWriteInt64BigEndian(Span<byte>, long)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64BigEndian(System.Span<byte>, long)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryWriteInt64BigEndian(Span<byte> destination, long value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryWriteInt64BigEndian(destination As Span(Of Byte), value As Long) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64BigEndian*
  nameWithType.vb: BinaryPrimitives.TryWriteInt64BigEndian(Span(Of Byte), Long)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64BigEndian(System.Span(Of Byte), Long)
  name.vb: TryWriteInt64BigEndian(Span(Of Byte), Long)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16BigEndian(System.Span{System.Byte},System.UInt16)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16BigEndian(System.Span{System.Byte},System.UInt16)
  id: TryWriteUInt16BigEndian(System.Span{System.Byte},System.UInt16)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteUInt16BigEndian(Span<byte>, ushort)
  nameWithType: BinaryPrimitives.TryWriteUInt16BigEndian(Span<byte>, ushort)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16BigEndian(System.Span<byte>, ushort)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryWriteUInt16BigEndian(Span<byte> destination, ushort value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt16
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryWriteUInt16BigEndian(destination As Span(Of Byte), value As UShort) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryWriteUInt16BigEndian(Span(Of Byte), UShort)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16BigEndian(System.Span(Of Byte), UShort)
  name.vb: TryWriteUInt16BigEndian(Span(Of Byte), UShort)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32BigEndian(System.Span{System.Byte},System.UInt32)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32BigEndian(System.Span{System.Byte},System.UInt32)
  id: TryWriteUInt32BigEndian(System.Span{System.Byte},System.UInt32)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteUInt32BigEndian(Span<byte>, uint)
  nameWithType: BinaryPrimitives.TryWriteUInt32BigEndian(Span<byte>, uint)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32BigEndian(System.Span<byte>, uint)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryWriteUInt32BigEndian(Span<byte> destination, uint value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryWriteUInt32BigEndian(destination As Span(Of Byte), value As UInteger) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryWriteUInt32BigEndian(Span(Of Byte), UInteger)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32BigEndian(System.Span(Of Byte), UInteger)
  name.vb: TryWriteUInt32BigEndian(Span(Of Byte), UInteger)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64BigEndian(System.Span{System.Byte},System.UInt64)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64BigEndian(System.Span{System.Byte},System.UInt64)
  id: TryWriteUInt64BigEndian(System.Span{System.Byte},System.UInt64)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteUInt64BigEndian(Span<byte>, ulong)
  nameWithType: BinaryPrimitives.TryWriteUInt64BigEndian(Span<byte>, ulong)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64BigEndian(System.Span<byte>, ulong)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryWriteUInt64BigEndian(Span<byte> destination, ulong value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt64
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryWriteUInt64BigEndian(destination As Span(Of Byte), value As ULong) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64BigEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryWriteUInt64BigEndian(Span(Of Byte), ULong)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64BigEndian(System.Span(Of Byte), ULong)
  name.vb: TryWriteUInt64BigEndian(Span(Of Byte), ULong)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt16LittleEndian(System.Span{System.Byte},System.Int16)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteInt16LittleEndian(System.Span{System.Byte},System.Int16)
  id: WriteInt16LittleEndian(System.Span{System.Byte},System.Int16)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteInt16LittleEndian(Span<byte>, short)
  nameWithType: BinaryPrimitives.WriteInt16LittleEndian(Span<byte>, short)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt16LittleEndian(System.Span<byte>, short)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static void WriteInt16LittleEndian(Span<byte> destination, short value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int16
    content.vb: Public Shared Sub WriteInt16LittleEndian(destination As Span(Of Byte), value As Short)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteInt16LittleEndian*
  nameWithType.vb: BinaryPrimitives.WriteInt16LittleEndian(Span(Of Byte), Short)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteInt16LittleEndian(System.Span(Of Byte), Short)
  name.vb: WriteInt16LittleEndian(Span(Of Byte), Short)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt32LittleEndian(System.Span{System.Byte},System.Int32)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteInt32LittleEndian(System.Span{System.Byte},System.Int32)
  id: WriteInt32LittleEndian(System.Span{System.Byte},System.Int32)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteInt32LittleEndian(Span<byte>, int)
  nameWithType: BinaryPrimitives.WriteInt32LittleEndian(Span<byte>, int)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt32LittleEndian(System.Span<byte>, int)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static void WriteInt32LittleEndian(Span<byte> destination, int value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int32
    content.vb: Public Shared Sub WriteInt32LittleEndian(destination As Span(Of Byte), value As Integer)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteInt32LittleEndian*
  nameWithType.vb: BinaryPrimitives.WriteInt32LittleEndian(Span(Of Byte), Integer)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteInt32LittleEndian(System.Span(Of Byte), Integer)
  name.vb: WriteInt32LittleEndian(Span(Of Byte), Integer)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt64LittleEndian(System.Span{System.Byte},System.Int64)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteInt64LittleEndian(System.Span{System.Byte},System.Int64)
  id: WriteInt64LittleEndian(System.Span{System.Byte},System.Int64)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteInt64LittleEndian(Span<byte>, long)
  nameWithType: BinaryPrimitives.WriteInt64LittleEndian(Span<byte>, long)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt64LittleEndian(System.Span<byte>, long)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static void WriteInt64LittleEndian(Span<byte> destination, long value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int64
    content.vb: Public Shared Sub WriteInt64LittleEndian(destination As Span(Of Byte), value As Long)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteInt64LittleEndian*
  nameWithType.vb: BinaryPrimitives.WriteInt64LittleEndian(Span(Of Byte), Long)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteInt64LittleEndian(System.Span(Of Byte), Long)
  name.vb: WriteInt64LittleEndian(Span(Of Byte), Long)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt16LittleEndian(System.Span{System.Byte},System.UInt16)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteUInt16LittleEndian(System.Span{System.Byte},System.UInt16)
  id: WriteUInt16LittleEndian(System.Span{System.Byte},System.UInt16)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteUInt16LittleEndian(Span<byte>, ushort)
  nameWithType: BinaryPrimitives.WriteUInt16LittleEndian(Span<byte>, ushort)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt16LittleEndian(System.Span<byte>, ushort)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static void WriteUInt16LittleEndian(Span<byte> destination, ushort value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt16
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Sub WriteUInt16LittleEndian(destination As Span(Of Byte), value As UShort)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteUInt16LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.WriteUInt16LittleEndian(Span(Of Byte), UShort)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteUInt16LittleEndian(System.Span(Of Byte), UShort)
  name.vb: WriteUInt16LittleEndian(Span(Of Byte), UShort)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt32LittleEndian(System.Span{System.Byte},System.UInt32)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteUInt32LittleEndian(System.Span{System.Byte},System.UInt32)
  id: WriteUInt32LittleEndian(System.Span{System.Byte},System.UInt32)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteUInt32LittleEndian(Span<byte>, uint)
  nameWithType: BinaryPrimitives.WriteUInt32LittleEndian(Span<byte>, uint)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt32LittleEndian(System.Span<byte>, uint)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static void WriteUInt32LittleEndian(Span<byte> destination, uint value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt32
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Sub WriteUInt32LittleEndian(destination As Span(Of Byte), value As UInteger)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteUInt32LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.WriteUInt32LittleEndian(Span(Of Byte), UInteger)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteUInt32LittleEndian(System.Span(Of Byte), UInteger)
  name.vb: WriteUInt32LittleEndian(Span(Of Byte), UInteger)
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt64LittleEndian(System.Span{System.Byte},System.UInt64)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.WriteUInt64LittleEndian(System.Span{System.Byte},System.UInt64)
  id: WriteUInt64LittleEndian(System.Span{System.Byte},System.UInt64)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: WriteUInt64LittleEndian(Span<byte>, ulong)
  nameWithType: BinaryPrimitives.WriteUInt64LittleEndian(Span<byte>, ulong)
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt64LittleEndian(System.Span<byte>, ulong)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static void WriteUInt64LittleEndian(Span<byte> destination, ulong value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt64
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Sub WriteUInt64LittleEndian(destination As Span(Of Byte), value As ULong)
  overload: System.Buffers.Binary.BinaryPrimitives.WriteUInt64LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.WriteUInt64LittleEndian(Span(Of Byte), ULong)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.WriteUInt64LittleEndian(System.Span(Of Byte), ULong)
  name.vb: WriteUInt64LittleEndian(Span(Of Byte), ULong)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16LittleEndian(System.Span{System.Byte},System.Int16)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteInt16LittleEndian(System.Span{System.Byte},System.Int16)
  id: TryWriteInt16LittleEndian(System.Span{System.Byte},System.Int16)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteInt16LittleEndian(Span<byte>, short)
  nameWithType: BinaryPrimitives.TryWriteInt16LittleEndian(Span<byte>, short)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16LittleEndian(System.Span<byte>, short)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryWriteInt16LittleEndian(Span<byte> destination, short value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int16
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryWriteInt16LittleEndian(destination As Span(Of Byte), value As Short) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16LittleEndian*
  nameWithType.vb: BinaryPrimitives.TryWriteInt16LittleEndian(Span(Of Byte), Short)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16LittleEndian(System.Span(Of Byte), Short)
  name.vb: TryWriteInt16LittleEndian(Span(Of Byte), Short)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32LittleEndian(System.Span{System.Byte},System.Int32)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteInt32LittleEndian(System.Span{System.Byte},System.Int32)
  id: TryWriteInt32LittleEndian(System.Span{System.Byte},System.Int32)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteInt32LittleEndian(Span<byte>, int)
  nameWithType: BinaryPrimitives.TryWriteInt32LittleEndian(Span<byte>, int)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32LittleEndian(System.Span<byte>, int)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryWriteInt32LittleEndian(Span<byte> destination, int value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryWriteInt32LittleEndian(destination As Span(Of Byte), value As Integer) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32LittleEndian*
  nameWithType.vb: BinaryPrimitives.TryWriteInt32LittleEndian(Span(Of Byte), Integer)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32LittleEndian(System.Span(Of Byte), Integer)
  name.vb: TryWriteInt32LittleEndian(Span(Of Byte), Integer)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64LittleEndian(System.Span{System.Byte},System.Int64)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteInt64LittleEndian(System.Span{System.Byte},System.Int64)
  id: TryWriteInt64LittleEndian(System.Span{System.Byte},System.Int64)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteInt64LittleEndian(Span<byte>, long)
  nameWithType: BinaryPrimitives.TryWriteInt64LittleEndian(Span<byte>, long)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64LittleEndian(System.Span<byte>, long)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: public static bool TryWriteInt64LittleEndian(Span<byte> destination, long value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryWriteInt64LittleEndian(destination As Span(Of Byte), value As Long) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64LittleEndian*
  nameWithType.vb: BinaryPrimitives.TryWriteInt64LittleEndian(Span(Of Byte), Long)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64LittleEndian(System.Span(Of Byte), Long)
  name.vb: TryWriteInt64LittleEndian(Span(Of Byte), Long)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16LittleEndian(System.Span{System.Byte},System.UInt16)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16LittleEndian(System.Span{System.Byte},System.UInt16)
  id: TryWriteUInt16LittleEndian(System.Span{System.Byte},System.UInt16)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteUInt16LittleEndian(Span<byte>, ushort)
  nameWithType: BinaryPrimitives.TryWriteUInt16LittleEndian(Span<byte>, ushort)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16LittleEndian(System.Span<byte>, ushort)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryWriteUInt16LittleEndian(Span<byte> destination, ushort value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt16
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryWriteUInt16LittleEndian(destination As Span(Of Byte), value As UShort) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryWriteUInt16LittleEndian(Span(Of Byte), UShort)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16LittleEndian(System.Span(Of Byte), UShort)
  name.vb: TryWriteUInt16LittleEndian(Span(Of Byte), UShort)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32LittleEndian(System.Span{System.Byte},System.UInt32)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32LittleEndian(System.Span{System.Byte},System.UInt32)
  id: TryWriteUInt32LittleEndian(System.Span{System.Byte},System.UInt32)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteUInt32LittleEndian(Span<byte>, uint)
  nameWithType: BinaryPrimitives.TryWriteUInt32LittleEndian(Span<byte>, uint)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32LittleEndian(System.Span<byte>, uint)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryWriteUInt32LittleEndian(Span<byte> destination, uint value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryWriteUInt32LittleEndian(destination As Span(Of Byte), value As UInteger) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryWriteUInt32LittleEndian(Span(Of Byte), UInteger)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32LittleEndian(System.Span(Of Byte), UInteger)
  name.vb: TryWriteUInt32LittleEndian(Span(Of Byte), UInteger)
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64LittleEndian(System.Span{System.Byte},System.UInt64)
  commentId: M:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64LittleEndian(System.Span{System.Byte},System.UInt64)
  id: TryWriteUInt64LittleEndian(System.Span{System.Byte},System.UInt64)
  parent: System.Buffers.Binary.BinaryPrimitives
  langs:
  - csharp
  - vb
  name: TryWriteUInt64LittleEndian(Span<byte>, ulong)
  nameWithType: BinaryPrimitives.TryWriteUInt64LittleEndian(Span<byte>, ulong)
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64LittleEndian(System.Span<byte>, ulong)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Buffers.Binary
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryWriteUInt64LittleEndian(Span<byte> destination, ulong value)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
    - id: value
      type: System.UInt64
    return:
      type: System.Boolean
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryWriteUInt64LittleEndian(destination As Span(Of Byte), value As ULong) As Boolean
  overload: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64LittleEndian*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: BinaryPrimitives.TryWriteUInt64LittleEndian(Span(Of Byte), ULong)
  fullName.vb: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64LittleEndian(System.Span(Of Byte), ULong)
  name.vb: TryWriteUInt64LittleEndian(Span(Of Byte), ULong)
references:
- uid: System.Buffers.Binary
  commentId: N:System.Buffers.Binary
  isExternal: true
  href: System.html
  name: System.Buffers.Binary
  nameWithType: System.Buffers.Binary
  fullName: System.Buffers.Binary
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: System.Buffers.html
  - name: .
  - uid: System.Buffers.Binary
    name: Binary
    isExternal: true
    href: System.Buffers.Binary.html
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: System.Buffers.html
  - name: .
  - uid: System.Buffers.Binary
    name: Binary
    isExternal: true
    href: System.Buffers.Binary.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReverseEndianness
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReverseEndianness_System_SByte_
  name: ReverseEndianness
  nameWithType: BinaryPrimitives.ReverseEndianness
  fullName: System.Buffers.Binary.BinaryPrimitives.ReverseEndianness
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte
  nameWithType: sbyte
  fullName: sbyte
  nameWithType.vb: SByte
  fullName.vb: SByte
  name.vb: SByte
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt16BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadInt16BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadInt16BigEndian_System_ReadOnlySpan_System_Byte__
  name: ReadInt16BigEndian
  nameWithType: BinaryPrimitives.ReadInt16BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt16BigEndian
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt32BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadInt32BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadInt32BigEndian_System_ReadOnlySpan_System_Byte__
  name: ReadInt32BigEndian
  nameWithType: BinaryPrimitives.ReadInt32BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt32BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt64BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadInt64BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadInt64BigEndian_System_ReadOnlySpan_System_Byte__
  name: ReadInt64BigEndian
  nameWithType: BinaryPrimitives.ReadInt64BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt64BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt16BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadUInt16BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadUInt16BigEndian_System_ReadOnlySpan_System_Byte__
  name: ReadUInt16BigEndian
  nameWithType: BinaryPrimitives.ReadUInt16BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt16BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt32BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadUInt32BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadUInt32BigEndian_System_ReadOnlySpan_System_Byte__
  name: ReadUInt32BigEndian
  nameWithType: BinaryPrimitives.ReadUInt32BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt32BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt64BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadUInt64BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadUInt64BigEndian_System_ReadOnlySpan_System_Byte__
  name: ReadUInt64BigEndian
  nameWithType: BinaryPrimitives.ReadUInt64BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt64BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt16BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadInt16BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadInt16BigEndian_System_ReadOnlySpan_System_Byte__System_Int16__
  name: TryReadInt16BigEndian
  nameWithType: BinaryPrimitives.TryReadInt16BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt16BigEndian
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt32BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadInt32BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadInt32BigEndian_System_ReadOnlySpan_System_Byte__System_Int32__
  name: TryReadInt32BigEndian
  nameWithType: BinaryPrimitives.TryReadInt32BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt32BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt64BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadInt64BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadInt64BigEndian_System_ReadOnlySpan_System_Byte__System_Int64__
  name: TryReadInt64BigEndian
  nameWithType: BinaryPrimitives.TryReadInt64BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt64BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadUInt16BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadUInt16BigEndian_System_ReadOnlySpan_System_Byte__System_UInt16__
  name: TryReadUInt16BigEndian
  nameWithType: BinaryPrimitives.TryReadUInt16BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadUInt32BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadUInt32BigEndian_System_ReadOnlySpan_System_Byte__System_UInt32__
  name: TryReadUInt32BigEndian
  nameWithType: BinaryPrimitives.TryReadUInt32BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadUInt64BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadUInt64BigEndian_System_ReadOnlySpan_System_Byte__System_UInt64__
  name: TryReadUInt64BigEndian
  nameWithType: BinaryPrimitives.TryReadUInt64BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt16LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadInt16LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadInt16LittleEndian_System_ReadOnlySpan_System_Byte__
  name: ReadInt16LittleEndian
  nameWithType: BinaryPrimitives.ReadInt16LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt16LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt32LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadInt32LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadInt32LittleEndian_System_ReadOnlySpan_System_Byte__
  name: ReadInt32LittleEndian
  nameWithType: BinaryPrimitives.ReadInt32LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt32LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.ReadInt64LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadInt64LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadInt64LittleEndian_System_ReadOnlySpan_System_Byte__
  name: ReadInt64LittleEndian
  nameWithType: BinaryPrimitives.ReadInt64LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadInt64LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt16LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadUInt16LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadUInt16LittleEndian_System_ReadOnlySpan_System_Byte__
  name: ReadUInt16LittleEndian
  nameWithType: BinaryPrimitives.ReadUInt16LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt16LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt32LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadUInt32LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadUInt32LittleEndian_System_ReadOnlySpan_System_Byte__
  name: ReadUInt32LittleEndian
  nameWithType: BinaryPrimitives.ReadUInt32LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt32LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.ReadUInt64LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.ReadUInt64LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_ReadUInt64LittleEndian_System_ReadOnlySpan_System_Byte__
  name: ReadUInt64LittleEndian
  nameWithType: BinaryPrimitives.ReadUInt64LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.ReadUInt64LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt16LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadInt16LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadInt16LittleEndian_System_ReadOnlySpan_System_Byte__System_Int16__
  name: TryReadInt16LittleEndian
  nameWithType: BinaryPrimitives.TryReadInt16LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt16LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt32LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadInt32LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadInt32LittleEndian_System_ReadOnlySpan_System_Byte__System_Int32__
  name: TryReadInt32LittleEndian
  nameWithType: BinaryPrimitives.TryReadInt32LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt32LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadInt64LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadInt64LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadInt64LittleEndian_System_ReadOnlySpan_System_Byte__System_Int64__
  name: TryReadInt64LittleEndian
  nameWithType: BinaryPrimitives.TryReadInt64LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadInt64LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadUInt16LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadUInt16LittleEndian_System_ReadOnlySpan_System_Byte__System_UInt16__
  name: TryReadUInt16LittleEndian
  nameWithType: BinaryPrimitives.TryReadUInt16LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt16LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadUInt32LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadUInt32LittleEndian_System_ReadOnlySpan_System_Byte__System_UInt32__
  name: TryReadUInt32LittleEndian
  nameWithType: BinaryPrimitives.TryReadUInt32LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt32LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryReadUInt64LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryReadUInt64LittleEndian_System_ReadOnlySpan_System_Byte__System_UInt64__
  name: TryReadUInt64LittleEndian
  nameWithType: BinaryPrimitives.TryReadUInt64LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryReadUInt64LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt16BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteInt16BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteInt16BigEndian_System_Span_System_Byte__System_Int16_
  name: WriteInt16BigEndian
  nameWithType: BinaryPrimitives.WriteInt16BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt16BigEndian
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt32BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteInt32BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteInt32BigEndian_System_Span_System_Byte__System_Int32_
  name: WriteInt32BigEndian
  nameWithType: BinaryPrimitives.WriteInt32BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt32BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt64BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteInt64BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteInt64BigEndian_System_Span_System_Byte__System_Int64_
  name: WriteInt64BigEndian
  nameWithType: BinaryPrimitives.WriteInt64BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt64BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt16BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteUInt16BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteUInt16BigEndian_System_Span_System_Byte__System_UInt16_
  name: WriteUInt16BigEndian
  nameWithType: BinaryPrimitives.WriteUInt16BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt16BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt32BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteUInt32BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteUInt32BigEndian_System_Span_System_Byte__System_UInt32_
  name: WriteUInt32BigEndian
  nameWithType: BinaryPrimitives.WriteUInt32BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt32BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt64BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteUInt64BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteUInt64BigEndian_System_Span_System_Byte__System_UInt64_
  name: WriteUInt64BigEndian
  nameWithType: BinaryPrimitives.WriteUInt64BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt64BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteInt16BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteInt16BigEndian_System_Span_System_Byte__System_Int16_
  name: TryWriteInt16BigEndian
  nameWithType: BinaryPrimitives.TryWriteInt16BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteInt32BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteInt32BigEndian_System_Span_System_Byte__System_Int32_
  name: TryWriteInt32BigEndian
  nameWithType: BinaryPrimitives.TryWriteInt32BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteInt64BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteInt64BigEndian_System_Span_System_Byte__System_Int64_
  name: TryWriteInt64BigEndian
  nameWithType: BinaryPrimitives.TryWriteInt64BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteUInt16BigEndian_System_Span_System_Byte__System_UInt16_
  name: TryWriteUInt16BigEndian
  nameWithType: BinaryPrimitives.TryWriteUInt16BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteUInt32BigEndian_System_Span_System_Byte__System_UInt32_
  name: TryWriteUInt32BigEndian
  nameWithType: BinaryPrimitives.TryWriteUInt32BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64BigEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64BigEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteUInt64BigEndian_System_Span_System_Byte__System_UInt64_
  name: TryWriteUInt64BigEndian
  nameWithType: BinaryPrimitives.TryWriteUInt64BigEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64BigEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt16LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteInt16LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteInt16LittleEndian_System_Span_System_Byte__System_Int16_
  name: WriteInt16LittleEndian
  nameWithType: BinaryPrimitives.WriteInt16LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt16LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt32LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteInt32LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteInt32LittleEndian_System_Span_System_Byte__System_Int32_
  name: WriteInt32LittleEndian
  nameWithType: BinaryPrimitives.WriteInt32LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt32LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteInt64LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteInt64LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteInt64LittleEndian_System_Span_System_Byte__System_Int64_
  name: WriteInt64LittleEndian
  nameWithType: BinaryPrimitives.WriteInt64LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteInt64LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt16LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteUInt16LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteUInt16LittleEndian_System_Span_System_Byte__System_UInt16_
  name: WriteUInt16LittleEndian
  nameWithType: BinaryPrimitives.WriteUInt16LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt16LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt32LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteUInt32LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteUInt32LittleEndian_System_Span_System_Byte__System_UInt32_
  name: WriteUInt32LittleEndian
  nameWithType: BinaryPrimitives.WriteUInt32LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt32LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.WriteUInt64LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.WriteUInt64LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_WriteUInt64LittleEndian_System_Span_System_Byte__System_UInt64_
  name: WriteUInt64LittleEndian
  nameWithType: BinaryPrimitives.WriteUInt64LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.WriteUInt64LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteInt16LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteInt16LittleEndian_System_Span_System_Byte__System_Int16_
  name: TryWriteInt16LittleEndian
  nameWithType: BinaryPrimitives.TryWriteInt16LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt16LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteInt32LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteInt32LittleEndian_System_Span_System_Byte__System_Int32_
  name: TryWriteInt32LittleEndian
  nameWithType: BinaryPrimitives.TryWriteInt32LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt32LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteInt64LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteInt64LittleEndian_System_Span_System_Byte__System_Int64_
  name: TryWriteInt64LittleEndian
  nameWithType: BinaryPrimitives.TryWriteInt64LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteInt64LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteUInt16LittleEndian_System_Span_System_Byte__System_UInt16_
  name: TryWriteUInt16LittleEndian
  nameWithType: BinaryPrimitives.TryWriteUInt16LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt16LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteUInt32LittleEndian_System_Span_System_Byte__System_UInt32_
  name: TryWriteUInt32LittleEndian
  nameWithType: BinaryPrimitives.TryWriteUInt32LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt32LittleEndian
- uid: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64LittleEndian*
  commentId: Overload:System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64LittleEndian
  isExternal: true
  href: System.Buffers.Binary.BinaryPrimitives.html#System_Buffers_Binary_BinaryPrimitives_TryWriteUInt64LittleEndian_System_Span_System_Byte__System_UInt64_
  name: TryWriteUInt64LittleEndian
  nameWithType: BinaryPrimitives.TryWriteUInt64LittleEndian
  fullName: System.Buffers.Binary.BinaryPrimitives.TryWriteUInt64LittleEndian
