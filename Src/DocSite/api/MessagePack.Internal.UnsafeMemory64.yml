### YamlMime:ManagedReference
items:
- uid: MessagePack.Internal.UnsafeMemory64
  commentId: T:MessagePack.Internal.UnsafeMemory64
  id: UnsafeMemory64
  parent: MessagePack.Internal
  children:
  - MessagePack.Internal.UnsafeMemory64.WriteRaw1(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw10(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw11(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw12(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw13(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw14(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw15(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw16(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw17(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw18(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw19(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw2(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw20(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw21(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw22(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw23(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw24(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw25(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw26(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw27(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw28(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw29(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw3(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw30(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw31(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw4(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw5(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw6(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw7(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw8(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  - MessagePack.Internal.UnsafeMemory64.WriteRaw9(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  langs:
  - csharp
  - vb
  name: UnsafeMemory64
  nameWithType: UnsafeMemory64
  fullName: MessagePack.Internal.UnsafeMemory64
  type: Class
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static class UnsafeMemory64
    content.vb: Public Module UnsafeMemory64
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw8(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw8(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw8(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw8(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw8(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw8(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw8(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw8(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw8*
  nameWithType.vb: UnsafeMemory64.WriteRaw8(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw8(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw8(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw9(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw9(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw9(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw9(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw9(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw9(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw9(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw9(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw9*
  nameWithType.vb: UnsafeMemory64.WriteRaw9(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw9(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw9(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw10(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw10(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw10(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw10(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw10(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw10(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw10(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw10(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw10*
  nameWithType.vb: UnsafeMemory64.WriteRaw10(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw10(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw10(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw11(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw11(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw11(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw11(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw11(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw11(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw11(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw11(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw11*
  nameWithType.vb: UnsafeMemory64.WriteRaw11(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw11(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw11(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw12(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw12(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw12(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw12(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw12(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw12(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw12(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw12(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw12*
  nameWithType.vb: UnsafeMemory64.WriteRaw12(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw12(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw12(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw13(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw13(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw13(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw13(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw13(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw13(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw13(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw13(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw13*
  nameWithType.vb: UnsafeMemory64.WriteRaw13(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw13(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw13(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw14(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw14(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw14(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw14(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw14(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw14(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw14(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw14(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw14*
  nameWithType.vb: UnsafeMemory64.WriteRaw14(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw14(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw14(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw15(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw15(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw15(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw15(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw15(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw15(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw15(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw15(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw15*
  nameWithType.vb: UnsafeMemory64.WriteRaw15(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw15(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw15(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw16(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw16(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw16(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw16(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw16(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw16(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw16(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw16(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw16*
  nameWithType.vb: UnsafeMemory64.WriteRaw16(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw16(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw16(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw17(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw17(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw17(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw17(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw17(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw17(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw17(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw17(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw17*
  nameWithType.vb: UnsafeMemory64.WriteRaw17(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw17(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw17(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw18(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw18(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw18(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw18(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw18(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw18(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw18(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw18(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw18*
  nameWithType.vb: UnsafeMemory64.WriteRaw18(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw18(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw18(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw19(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw19(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw19(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw19(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw19(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw19(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw19(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw19(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw19*
  nameWithType.vb: UnsafeMemory64.WriteRaw19(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw19(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw19(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw20(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw20(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw20(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw20(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw20(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw20(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw20(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw20(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw20*
  nameWithType.vb: UnsafeMemory64.WriteRaw20(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw20(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw20(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw21(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw21(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw21(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw21(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw21(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw21(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw21(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw21(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw21*
  nameWithType.vb: UnsafeMemory64.WriteRaw21(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw21(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw21(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw22(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw22(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw22(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw22(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw22(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw22(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw22(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw22(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw22*
  nameWithType.vb: UnsafeMemory64.WriteRaw22(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw22(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw22(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw23(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw23(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw23(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw23(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw23(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw23(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw23(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw23(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw23*
  nameWithType.vb: UnsafeMemory64.WriteRaw23(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw23(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw23(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw24(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw24(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw24(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw24(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw24(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw24(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw24(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw24(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw24*
  nameWithType.vb: UnsafeMemory64.WriteRaw24(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw24(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw24(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw25(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw25(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw25(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw25(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw25(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw25(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw25(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw25(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw25*
  nameWithType.vb: UnsafeMemory64.WriteRaw25(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw25(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw25(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw26(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw26(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw26(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw26(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw26(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw26(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw26(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw26(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw26*
  nameWithType.vb: UnsafeMemory64.WriteRaw26(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw26(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw26(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw27(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw27(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw27(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw27(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw27(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw27(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw27(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw27(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw27*
  nameWithType.vb: UnsafeMemory64.WriteRaw27(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw27(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw27(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw28(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw28(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw28(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw28(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw28(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw28(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw28(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw28(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw28*
  nameWithType.vb: UnsafeMemory64.WriteRaw28(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw28(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw28(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw29(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw29(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw29(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw29(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw29(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw29(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw29(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw29(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw29*
  nameWithType.vb: UnsafeMemory64.WriteRaw29(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw29(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw29(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw30(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw30(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw30(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw30(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw30(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw30(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw30(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw30(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw30*
  nameWithType.vb: UnsafeMemory64.WriteRaw30(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw30(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw30(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw31(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw31(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw31(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw31(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw31(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw31(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw31(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw31(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw31*
  nameWithType.vb: UnsafeMemory64.WriteRaw31(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw31(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw31(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw1(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw1(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw1(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw1(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw1(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw1(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw1(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw1(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw1*
  nameWithType.vb: UnsafeMemory64.WriteRaw1(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw1(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw1(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw2(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw2(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw2(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw2(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw2(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw2(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw2(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw2(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw2*
  nameWithType.vb: UnsafeMemory64.WriteRaw2(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw2(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw2(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw3(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw3(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw3(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw3(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw3(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw3(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw3(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw3(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw3*
  nameWithType.vb: UnsafeMemory64.WriteRaw3(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw3(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw3(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw4(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw4(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw4(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw4(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw4(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw4(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw4(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw4(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw4*
  nameWithType.vb: UnsafeMemory64.WriteRaw4(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw4(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw4(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw5(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw5(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw5(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw5(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw5(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw5(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw5(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw5(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw5*
  nameWithType.vb: UnsafeMemory64.WriteRaw5(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw5(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw5(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw6(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw6(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw6(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw6(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw6(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw6(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw6(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw6(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw6*
  nameWithType.vb: UnsafeMemory64.WriteRaw6(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw6(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw6(MessagePackWriter, ReadOnlySpan(Of Byte))
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw7(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  commentId: M:MessagePack.Internal.UnsafeMemory64.WriteRaw7(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  id: WriteRaw7(MessagePack.MessagePackWriter@,System.ReadOnlySpan{System.Byte})
  parent: MessagePack.Internal.UnsafeMemory64
  langs:
  - csharp
  - vb
  name: WriteRaw7(ref MessagePackWriter, ReadOnlySpan<byte>)
  nameWithType: UnsafeMemory64.WriteRaw7(ref MessagePackWriter, ReadOnlySpan<byte>)
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw7(ref MessagePack.MessagePackWriter, System.ReadOnlySpan<byte>)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public static void WriteRaw7(ref MessagePackWriter writer, ReadOnlySpan<byte> src)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: src
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public Shared Sub WriteRaw7(writer As MessagePackWriter, src As ReadOnlySpan(Of Byte))
  overload: MessagePack.Internal.UnsafeMemory64.WriteRaw7*
  nameWithType.vb: UnsafeMemory64.WriteRaw7(MessagePackWriter, ReadOnlySpan(Of Byte))
  fullName.vb: MessagePack.Internal.UnsafeMemory64.WriteRaw7(MessagePack.MessagePackWriter, System.ReadOnlySpan(Of Byte))
  name.vb: WriteRaw7(MessagePackWriter, ReadOnlySpan(Of Byte))
references:
- uid: MessagePack.Internal
  commentId: N:MessagePack.Internal
  isExternal: true
  href: MessagePack.html
  name: MessagePack.Internal
  nameWithType: MessagePack.Internal
  fullName: MessagePack.Internal
  spec.csharp:
  - uid: MessagePack
    name: MessagePack
    isExternal: true
    href: MessagePack.html
  - name: .
  - uid: MessagePack.Internal
    name: Internal
    isExternal: true
    href: MessagePack.Internal.html
  spec.vb:
  - uid: MessagePack
    name: MessagePack
    isExternal: true
    href: MessagePack.html
  - name: .
  - uid: MessagePack.Internal
    name: Internal
    isExternal: true
    href: MessagePack.Internal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw8*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw8
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw8_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw8
  nameWithType: UnsafeMemory64.WriteRaw8
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw8
- uid: MessagePack.MessagePackWriter
  commentId: T:MessagePack.MessagePackWriter
  parent: MessagePack
  isExternal: true
  href: MessagePack.MessagePackWriter.html
  name: MessagePackWriter
  nameWithType: MessagePackWriter
  fullName: MessagePack.MessagePackWriter
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: MessagePack
  commentId: N:MessagePack
  isExternal: true
  href: MessagePack.html
  name: MessagePack
  nameWithType: MessagePack
  fullName: MessagePack
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw9*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw9
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw9_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw9
  nameWithType: UnsafeMemory64.WriteRaw9
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw9
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw10*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw10
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw10_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw10
  nameWithType: UnsafeMemory64.WriteRaw10
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw10
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw11*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw11
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw11_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw11
  nameWithType: UnsafeMemory64.WriteRaw11
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw11
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw12*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw12
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw12_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw12
  nameWithType: UnsafeMemory64.WriteRaw12
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw12
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw13*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw13
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw13_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw13
  nameWithType: UnsafeMemory64.WriteRaw13
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw13
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw14*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw14
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw14_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw14
  nameWithType: UnsafeMemory64.WriteRaw14
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw14
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw15*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw15
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw15_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw15
  nameWithType: UnsafeMemory64.WriteRaw15
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw15
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw16*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw16
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw16_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw16
  nameWithType: UnsafeMemory64.WriteRaw16
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw16
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw17*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw17
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw17_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw17
  nameWithType: UnsafeMemory64.WriteRaw17
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw17
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw18*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw18
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw18_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw18
  nameWithType: UnsafeMemory64.WriteRaw18
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw18
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw19*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw19
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw19_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw19
  nameWithType: UnsafeMemory64.WriteRaw19
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw19
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw20*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw20
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw20_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw20
  nameWithType: UnsafeMemory64.WriteRaw20
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw20
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw21*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw21
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw21_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw21
  nameWithType: UnsafeMemory64.WriteRaw21
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw21
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw22*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw22
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw22_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw22
  nameWithType: UnsafeMemory64.WriteRaw22
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw22
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw23*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw23
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw23_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw23
  nameWithType: UnsafeMemory64.WriteRaw23
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw23
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw24*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw24
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw24_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw24
  nameWithType: UnsafeMemory64.WriteRaw24
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw24
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw25*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw25
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw25_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw25
  nameWithType: UnsafeMemory64.WriteRaw25
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw25
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw26*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw26
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw26_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw26
  nameWithType: UnsafeMemory64.WriteRaw26
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw26
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw27*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw27
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw27_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw27
  nameWithType: UnsafeMemory64.WriteRaw27
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw27
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw28*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw28
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw28_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw28
  nameWithType: UnsafeMemory64.WriteRaw28
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw28
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw29*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw29
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw29_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw29
  nameWithType: UnsafeMemory64.WriteRaw29
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw29
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw30*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw30
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw30_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw30
  nameWithType: UnsafeMemory64.WriteRaw30
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw30
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw31*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw31
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw31_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw31
  nameWithType: UnsafeMemory64.WriteRaw31
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw31
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw1*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw1
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw1_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw1
  nameWithType: UnsafeMemory64.WriteRaw1
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw1
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw2*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw2
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw2_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw2
  nameWithType: UnsafeMemory64.WriteRaw2
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw2
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw3*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw3
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw3_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw3
  nameWithType: UnsafeMemory64.WriteRaw3
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw3
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw4*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw4
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw4_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw4
  nameWithType: UnsafeMemory64.WriteRaw4
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw4
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw5*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw5
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw5_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw5
  nameWithType: UnsafeMemory64.WriteRaw5
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw5
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw6*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw6
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw6_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw6
  nameWithType: UnsafeMemory64.WriteRaw6
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw6
- uid: MessagePack.Internal.UnsafeMemory64.WriteRaw7*
  commentId: Overload:MessagePack.Internal.UnsafeMemory64.WriteRaw7
  isExternal: true
  href: MessagePack.Internal.UnsafeMemory64.html#MessagePack_Internal_UnsafeMemory64_WriteRaw7_MessagePack_MessagePackWriter__System_ReadOnlySpan_System_Byte__
  name: WriteRaw7
  nameWithType: UnsafeMemory64.WriteRaw7
  fullName: MessagePack.Internal.UnsafeMemory64.WriteRaw7
