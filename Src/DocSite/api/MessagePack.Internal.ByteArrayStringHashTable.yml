### YamlMime:ManagedReference
items:
- uid: MessagePack.Internal.ByteArrayStringHashTable
  commentId: T:MessagePack.Internal.ByteArrayStringHashTable
  id: ByteArrayStringHashTable
  parent: MessagePack.Internal
  children:
  - MessagePack.Internal.ByteArrayStringHashTable.#ctor(System.Int32)
  - MessagePack.Internal.ByteArrayStringHashTable.#ctor(System.Int32,System.Single)
  - MessagePack.Internal.ByteArrayStringHashTable.Add(System.Byte[],System.Int32)
  - MessagePack.Internal.ByteArrayStringHashTable.Add(System.String,System.Int32)
  - MessagePack.Internal.ByteArrayStringHashTable.GetEnumerator
  - MessagePack.Internal.ByteArrayStringHashTable.TryGetValue(System.Buffers.ReadOnlySequence{System.Byte}@,System.Int32@)
  - MessagePack.Internal.ByteArrayStringHashTable.TryGetValue(System.ReadOnlySpan{System.Byte},System.Int32@)
  langs:
  - csharp
  - vb
  name: ByteArrayStringHashTable
  nameWithType: ByteArrayStringHashTable
  fullName: MessagePack.Internal.ByteArrayStringHashTable
  type: Class
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: 'public class ByteArrayStringHashTable : IEnumerable<KeyValuePair<string, int>>, IEnumerable'
    content.vb: Public Class ByteArrayStringHashTable Implements IEnumerable(Of KeyValuePair(Of String, Integer)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: MessagePack.Internal.ByteArrayStringHashTable.#ctor(System.Int32)
  commentId: M:MessagePack.Internal.ByteArrayStringHashTable.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: MessagePack.Internal.ByteArrayStringHashTable
  langs:
  - csharp
  - vb
  name: ByteArrayStringHashTable(int)
  nameWithType: ByteArrayStringHashTable.ByteArrayStringHashTable(int)
  fullName: MessagePack.Internal.ByteArrayStringHashTable.ByteArrayStringHashTable(int)
  type: Constructor
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public ByteArrayStringHashTable(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(capacity As Integer)
  overload: MessagePack.Internal.ByteArrayStringHashTable.#ctor*
  nameWithType.vb: ByteArrayStringHashTable.New(Integer)
  fullName.vb: MessagePack.Internal.ByteArrayStringHashTable.New(Integer)
  name.vb: New(Integer)
- uid: MessagePack.Internal.ByteArrayStringHashTable.#ctor(System.Int32,System.Single)
  commentId: M:MessagePack.Internal.ByteArrayStringHashTable.#ctor(System.Int32,System.Single)
  id: '#ctor(System.Int32,System.Single)'
  parent: MessagePack.Internal.ByteArrayStringHashTable
  langs:
  - csharp
  - vb
  name: ByteArrayStringHashTable(int, float)
  nameWithType: ByteArrayStringHashTable.ByteArrayStringHashTable(int, float)
  fullName: MessagePack.Internal.ByteArrayStringHashTable.ByteArrayStringHashTable(int, float)
  type: Constructor
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public ByteArrayStringHashTable(int capacity, float loadFactor)
    parameters:
    - id: capacity
      type: System.Int32
    - id: loadFactor
      type: System.Single
    content.vb: Public Sub New(capacity As Integer, loadFactor As Single)
  overload: MessagePack.Internal.ByteArrayStringHashTable.#ctor*
  nameWithType.vb: ByteArrayStringHashTable.New(Integer, Single)
  fullName.vb: MessagePack.Internal.ByteArrayStringHashTable.New(Integer, Single)
  name.vb: New(Integer, Single)
- uid: MessagePack.Internal.ByteArrayStringHashTable.Add(System.String,System.Int32)
  commentId: M:MessagePack.Internal.ByteArrayStringHashTable.Add(System.String,System.Int32)
  id: Add(System.String,System.Int32)
  parent: MessagePack.Internal.ByteArrayStringHashTable
  langs:
  - csharp
  - vb
  name: Add(string, int)
  nameWithType: ByteArrayStringHashTable.Add(string, int)
  fullName: MessagePack.Internal.ByteArrayStringHashTable.Add(string, int)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public void Add(string key, int value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Int32
    content.vb: Public Sub Add(key As String, value As Integer)
  overload: MessagePack.Internal.ByteArrayStringHashTable.Add*
  nameWithType.vb: ByteArrayStringHashTable.Add(String, Integer)
  fullName.vb: MessagePack.Internal.ByteArrayStringHashTable.Add(String, Integer)
  name.vb: Add(String, Integer)
- uid: MessagePack.Internal.ByteArrayStringHashTable.Add(System.Byte[],System.Int32)
  commentId: M:MessagePack.Internal.ByteArrayStringHashTable.Add(System.Byte[],System.Int32)
  id: Add(System.Byte[],System.Int32)
  parent: MessagePack.Internal.ByteArrayStringHashTable
  langs:
  - csharp
  - vb
  name: Add(byte[], int)
  nameWithType: ByteArrayStringHashTable.Add(byte[], int)
  fullName: MessagePack.Internal.ByteArrayStringHashTable.Add(byte[], int)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public void Add(byte[] key, int value)
    parameters:
    - id: key
      type: System.Byte[]
    - id: value
      type: System.Int32
    content.vb: Public Sub Add(key As Byte(), value As Integer)
  overload: MessagePack.Internal.ByteArrayStringHashTable.Add*
  nameWithType.vb: ByteArrayStringHashTable.Add(Byte(), Integer)
  fullName.vb: MessagePack.Internal.ByteArrayStringHashTable.Add(Byte(), Integer)
  name.vb: Add(Byte(), Integer)
- uid: MessagePack.Internal.ByteArrayStringHashTable.TryGetValue(System.Buffers.ReadOnlySequence{System.Byte}@,System.Int32@)
  commentId: M:MessagePack.Internal.ByteArrayStringHashTable.TryGetValue(System.Buffers.ReadOnlySequence{System.Byte}@,System.Int32@)
  id: TryGetValue(System.Buffers.ReadOnlySequence{System.Byte}@,System.Int32@)
  parent: MessagePack.Internal.ByteArrayStringHashTable
  langs:
  - csharp
  - vb
  name: TryGetValue(in ReadOnlySequence<byte>, out int)
  nameWithType: ByteArrayStringHashTable.TryGetValue(in ReadOnlySequence<byte>, out int)
  fullName: MessagePack.Internal.ByteArrayStringHashTable.TryGetValue(in System.Buffers.ReadOnlySequence<byte>, out int)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public bool TryGetValue(in ReadOnlySequence<byte> key, out int value)
    parameters:
    - id: key
      type: System.Buffers.ReadOnlySequence{System.Byte}
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function TryGetValue(key As ReadOnlySequence(Of Byte), value As Integer) As Boolean
  overload: MessagePack.Internal.ByteArrayStringHashTable.TryGetValue*
  nameWithType.vb: ByteArrayStringHashTable.TryGetValue(ReadOnlySequence(Of Byte), Integer)
  fullName.vb: MessagePack.Internal.ByteArrayStringHashTable.TryGetValue(System.Buffers.ReadOnlySequence(Of Byte), Integer)
  name.vb: TryGetValue(ReadOnlySequence(Of Byte), Integer)
- uid: MessagePack.Internal.ByteArrayStringHashTable.TryGetValue(System.ReadOnlySpan{System.Byte},System.Int32@)
  commentId: M:MessagePack.Internal.ByteArrayStringHashTable.TryGetValue(System.ReadOnlySpan{System.Byte},System.Int32@)
  id: TryGetValue(System.ReadOnlySpan{System.Byte},System.Int32@)
  parent: MessagePack.Internal.ByteArrayStringHashTable
  langs:
  - csharp
  - vb
  name: TryGetValue(ReadOnlySpan<byte>, out int)
  nameWithType: ByteArrayStringHashTable.TryGetValue(ReadOnlySpan<byte>, out int)
  fullName: MessagePack.Internal.ByteArrayStringHashTable.TryGetValue(System.ReadOnlySpan<byte>, out int)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  syntax:
    content: public bool TryGetValue(ReadOnlySpan<byte> key, out int value)
    parameters:
    - id: key
      type: System.ReadOnlySpan{System.Byte}
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function TryGetValue(key As ReadOnlySpan(Of Byte), value As Integer) As Boolean
  overload: MessagePack.Internal.ByteArrayStringHashTable.TryGetValue*
  nameWithType.vb: ByteArrayStringHashTable.TryGetValue(ReadOnlySpan(Of Byte), Integer)
  fullName.vb: MessagePack.Internal.ByteArrayStringHashTable.TryGetValue(System.ReadOnlySpan(Of Byte), Integer)
  name.vb: TryGetValue(ReadOnlySpan(Of Byte), Integer)
- uid: MessagePack.Internal.ByteArrayStringHashTable.GetEnumerator
  commentId: M:MessagePack.Internal.ByteArrayStringHashTable.GetEnumerator
  id: GetEnumerator
  parent: MessagePack.Internal.ByteArrayStringHashTable
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ByteArrayStringHashTable.GetEnumerator()
  fullName: MessagePack.Internal.ByteArrayStringHashTable.GetEnumerator()
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack.Internal
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<string, int>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of KeyValuePair(Of String, Integer))
  overload: MessagePack.Internal.ByteArrayStringHashTable.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}.GetEnumerator
references:
- uid: MessagePack.Internal
  commentId: N:MessagePack.Internal
  isExternal: true
  href: MessagePack.html
  name: MessagePack.Internal
  nameWithType: MessagePack.Internal
  fullName: MessagePack.Internal
  spec.csharp:
  - uid: MessagePack
    name: MessagePack
    isExternal: true
    href: MessagePack.html
  - name: .
  - uid: MessagePack.Internal
    name: Internal
    isExternal: true
    href: MessagePack.Internal.html
  spec.vb:
  - uid: MessagePack
    name: MessagePack
    isExternal: true
    href: MessagePack.html
  - name: .
  - uid: MessagePack.Internal
    name: Internal
    isExternal: true
    href: MessagePack.Internal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<string, int>>
  nameWithType: IEnumerable<KeyValuePair<string, int>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Integer))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Integer))
  name.vb: IEnumerable(Of KeyValuePair(Of String, Integer))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: MessagePack.Internal.ByteArrayStringHashTable.#ctor*
  commentId: Overload:MessagePack.Internal.ByteArrayStringHashTable.#ctor
  isExternal: true
  href: MessagePack.Internal.ByteArrayStringHashTable.html#MessagePack_Internal_ByteArrayStringHashTable__ctor_System_Int32_
  name: ByteArrayStringHashTable
  nameWithType: ByteArrayStringHashTable.ByteArrayStringHashTable
  fullName: MessagePack.Internal.ByteArrayStringHashTable.ByteArrayStringHashTable
  nameWithType.vb: ByteArrayStringHashTable.New
  fullName.vb: MessagePack.Internal.ByteArrayStringHashTable.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MessagePack.Internal.ByteArrayStringHashTable.Add*
  commentId: Overload:MessagePack.Internal.ByteArrayStringHashTable.Add
  isExternal: true
  href: MessagePack.Internal.ByteArrayStringHashTable.html#MessagePack_Internal_ByteArrayStringHashTable_Add_System_String_System_Int32_
  name: Add
  nameWithType: ByteArrayStringHashTable.Add
  fullName: MessagePack.Internal.ByteArrayStringHashTable.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: MessagePack.Internal.ByteArrayStringHashTable.TryGetValue*
  commentId: Overload:MessagePack.Internal.ByteArrayStringHashTable.TryGetValue
  isExternal: true
  href: MessagePack.Internal.ByteArrayStringHashTable.html#MessagePack_Internal_ByteArrayStringHashTable_TryGetValue_System_Buffers_ReadOnlySequence_System_Byte___System_Int32__
  name: TryGetValue
  nameWithType: ByteArrayStringHashTable.TryGetValue
  fullName: MessagePack.Internal.ByteArrayStringHashTable.TryGetValue
- uid: System.Buffers.ReadOnlySequence{System.Byte}
  commentId: T:System.Buffers.ReadOnlySequence{System.Byte}
  parent: System.Buffers
  definition: System.Buffers.ReadOnlySequence`1
  href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  name: ReadOnlySequence<byte>
  nameWithType: ReadOnlySequence<byte>
  fullName: System.Buffers.ReadOnlySequence<byte>
  nameWithType.vb: ReadOnlySequence(Of Byte)
  fullName.vb: System.Buffers.ReadOnlySequence(Of Byte)
  name.vb: ReadOnlySequence(Of Byte)
  spec.csharp:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Buffers.ReadOnlySequence`1
  commentId: T:System.Buffers.ReadOnlySequence`1
  parent: System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  name: ReadOnlySequence<T>
  nameWithType: ReadOnlySequence<T>
  fullName: System.Buffers.ReadOnlySequence<T>
  nameWithType.vb: ReadOnlySequence(Of T)
  fullName.vb: System.Buffers.ReadOnlySequence(Of T)
  name.vb: ReadOnlySequence(Of T)
  spec.csharp:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MessagePack.Internal.ByteArrayStringHashTable.GetEnumerator*
  commentId: Overload:MessagePack.Internal.ByteArrayStringHashTable.GetEnumerator
  isExternal: true
  href: MessagePack.Internal.ByteArrayStringHashTable.html#MessagePack_Internal_ByteArrayStringHashTable_GetEnumerator
  name: GetEnumerator
  nameWithType: ByteArrayStringHashTable.GetEnumerator
  fullName: MessagePack.Internal.ByteArrayStringHashTable.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<string, int>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Integer)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Integer)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<KeyValuePair<string, int>>
  nameWithType: IEnumerator<KeyValuePair<string, int>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, int>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, Integer))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of String, Integer))
  name.vb: IEnumerator(Of KeyValuePair(Of String, Integer))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
