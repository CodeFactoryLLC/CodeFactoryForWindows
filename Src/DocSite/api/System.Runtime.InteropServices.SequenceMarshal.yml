### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.SequenceMarshal
  commentId: T:System.Runtime.InteropServices.SequenceMarshal
  id: SequenceMarshal
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.SequenceMarshal.TryGetArray``1(System.Buffers.ReadOnlySequence{``0},System.ArraySegment{``0}@)
  - System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlyMemory``1(System.Buffers.ReadOnlySequence{``0},System.ReadOnlyMemory{``0}@)
  - System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlySequenceSegment``1(System.Buffers.ReadOnlySequence{``0},System.Buffers.ReadOnlySequenceSegment{``0}@,System.Int32@,System.Buffers.ReadOnlySequenceSegment{``0}@,System.Int32@)
  langs:
  - csharp
  - vb
  name: SequenceMarshal
  nameWithType: SequenceMarshal
  fullName: System.Runtime.InteropServices.SequenceMarshal
  type: Class
  assemblies:
  - System.Memory
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static class SequenceMarshal
    content.vb: Public Module SequenceMarshal
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlySequenceSegment``1(System.Buffers.ReadOnlySequence{``0},System.Buffers.ReadOnlySequenceSegment{``0}@,System.Int32@,System.Buffers.ReadOnlySequenceSegment{``0}@,System.Int32@)
  commentId: M:System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlySequenceSegment``1(System.Buffers.ReadOnlySequence{``0},System.Buffers.ReadOnlySequenceSegment{``0}@,System.Int32@,System.Buffers.ReadOnlySequenceSegment{``0}@,System.Int32@)
  id: TryGetReadOnlySequenceSegment``1(System.Buffers.ReadOnlySequence{``0},System.Buffers.ReadOnlySequenceSegment{``0}@,System.Int32@,System.Buffers.ReadOnlySequenceSegment{``0}@,System.Int32@)
  parent: System.Runtime.InteropServices.SequenceMarshal
  langs:
  - csharp
  - vb
  name: TryGetReadOnlySequenceSegment<T>(ReadOnlySequence<T>, out ReadOnlySequenceSegment<T>, out int, out ReadOnlySequenceSegment<T>, out int)
  nameWithType: SequenceMarshal.TryGetReadOnlySequenceSegment<T>(ReadOnlySequence<T>, out ReadOnlySequenceSegment<T>, out int, out ReadOnlySequenceSegment<T>, out int)
  fullName: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlySequenceSegment<T>(System.Buffers.ReadOnlySequence<T>, out System.Buffers.ReadOnlySequenceSegment<T>, out int, out System.Buffers.ReadOnlySequenceSegment<T>, out int)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static bool TryGetReadOnlySequenceSegment<T>(ReadOnlySequence<T> sequence, out ReadOnlySequenceSegment<T> startSegment, out int startIndex, out ReadOnlySequenceSegment<T> endSegment, out int endIndex)
    parameters:
    - id: sequence
      type: System.Buffers.ReadOnlySequence{{T}}
    - id: startSegment
      type: System.Buffers.ReadOnlySequenceSegment{{T}}
    - id: startIndex
      type: System.Int32
    - id: endSegment
      type: System.Buffers.ReadOnlySequenceSegment{{T}}
    - id: endIndex
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetReadOnlySequenceSegment(Of T)(sequence As ReadOnlySequence(Of T), startSegment As ReadOnlySequenceSegment(Of T), startIndex As Integer, endSegment As ReadOnlySequenceSegment(Of T), endIndex As Integer) As Boolean
  overload: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlySequenceSegment*
  nameWithType.vb: SequenceMarshal.TryGetReadOnlySequenceSegment(Of T)(ReadOnlySequence(Of T), ReadOnlySequenceSegment(Of T), Integer, ReadOnlySequenceSegment(Of T), Integer)
  fullName.vb: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlySequenceSegment(Of T)(System.Buffers.ReadOnlySequence(Of T), System.Buffers.ReadOnlySequenceSegment(Of T), Integer, System.Buffers.ReadOnlySequenceSegment(Of T), Integer)
  name.vb: TryGetReadOnlySequenceSegment(Of T)(ReadOnlySequence(Of T), ReadOnlySequenceSegment(Of T), Integer, ReadOnlySequenceSegment(Of T), Integer)
- uid: System.Runtime.InteropServices.SequenceMarshal.TryGetArray``1(System.Buffers.ReadOnlySequence{``0},System.ArraySegment{``0}@)
  commentId: M:System.Runtime.InteropServices.SequenceMarshal.TryGetArray``1(System.Buffers.ReadOnlySequence{``0},System.ArraySegment{``0}@)
  id: TryGetArray``1(System.Buffers.ReadOnlySequence{``0},System.ArraySegment{``0}@)
  parent: System.Runtime.InteropServices.SequenceMarshal
  langs:
  - csharp
  - vb
  name: TryGetArray<T>(ReadOnlySequence<T>, out ArraySegment<T>)
  nameWithType: SequenceMarshal.TryGetArray<T>(ReadOnlySequence<T>, out ArraySegment<T>)
  fullName: System.Runtime.InteropServices.SequenceMarshal.TryGetArray<T>(System.Buffers.ReadOnlySequence<T>, out System.ArraySegment<T>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static bool TryGetArray<T>(ReadOnlySequence<T> sequence, out ArraySegment<T> segment)
    parameters:
    - id: sequence
      type: System.Buffers.ReadOnlySequence{{T}}
    - id: segment
      type: System.ArraySegment{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetArray(Of T)(sequence As ReadOnlySequence(Of T), segment As ArraySegment(Of T)) As Boolean
  overload: System.Runtime.InteropServices.SequenceMarshal.TryGetArray*
  nameWithType.vb: SequenceMarshal.TryGetArray(Of T)(ReadOnlySequence(Of T), ArraySegment(Of T))
  fullName.vb: System.Runtime.InteropServices.SequenceMarshal.TryGetArray(Of T)(System.Buffers.ReadOnlySequence(Of T), System.ArraySegment(Of T))
  name.vb: TryGetArray(Of T)(ReadOnlySequence(Of T), ArraySegment(Of T))
- uid: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlyMemory``1(System.Buffers.ReadOnlySequence{``0},System.ReadOnlyMemory{``0}@)
  commentId: M:System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlyMemory``1(System.Buffers.ReadOnlySequence{``0},System.ReadOnlyMemory{``0}@)
  id: TryGetReadOnlyMemory``1(System.Buffers.ReadOnlySequence{``0},System.ReadOnlyMemory{``0}@)
  parent: System.Runtime.InteropServices.SequenceMarshal
  langs:
  - csharp
  - vb
  name: TryGetReadOnlyMemory<T>(ReadOnlySequence<T>, out ReadOnlyMemory<T>)
  nameWithType: SequenceMarshal.TryGetReadOnlyMemory<T>(ReadOnlySequence<T>, out ReadOnlyMemory<T>)
  fullName: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlyMemory<T>(System.Buffers.ReadOnlySequence<T>, out System.ReadOnlyMemory<T>)
  type: Method
  assemblies:
  - System.Memory
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static bool TryGetReadOnlyMemory<T>(ReadOnlySequence<T> sequence, out ReadOnlyMemory<T> memory)
    parameters:
    - id: sequence
      type: System.Buffers.ReadOnlySequence{{T}}
    - id: memory
      type: System.ReadOnlyMemory{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetReadOnlyMemory(Of T)(sequence As ReadOnlySequence(Of T), memory As ReadOnlyMemory(Of T)) As Boolean
  overload: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlyMemory*
  nameWithType.vb: SequenceMarshal.TryGetReadOnlyMemory(Of T)(ReadOnlySequence(Of T), ReadOnlyMemory(Of T))
  fullName.vb: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlyMemory(Of T)(System.Buffers.ReadOnlySequence(Of T), System.ReadOnlyMemory(Of T))
  name.vb: TryGetReadOnlyMemory(Of T)(ReadOnlySequence(Of T), ReadOnlyMemory(Of T))
references:
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.InteropServices
    name: InteropServices
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.InteropServices
    name: InteropServices
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlySequenceSegment*
  commentId: Overload:System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlySequenceSegment
  isExternal: true
  href: System.Runtime.InteropServices.SequenceMarshal.html#System_Runtime_InteropServices_SequenceMarshal_TryGetReadOnlySequenceSegment__1_System_Buffers_ReadOnlySequence___0__System_Buffers_ReadOnlySequenceSegment___0___System_Int32__System_Buffers_ReadOnlySequenceSegment___0___System_Int32__
  name: TryGetReadOnlySequenceSegment
  nameWithType: SequenceMarshal.TryGetReadOnlySequenceSegment
  fullName: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlySequenceSegment
- uid: System.Buffers.ReadOnlySequence{{T}}
  commentId: T:System.Buffers.ReadOnlySequence{`0}
  parent: System.Buffers
  definition: System.Buffers.ReadOnlySequence`1
  href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  name: ReadOnlySequence<T>
  nameWithType: ReadOnlySequence<T>
  fullName: System.Buffers.ReadOnlySequence<T>
  nameWithType.vb: ReadOnlySequence(Of T)
  fullName.vb: System.Buffers.ReadOnlySequence(Of T)
  name.vb: ReadOnlySequence(Of T)
  spec.csharp:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Buffers.ReadOnlySequenceSegment{{T}}
  commentId: T:System.Buffers.ReadOnlySequenceSegment{`0}
  parent: System.Buffers
  definition: System.Buffers.ReadOnlySequenceSegment`1
  href: System.Buffers.ReadOnlySequenceSegment-1.html
  name: ReadOnlySequenceSegment<T>
  nameWithType: ReadOnlySequenceSegment<T>
  fullName: System.Buffers.ReadOnlySequenceSegment<T>
  nameWithType.vb: ReadOnlySequenceSegment(Of T)
  fullName.vb: System.Buffers.ReadOnlySequenceSegment(Of T)
  name.vb: ReadOnlySequenceSegment(Of T)
  spec.csharp:
  - uid: System.Buffers.ReadOnlySequenceSegment`1
    name: ReadOnlySequenceSegment
    isExternal: true
    href: System.Buffers.ReadOnlySequenceSegment-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ReadOnlySequenceSegment`1
    name: ReadOnlySequenceSegment
    isExternal: true
    href: System.Buffers.ReadOnlySequenceSegment-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Buffers.ReadOnlySequence`1
  commentId: T:System.Buffers.ReadOnlySequence`1
  parent: System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  name: ReadOnlySequence<T>
  nameWithType: ReadOnlySequence<T>
  fullName: System.Buffers.ReadOnlySequence<T>
  nameWithType.vb: ReadOnlySequence(Of T)
  fullName.vb: System.Buffers.ReadOnlySequence(Of T)
  name.vb: ReadOnlySequence(Of T)
  spec.csharp:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
- uid: System.Buffers.ReadOnlySequenceSegment`1
  commentId: T:System.Buffers.ReadOnlySequenceSegment`1
  parent: System.Buffers
  isExternal: true
  href: System.Buffers.ReadOnlySequenceSegment-1.html
  name: ReadOnlySequenceSegment<T>
  nameWithType: ReadOnlySequenceSegment<T>
  fullName: System.Buffers.ReadOnlySequenceSegment<T>
  nameWithType.vb: ReadOnlySequenceSegment(Of T)
  fullName.vb: System.Buffers.ReadOnlySequenceSegment(Of T)
  name.vb: ReadOnlySequenceSegment(Of T)
  spec.csharp:
  - uid: System.Buffers.ReadOnlySequenceSegment`1
    name: ReadOnlySequenceSegment
    isExternal: true
    href: System.Buffers.ReadOnlySequenceSegment-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ReadOnlySequenceSegment`1
    name: ReadOnlySequenceSegment
    isExternal: true
    href: System.Buffers.ReadOnlySequenceSegment-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Runtime.InteropServices.SequenceMarshal.TryGetArray*
  commentId: Overload:System.Runtime.InteropServices.SequenceMarshal.TryGetArray
  isExternal: true
  href: System.Runtime.InteropServices.SequenceMarshal.html#System_Runtime_InteropServices_SequenceMarshal_TryGetArray__1_System_Buffers_ReadOnlySequence___0__System_ArraySegment___0___
  name: TryGetArray
  nameWithType: SequenceMarshal.TryGetArray
  fullName: System.Runtime.InteropServices.SequenceMarshal.TryGetArray
- uid: System.ArraySegment{{T}}
  commentId: T:System.ArraySegment{`0}
  parent: System
  definition: System.ArraySegment`1
  href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlyMemory*
  commentId: Overload:System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlyMemory
  isExternal: true
  href: System.Runtime.InteropServices.SequenceMarshal.html#System_Runtime_InteropServices_SequenceMarshal_TryGetReadOnlyMemory__1_System_Buffers_ReadOnlySequence___0__System_ReadOnlyMemory___0___
  name: TryGetReadOnlyMemory
  nameWithType: SequenceMarshal.TryGetReadOnlyMemory
  fullName: System.Runtime.InteropServices.SequenceMarshal.TryGetReadOnlyMemory
- uid: System.ReadOnlyMemory{{T}}
  commentId: T:System.ReadOnlyMemory{`0}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
