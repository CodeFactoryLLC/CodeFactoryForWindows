### YamlMime:ManagedReference
items:
- uid: CodeFactory.ISourceFormatter
  commentId: T:CodeFactory.ISourceFormatter
  id: ISourceFormatter
  parent: CodeFactory
  children:
  - CodeFactory.ISourceFormatter.AppendCode(System.String)
  - CodeFactory.ISourceFormatter.AppendCodeBlock(System.Int32,System.Collections.Generic.IEnumerable{System.String})
  - CodeFactory.ISourceFormatter.AppendCodeBlock(System.Int32,System.String)
  - CodeFactory.ISourceFormatter.AppendCodeLine(System.Int32)
  - CodeFactory.ISourceFormatter.AppendCodeLine(System.Int32,System.String)
  - CodeFactory.ISourceFormatter.ResetFormatter
  - CodeFactory.ISourceFormatter.ReturnSource
  langs:
  - csharp
  - vb
  name: ISourceFormatter
  nameWithType: ISourceFormatter
  fullName: CodeFactory.ISourceFormatter
  type: Interface
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory/ISourceFormatter.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Base implementation all source formatters that support CodeFactory must implement.
  example: []
  syntax:
    content: public interface ISourceFormatter
    content.vb: Public Interface ISourceFormatter
- uid: CodeFactory.ISourceFormatter.AppendCode(System.String)
  commentId: M:CodeFactory.ISourceFormatter.AppendCode(System.String)
  id: AppendCode(System.String)
  parent: CodeFactory.ISourceFormatter
  langs:
  - csharp
  - vb
  name: AppendCode(string)
  nameWithType: ISourceFormatter.AppendCode(string)
  fullName: CodeFactory.ISourceFormatter.AppendCode(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory/ISourceFormatter.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Appends code to the end of the current line in the formatter.
  example: []
  syntax:
    content: void AppendCode(string code)
    parameters:
    - id: code
      type: System.String
      description: The code to append.
    content.vb: Sub AppendCode(code As String)
  overload: CodeFactory.ISourceFormatter.AppendCode*
  nameWithType.vb: ISourceFormatter.AppendCode(String)
  fullName.vb: CodeFactory.ISourceFormatter.AppendCode(String)
  name.vb: AppendCode(String)
- uid: CodeFactory.ISourceFormatter.AppendCodeLine(System.Int32,System.String)
  commentId: M:CodeFactory.ISourceFormatter.AppendCodeLine(System.Int32,System.String)
  id: AppendCodeLine(System.Int32,System.String)
  parent: CodeFactory.ISourceFormatter
  langs:
  - csharp
  - vb
  name: AppendCodeLine(int, string)
  nameWithType: ISourceFormatter.AppendCodeLine(int, string)
  fullName: CodeFactory.ISourceFormatter.AppendCodeLine(int, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory/ISourceFormatter.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Appends a new line of code to the formatter.
  example: []
  syntax:
    content: void AppendCodeLine(int indentLevel, string code)
    parameters:
    - id: indentLevel
      type: System.Int32
      description: The number of indent levels to add to the source code.
    - id: code
      type: System.String
      description: The code to add to the formatter.
    content.vb: Sub AppendCodeLine(indentLevel As Integer, code As String)
  overload: CodeFactory.ISourceFormatter.AppendCodeLine*
  nameWithType.vb: ISourceFormatter.AppendCodeLine(Integer, String)
  fullName.vb: CodeFactory.ISourceFormatter.AppendCodeLine(Integer, String)
  name.vb: AppendCodeLine(Integer, String)
- uid: CodeFactory.ISourceFormatter.AppendCodeLine(System.Int32)
  commentId: M:CodeFactory.ISourceFormatter.AppendCodeLine(System.Int32)
  id: AppendCodeLine(System.Int32)
  parent: CodeFactory.ISourceFormatter
  langs:
  - csharp
  - vb
  name: AppendCodeLine(int)
  nameWithType: ISourceFormatter.AppendCodeLine(int)
  fullName: CodeFactory.ISourceFormatter.AppendCodeLine(int)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory/ISourceFormatter.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Appends a new line of code to the formatter.
  example: []
  syntax:
    content: void AppendCodeLine(int indentLevel)
    parameters:
    - id: indentLevel
      type: System.Int32
      description: The number of indent levels to add to the source code.
    content.vb: Sub AppendCodeLine(indentLevel As Integer)
  overload: CodeFactory.ISourceFormatter.AppendCodeLine*
  nameWithType.vb: ISourceFormatter.AppendCodeLine(Integer)
  fullName.vb: CodeFactory.ISourceFormatter.AppendCodeLine(Integer)
  name.vb: AppendCodeLine(Integer)
- uid: CodeFactory.ISourceFormatter.AppendCodeBlock(System.Int32,System.String)
  commentId: M:CodeFactory.ISourceFormatter.AppendCodeBlock(System.Int32,System.String)
  id: AppendCodeBlock(System.Int32,System.String)
  parent: CodeFactory.ISourceFormatter
  langs:
  - csharp
  - vb
  name: AppendCodeBlock(int, string)
  nameWithType: ISourceFormatter.AppendCodeBlock(int, string)
  fullName: CodeFactory.ISourceFormatter.AppendCodeBlock(int, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory/ISourceFormatter.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Appends a target indent level to a already formatted block of code.
  example: []
  syntax:
    content: void AppendCodeBlock(int indentLevel, string codeBlock)
    parameters:
    - id: indentLevel
      type: System.Int32
      description: The target indent level to be added to the existing code block.
    - id: codeBlock
      type: System.String
      description: The block of code to append to.
    content.vb: Sub AppendCodeBlock(indentLevel As Integer, codeBlock As String)
  overload: CodeFactory.ISourceFormatter.AppendCodeBlock*
  nameWithType.vb: ISourceFormatter.AppendCodeBlock(Integer, String)
  fullName.vb: CodeFactory.ISourceFormatter.AppendCodeBlock(Integer, String)
  name.vb: AppendCodeBlock(Integer, String)
- uid: CodeFactory.ISourceFormatter.AppendCodeBlock(System.Int32,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:CodeFactory.ISourceFormatter.AppendCodeBlock(System.Int32,System.Collections.Generic.IEnumerable{System.String})
  id: AppendCodeBlock(System.Int32,System.Collections.Generic.IEnumerable{System.String})
  parent: CodeFactory.ISourceFormatter
  langs:
  - csharp
  - vb
  name: AppendCodeBlock(int, IEnumerable<string>)
  nameWithType: ISourceFormatter.AppendCodeBlock(int, IEnumerable<string>)
  fullName: CodeFactory.ISourceFormatter.AppendCodeBlock(int, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory/ISourceFormatter.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Appends a target indent level to a already formatted block of code.
  example: []
  syntax:
    content: void AppendCodeBlock(int indentLevel, IEnumerable<string> codeBlock)
    parameters:
    - id: indentLevel
      type: System.Int32
      description: The target indent level to be added to the existing code block.
    - id: codeBlock
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The block of code to append to.
    content.vb: Sub AppendCodeBlock(indentLevel As Integer, codeBlock As IEnumerable(Of String))
  overload: CodeFactory.ISourceFormatter.AppendCodeBlock*
  nameWithType.vb: ISourceFormatter.AppendCodeBlock(Integer, IEnumerable(Of String))
  fullName.vb: CodeFactory.ISourceFormatter.AppendCodeBlock(Integer, System.Collections.Generic.IEnumerable(Of String))
  name.vb: AppendCodeBlock(Integer, IEnumerable(Of String))
- uid: CodeFactory.ISourceFormatter.ReturnSource
  commentId: M:CodeFactory.ISourceFormatter.ReturnSource
  id: ReturnSource
  parent: CodeFactory.ISourceFormatter
  langs:
  - csharp
  - vb
  name: ReturnSource()
  nameWithType: ISourceFormatter.ReturnSource()
  fullName: CodeFactory.ISourceFormatter.ReturnSource()
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory/ISourceFormatter.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Returns the formatted source code.
  example: []
  syntax:
    content: string ReturnSource()
    return:
      type: System.String
      description: Formatted SourceCode.
    content.vb: Function ReturnSource() As String
  overload: CodeFactory.ISourceFormatter.ReturnSource*
- uid: CodeFactory.ISourceFormatter.ResetFormatter
  commentId: M:CodeFactory.ISourceFormatter.ResetFormatter
  id: ResetFormatter
  parent: CodeFactory.ISourceFormatter
  langs:
  - csharp
  - vb
  name: ResetFormatter()
  nameWithType: ISourceFormatter.ResetFormatter()
  fullName: CodeFactory.ISourceFormatter.ResetFormatter()
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory/ISourceFormatter.cs
  assemblies:
  - CodeFactory
  namespace: CodeFactory
  summary: Clears the formatter to be reused.
  example: []
  syntax:
    content: void ResetFormatter()
    content.vb: Sub ResetFormatter()
  overload: CodeFactory.ISourceFormatter.ResetFormatter*
references:
- uid: CodeFactory
  commentId: N:CodeFactory
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory
  nameWithType: CodeFactory
  fullName: CodeFactory
- uid: CodeFactory.ISourceFormatter.AppendCode*
  commentId: Overload:CodeFactory.ISourceFormatter.AppendCode
  isExternal: true
  href: CodeFactory.ISourceFormatter.html#CodeFactory_ISourceFormatter_AppendCode_System_String_
  name: AppendCode
  nameWithType: ISourceFormatter.AppendCode
  fullName: CodeFactory.ISourceFormatter.AppendCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CodeFactory.ISourceFormatter.AppendCodeLine*
  commentId: Overload:CodeFactory.ISourceFormatter.AppendCodeLine
  isExternal: true
  href: CodeFactory.ISourceFormatter.html#CodeFactory_ISourceFormatter_AppendCodeLine_System_Int32_System_String_
  name: AppendCodeLine
  nameWithType: ISourceFormatter.AppendCodeLine
  fullName: CodeFactory.ISourceFormatter.AppendCodeLine
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CodeFactory.ISourceFormatter.AppendCodeBlock*
  commentId: Overload:CodeFactory.ISourceFormatter.AppendCodeBlock
  isExternal: true
  href: CodeFactory.ISourceFormatter.html#CodeFactory_ISourceFormatter_AppendCodeBlock_System_Int32_System_String_
  name: AppendCodeBlock
  nameWithType: ISourceFormatter.AppendCodeBlock
  fullName: CodeFactory.ISourceFormatter.AppendCodeBlock
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: CodeFactory.ISourceFormatter.ReturnSource*
  commentId: Overload:CodeFactory.ISourceFormatter.ReturnSource
  isExternal: true
  href: CodeFactory.ISourceFormatter.html#CodeFactory_ISourceFormatter_ReturnSource
  name: ReturnSource
  nameWithType: ISourceFormatter.ReturnSource
  fullName: CodeFactory.ISourceFormatter.ReturnSource
- uid: CodeFactory.ISourceFormatter.ResetFormatter*
  commentId: Overload:CodeFactory.ISourceFormatter.ResetFormatter
  isExternal: true
  href: CodeFactory.ISourceFormatter.html#CodeFactory_ISourceFormatter_ResetFormatter
  name: ResetFormatter
  nameWithType: ISourceFormatter.ResetFormatter
  fullName: CodeFactory.ISourceFormatter.ResetFormatter
