### YamlMime:ManagedReference
items:
- uid: System.Buffers.ArrayPool`1
  commentId: T:System.Buffers.ArrayPool`1
  id: ArrayPool`1
  parent: System.Buffers
  children:
  - System.Buffers.ArrayPool`1.#ctor
  - System.Buffers.ArrayPool`1.Create
  - System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)
  - System.Buffers.ArrayPool`1.Rent(System.Int32)
  - System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)
  - System.Buffers.ArrayPool`1.Shared
  langs:
  - csharp
  - vb
  name: ArrayPool<T>
  nameWithType: ArrayPool<T>
  fullName: System.Buffers.ArrayPool<T>
  type: Class
  assemblies:
  - System.Buffers
  namespace: System.Buffers
  summary: Provides a resource pool that enables reusing instances of type <see cref="T[]"></see>.
  example: []
  syntax:
    content: public abstract class ArrayPool<T>
    typeParameters:
    - id: T
      description: The type of the objects that are in the resource pool.
    content.vb: Public MustInherit Class ArrayPool(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ArrayPool(Of T)
  fullName.vb: System.Buffers.ArrayPool(Of T)
  name.vb: ArrayPool(Of T)
- uid: System.Buffers.ArrayPool`1.Create
  commentId: M:System.Buffers.ArrayPool`1.Create
  id: Create
  parent: System.Buffers.ArrayPool`1
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: ArrayPool<T>.Create()
  fullName: System.Buffers.ArrayPool<T>.Create()
  type: Method
  assemblies:
  - System.Buffers
  namespace: System.Buffers
  summary: Creates a new instance of the <xref href="System.Buffers.ArrayPool%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public static ArrayPool<T> Create()
    return:
      type: System.Buffers.ArrayPool`1
      description: A new instance of the <see cref="System.Buffers.ArrayPool`1"></see> class.
    content.vb: Public Shared Function Create() As ArrayPool(Of T)
  overload: System.Buffers.ArrayPool`1.Create*
  nameWithType.vb: ArrayPool(Of T).Create()
  fullName.vb: System.Buffers.ArrayPool(Of T).Create()
- uid: System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)
  commentId: M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)
  id: Create(System.Int32,System.Int32)
  parent: System.Buffers.ArrayPool`1
  langs:
  - csharp
  - vb
  name: Create(int, int)
  nameWithType: ArrayPool<T>.Create(int, int)
  fullName: System.Buffers.ArrayPool<T>.Create(int, int)
  type: Method
  assemblies:
  - System.Buffers
  namespace: System.Buffers
  summary: Creates a new instance of the <xref href="System.Buffers.ArrayPool%601" data-throw-if-not-resolved="false"></xref> class using the specifed configuration.
  example: []
  syntax:
    content: public static ArrayPool<T> Create(int maxArrayLength, int maxArraysPerBucket)
    parameters:
    - id: maxArrayLength
      type: System.Int32
      description: The maximum length of an array instance that may be stored in the pool.
    - id: maxArraysPerBucket
      type: System.Int32
      description: The maximum number of array instances that may be stored in each bucket in the pool. The pool groups arrays of similar lengths into buckets for faster access.
    return:
      type: System.Buffers.ArrayPool`1
      description: A new instance of the <see cref="System.Buffers.ArrayPool`1"></see> class with the specified configuration.
    content.vb: Public Shared Function Create(maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)
  overload: System.Buffers.ArrayPool`1.Create*
  nameWithType.vb: ArrayPool(Of T).Create(Integer, Integer)
  fullName.vb: System.Buffers.ArrayPool(Of T).Create(Integer, Integer)
  name.vb: Create(Integer, Integer)
- uid: System.Buffers.ArrayPool`1.Rent(System.Int32)
  commentId: M:System.Buffers.ArrayPool`1.Rent(System.Int32)
  id: Rent(System.Int32)
  parent: System.Buffers.ArrayPool`1
  langs:
  - csharp
  - vb
  name: Rent(int)
  nameWithType: ArrayPool<T>.Rent(int)
  fullName: System.Buffers.ArrayPool<T>.Rent(int)
  type: Method
  assemblies:
  - System.Buffers
  namespace: System.Buffers
  summary: Retrieves a buffer that is at least the requested length.
  example: []
  syntax:
    content: public abstract T[] Rent(int minimumLength)
    parameters:
    - id: minimumLength
      type: System.Int32
      description: The minimum length of the array.
    return:
      type: '{T}[]'
      description: An array of type <see cref="T[]"></see> that is at least <code class="paramref">minimumLength</code> in length.
    content.vb: Public MustOverride Function Rent(minimumLength As Integer) As T()
  overload: System.Buffers.ArrayPool`1.Rent*
  nameWithType.vb: ArrayPool(Of T).Rent(Integer)
  fullName.vb: System.Buffers.ArrayPool(Of T).Rent(Integer)
  name.vb: Rent(Integer)
- uid: System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)
  commentId: M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)
  id: Return(`0[],System.Boolean)
  parent: System.Buffers.ArrayPool`1
  langs:
  - csharp
  - vb
  name: Return(T[], bool)
  nameWithType: ArrayPool<T>.Return(T[], bool)
  fullName: System.Buffers.ArrayPool<T>.Return(T[], bool)
  type: Method
  assemblies:
  - System.Buffers
  namespace: System.Buffers
  summary: Returns an array to the pool that was previously obtained using the <xref href="System.Buffers.ArrayPool%601.Rent(System.Int32)" data-throw-if-not-resolved="false"></xref> method on the same <xref href="System.Buffers.ArrayPool%601" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public abstract void Return(T[] array, bool clearArray = false)
    parameters:
    - id: array
      type: '{T}[]'
      description: A buffer to return to the pool that was previously obtained using the <xref href="System.Buffers.ArrayPool%601.Rent(System.Int32)" data-throw-if-not-resolved="false"></xref> method.
    - id: clearArray
      type: System.Boolean
      description: Indicates whether the contents of the buffer should be cleared before reuse. If <code class="paramref">clearArray</code> is set to true, and if the pool will store the buffer to enable subsequent reuse, the <xref href="System.Buffers.ArrayPool%601.Return(%600%5b%5d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> method will clear the <code class="paramref">array</code> of its contents so that a subsequent caller using the <xref href="System.Buffers.ArrayPool%601.Rent(System.Int32)" data-throw-if-not-resolved="false"></xref> method will not see the content of the previous caller. If <code class="paramref">clearArray</code> is set to false or if the pool will release the buffer, the array&amp;#39;s contents are left unchanged.
    content.vb: Public MustOverride Sub [Return](array As T(), clearArray As Boolean = False)
  overload: System.Buffers.ArrayPool`1.Return*
  nameWithType.vb: ArrayPool(Of T).Return(T(), Boolean)
  fullName.vb: System.Buffers.ArrayPool(Of T).Return(T(), Boolean)
  name.vb: Return(T(), Boolean)
- uid: System.Buffers.ArrayPool`1.#ctor
  commentId: M:System.Buffers.ArrayPool`1.#ctor
  id: '#ctor'
  parent: System.Buffers.ArrayPool`1
  langs:
  - csharp
  - vb
  name: ArrayPool()
  nameWithType: ArrayPool<T>.ArrayPool()
  fullName: System.Buffers.ArrayPool<T>.ArrayPool()
  type: Constructor
  assemblies:
  - System.Buffers
  namespace: System.Buffers
  summary: Initializes a new instance of the <xref href="System.Buffers.ArrayPool%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected ArrayPool()
    content.vb: Protected Sub New()
  overload: System.Buffers.ArrayPool`1.#ctor*
  nameWithType.vb: ArrayPool(Of T).New()
  fullName.vb: System.Buffers.ArrayPool(Of T).New()
  name.vb: New()
- uid: System.Buffers.ArrayPool`1.Shared
  commentId: P:System.Buffers.ArrayPool`1.Shared
  id: Shared
  parent: System.Buffers.ArrayPool`1
  langs:
  - csharp
  - vb
  name: Shared
  nameWithType: ArrayPool<T>.Shared
  fullName: System.Buffers.ArrayPool<T>.Shared
  type: Property
  assemblies:
  - System.Buffers
  namespace: System.Buffers
  summary: Gets a shared <xref href="System.Buffers.ArrayPool%601" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public static ArrayPool<T> Shared { get; }
    parameters: []
    return:
      type: System.Buffers.ArrayPool`1
      description: A shared <see cref="System.Buffers.ArrayPool`1"></see> instance.
    content.vb: Public Shared ReadOnly Property [Shared] As ArrayPool(Of T)
  overload: System.Buffers.ArrayPool`1.Shared*
  nameWithType.vb: ArrayPool(Of T).Shared
  fullName.vb: System.Buffers.ArrayPool(Of T).Shared
references:
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Buffers.ArrayPool`1
  commentId: T:System.Buffers.ArrayPool`1
  parent: System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.buffers.arraypool-1
  name: ArrayPool<T>
  nameWithType: ArrayPool<T>
  fullName: System.Buffers.ArrayPool<T>
  nameWithType.vb: ArrayPool(Of T)
  fullName.vb: System.Buffers.ArrayPool(Of T)
  name.vb: ArrayPool(Of T)
  spec.csharp:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.arraypool-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ArrayPool`1
    name: ArrayPool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.arraypool-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Buffers.ArrayPool`1.Create*
  commentId: Overload:System.Buffers.ArrayPool`1.Create
  isExternal: true
  href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1_Create
  name: Create
  nameWithType: ArrayPool<T>.Create
  fullName: System.Buffers.ArrayPool<T>.Create
  nameWithType.vb: ArrayPool(Of T).Create
  fullName.vb: System.Buffers.ArrayPool(Of T).Create
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Buffers.ArrayPool`1.Rent*
  commentId: Overload:System.Buffers.ArrayPool`1.Rent
  isExternal: true
  href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1_Rent_System_Int32_
  name: Rent
  nameWithType: ArrayPool<T>.Rent
  fullName: System.Buffers.ArrayPool<T>.Rent
  nameWithType.vb: ArrayPool(Of T).Rent
  fullName.vb: System.Buffers.ArrayPool(Of T).Rent
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Buffers.ArrayPool`1.Rent(System.Int32)
  commentId: M:System.Buffers.ArrayPool`1.Rent(System.Int32)
  isExternal: true
  href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1_Rent_System_Int32_
  name: Rent(int)
  nameWithType: ArrayPool<T>.Rent(int)
  fullName: System.Buffers.ArrayPool<T>.Rent(int)
  nameWithType.vb: ArrayPool(Of T).Rent(Integer)
  fullName.vb: System.Buffers.ArrayPool(Of T).Rent(Integer)
  name.vb: Rent(Integer)
  spec.csharp:
  - uid: System.Buffers.ArrayPool`1.Rent(System.Int32)
    name: Rent
    isExternal: true
    href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1_Rent_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Buffers.ArrayPool`1.Rent(System.Int32)
    name: Rent
    isExternal: true
    href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1_Rent_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)
  commentId: M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)
  isExternal: true
  href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1_Return__0___System_Boolean_
  name: Return(T[], bool)
  nameWithType: ArrayPool<T>.Return(T[], bool)
  fullName: System.Buffers.ArrayPool<T>.Return(T[], bool)
  nameWithType.vb: ArrayPool(Of T).Return(T(), Boolean)
  fullName.vb: System.Buffers.ArrayPool(Of T).Return(T(), Boolean)
  name.vb: Return(T(), Boolean)
  spec.csharp:
  - uid: System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)
    name: Return
    isExternal: true
    href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1_Return__0___System_Boolean_
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)
    name: Return
    isExternal: true
    href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1_Return__0___System_Boolean_
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Buffers.ArrayPool`1.Return*
  commentId: Overload:System.Buffers.ArrayPool`1.Return
  isExternal: true
  href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1_Return__0___System_Boolean_
  name: Return
  nameWithType: ArrayPool<T>.Return
  fullName: System.Buffers.ArrayPool<T>.Return
  nameWithType.vb: ArrayPool(Of T).Return
  fullName.vb: System.Buffers.ArrayPool(Of T).Return
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Buffers.ArrayPool`1.#ctor*
  commentId: Overload:System.Buffers.ArrayPool`1.#ctor
  isExternal: true
  href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1__ctor
  name: ArrayPool
  nameWithType: ArrayPool<T>.ArrayPool
  fullName: System.Buffers.ArrayPool<T>.ArrayPool
  nameWithType.vb: ArrayPool(Of T).New
  fullName.vb: System.Buffers.ArrayPool(Of T).New
  name.vb: New
- uid: System.Buffers.ArrayPool`1.Shared*
  commentId: Overload:System.Buffers.ArrayPool`1.Shared
  isExternal: true
  href: System.Buffers.ArrayPool-1.html#System_Buffers_ArrayPool_1_Shared
  name: Shared
  nameWithType: ArrayPool<T>.Shared
  fullName: System.Buffers.ArrayPool<T>.Shared
  nameWithType.vb: ArrayPool(Of T).Shared
  fullName.vb: System.Buffers.ArrayPool(Of T).Shared
