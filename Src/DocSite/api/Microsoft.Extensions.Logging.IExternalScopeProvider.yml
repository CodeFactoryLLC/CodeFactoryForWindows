### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.IExternalScopeProvider
  commentId: T:Microsoft.Extensions.Logging.IExternalScopeProvider
  id: IExternalScopeProvider
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope``1(System.Action{System.Object,``0},``0)
  - Microsoft.Extensions.Logging.IExternalScopeProvider.Push(System.Object)
  langs:
  - csharp
  - vb
  name: IExternalScopeProvider
  nameWithType: IExternalScopeProvider
  fullName: Microsoft.Extensions.Logging.IExternalScopeProvider
  type: Interface
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Represents a storage of common scope data.
  example: []
  syntax:
    content: public interface IExternalScopeProvider
    content.vb: Public Interface IExternalScopeProvider
- uid: Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope``1(System.Action{System.Object,``0},``0)
  commentId: M:Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope``1(System.Action{System.Object,``0},``0)
  id: ForEachScope``1(System.Action{System.Object,``0},``0)
  parent: Microsoft.Extensions.Logging.IExternalScopeProvider
  langs:
  - csharp
  - vb
  name: ForEachScope<TState>(Action<object?, TState>, TState)
  nameWithType: IExternalScopeProvider.ForEachScope<TState>(Action<object?, TState>, TState)
  fullName: Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope<TState>(System.Action<object?, TState>, TState)
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: >-
    Executes callback for each currently active scope objects in order of creation.

    All callbacks are guaranteed to be called inline from this method.
  example: []
  syntax:
    content: void ForEachScope<TState>(Action<object?, TState> callback, TState state)
    parameters:
    - id: callback
      type: System.Action{System.Object,{TState}}
      description: The callback to be executed for every scope object
    - id: state
      type: '{TState}'
      description: The state object to be passed into the callback
    typeParameters:
    - id: TState
      description: The type of state to accept.
    content.vb: Sub ForEachScope(Of TState)(callback As Action(Of Object, TState), state As TState)
  overload: Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope*
  nameWithType.vb: IExternalScopeProvider.ForEachScope(Of TState)(Action(Of Object, TState), TState)
  fullName.vb: Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope(Of TState)(System.Action(Of Object, TState), TState)
  name.vb: ForEachScope(Of TState)(Action(Of Object, TState), TState)
- uid: Microsoft.Extensions.Logging.IExternalScopeProvider.Push(System.Object)
  commentId: M:Microsoft.Extensions.Logging.IExternalScopeProvider.Push(System.Object)
  id: Push(System.Object)
  parent: Microsoft.Extensions.Logging.IExternalScopeProvider
  langs:
  - csharp
  - vb
  name: Push(object?)
  nameWithType: IExternalScopeProvider.Push(object?)
  fullName: Microsoft.Extensions.Logging.IExternalScopeProvider.Push(object?)
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Adds scope object to the list
  example: []
  syntax:
    content: IDisposable Push(object? state)
    parameters:
    - id: state
      type: System.Object
      description: The scope object
    return:
      type: System.IDisposable
      description: The <xref href="System.IDisposable" data-throw-if-not-resolved="false"></xref> token that removes scope on dispose.
    content.vb: Function Push(state As Object) As IDisposable
  overload: Microsoft.Extensions.Logging.IExternalScopeProvider.Push*
  nameWithType.vb: IExternalScopeProvider.Push(Object)
  fullName.vb: Microsoft.Extensions.Logging.IExternalScopeProvider.Push(Object)
  name.vb: Push(Object)
references:
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope*
  commentId: Overload:Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope
  isExternal: true
  href: Microsoft.Extensions.Logging.IExternalScopeProvider.html#Microsoft_Extensions_Logging_IExternalScopeProvider_ForEachScope__1_System_Action_System_Object___0____0_
  name: ForEachScope
  nameWithType: IExternalScopeProvider.ForEachScope
  fullName: Microsoft.Extensions.Logging.IExternalScopeProvider.ForEachScope
- uid: System.Action{System.Object,{TState}}
  commentId: T:System.Action{System.Object,``0}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<object, TState>
  nameWithType: Action<object, TState>
  fullName: System.Action<object, TState>
  nameWithType.vb: Action(Of Object, TState)
  fullName.vb: System.Action(Of Object, TState)
  name.vb: Action(Of Object, TState)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: TState
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: TState
  - name: )
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Extensions.Logging.IExternalScopeProvider.Push*
  commentId: Overload:Microsoft.Extensions.Logging.IExternalScopeProvider.Push
  isExternal: true
  href: Microsoft.Extensions.Logging.IExternalScopeProvider.html#Microsoft_Extensions_Logging_IExternalScopeProvider_Push_System_Object_
  name: Push
  nameWithType: IExternalScopeProvider.Push
  fullName: Microsoft.Extensions.Logging.IExternalScopeProvider.Push
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
