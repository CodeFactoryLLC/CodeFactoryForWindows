### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableSortedDictionary
  commentId: T:System.Collections.Immutable.ImmutableSortedDictionary
  id: ImmutableSortedDictionary
  parent: System.Collections.Immutable
  children:
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.Create``2
  - System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Immutable.ImmutableSortedDictionary{``0,``1}.Builder)
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  langs:
  - csharp
  - vb
  name: ImmutableSortedDictionary
  nameWithType: ImmutableSortedDictionary
  fullName: System.Collections.Immutable.ImmutableSortedDictionary
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Provides a set of initialization methods for instances of the <xref href="System.Collections.Immutable.ImmutableSortedDictionary%602" data-throw-if-not-resolved="false"></xref> class.  

     NuGet package: System.Collections.Immutable (about immutable collections and how to install)
  example: []
  syntax:
    content: public static class ImmutableSortedDictionary
    content.vb: Public Module ImmutableSortedDictionary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.Create``2
  id: Create``2
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: Create<TKey, TValue>()
  nameWithType: ImmutableSortedDictionary.Create<TKey, TValue>()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Create<TKey, TValue>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable sorted dictionary.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> Create<TKey, TValue>() where TKey : notnull'
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An empty immutable sorted dictionary.
    content.vb: Public Shared Function Create(Of TKey, TValue)() As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.Create*
  nameWithType.vb: ImmutableSortedDictionary.Create(Of TKey, TValue)()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.Create(Of TKey, TValue)()
  name.vb: Create(Of TKey, TValue)()
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0})
  id: Create``2(System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: Create<TKey, TValue>(IComparer<TKey>?)
  nameWithType: ImmutableSortedDictionary.Create<TKey, TValue>(IComparer<TKey>?)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Create<TKey, TValue>(System.Collections.Generic.IComparer<TKey>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable sorted dictionary that uses the specified key comparer.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> Create<TKey, TValue>(IComparer<TKey>? keyComparer) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The implementation to use to determine the equality of keys in the dictionary.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An empty immutable sorted dictionary.
    content.vb: Public Shared Function Create(Of TKey, TValue)(keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.Create*
  nameWithType.vb: ImmutableSortedDictionary.Create(Of TKey, TValue)(IComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.Create(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey))
  name.vb: Create(Of TKey, TValue)(IComparer(Of TKey))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: Create<TKey, TValue>(IComparer<TKey>?, IEqualityComparer<TValue>?)
  nameWithType: ImmutableSortedDictionary.Create<TKey, TValue>(IComparer<TKey>?, IEqualityComparer<TValue>?)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Create<TKey, TValue>(System.Collections.Generic.IComparer<TKey>?, System.Collections.Generic.IEqualityComparer<TValue>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable sorted dictionary that uses the specified key and value comparers.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> Create<TKey, TValue>(IComparer<TKey>? keyComparer, IEqualityComparer<TValue>? valueComparer) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The implementation to use to determine the equality of keys in the dictionary.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The implementation to use to determine the equality of values in the dictionary.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An empty immutable sorted dictionary.
    content.vb: Public Shared Function Create(Of TKey, TValue)(keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.Create*
  nameWithType.vb: ImmutableSortedDictionary.Create(Of TKey, TValue)(IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.Create(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: Create(Of TKey, TValue)(IComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: CreateRange<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: ImmutableSortedDictionary.CreateRange<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an immutable sorted dictionary that contains the specified items and uses the default comparer.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> CreateRange<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> items) where TKey : notnull'
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The items to add to the sorted dictionary before it's immutable.
    typeParameters:
    - id: TKey
      description: The type of keys stored in the dictionary.
    - id: TValue
      description: The type of values stored in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable sorted dictionary that contains the specified items.
    content.vb: Public Shared Function CreateRange(Of TKey, TValue)(items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange*
  nameWithType.vb: ImmutableSortedDictionary.CreateRange(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: CreateRange(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: CreateRange<TKey, TValue>(IComparer<TKey>?, IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: ImmutableSortedDictionary.CreateRange<TKey, TValue>(IComparer<TKey>?, IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IComparer<TKey>?, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary from the specified range of items with the specified key comparer.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> CreateRange<TKey, TValue>(IComparer<TKey>? keyComparer, IEnumerable<KeyValuePair<TKey, TValue>> items) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The comparer implementation to use to evaluate keys for equality and sorting.
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The items to add to the sorted dictionary.
    typeParameters:
    - id: TKey
      description: The type of keys stored in the dictionary.
    - id: TValue
      description: The type of values stored in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: The new immutable sorted dictionary that contains the specified items and uses the specified key comparer.
    content.vb: Public Shared Function CreateRange(Of TKey, TValue)(keyComparer As IComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange*
  nameWithType.vb: ImmutableSortedDictionary.CreateRange(Of TKey, TValue)(IComparer(Of TKey), IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: CreateRange(Of TKey, TValue)(IComparer(Of TKey), IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: CreateRange<TKey, TValue>(IComparer<TKey>?, IEqualityComparer<TValue>?, IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: ImmutableSortedDictionary.CreateRange<TKey, TValue>(IComparer<TKey>?, IEqualityComparer<TValue>?, IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IComparer<TKey>?, System.Collections.Generic.IEqualityComparer<TValue>?, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary from the specified range of items with the specified key and value comparers.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> CreateRange<TKey, TValue>(IComparer<TKey>? keyComparer, IEqualityComparer<TValue>? valueComparer, IEnumerable<KeyValuePair<TKey, TValue>> items) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The comparer implementation to use to compare keys for equality and sorting.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The comparer implementation to use to compare values for equality.
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The items to add to the sorted dictionary before it's immutable.
    typeParameters:
    - id: TKey
      description: The type of keys stored in the dictionary.
    - id: TValue
      description: The type of values stored in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable sorted dictionary that contains the specified items and uses the specified comparers.
    content.vb: Public Shared Function CreateRange(Of TKey, TValue)(keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange*
  nameWithType.vb: ImmutableSortedDictionary.CreateRange(Of TKey, TValue)(IComparer(Of TKey), IEqualityComparer(Of TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: CreateRange(Of TKey, TValue)(IComparer(Of TKey), IEqualityComparer(Of TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2
  id: CreateBuilder``2
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: CreateBuilder<TKey, TValue>()
  nameWithType: ImmutableSortedDictionary.CreateBuilder<TKey, TValue>()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder<TKey, TValue>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary builder.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue>.Builder CreateBuilder<TKey, TValue>() where TKey : notnull'
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}.Builder
      description: The immutable collection builder.
    content.vb: Public Shared Function CreateBuilder(Of TKey, TValue)() As ImmutableSortedDictionary(Of TKey, TValue).Builder
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder*
  nameWithType.vb: ImmutableSortedDictionary.CreateBuilder(Of TKey, TValue)()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder(Of TKey, TValue)()
  name.vb: CreateBuilder(Of TKey, TValue)()
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  id: CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: CreateBuilder<TKey, TValue>(IComparer<TKey>?)
  nameWithType: ImmutableSortedDictionary.CreateBuilder<TKey, TValue>(IComparer<TKey>?)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder<TKey, TValue>(System.Collections.Generic.IComparer<TKey>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary builder.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue>.Builder CreateBuilder<TKey, TValue>(IComparer<TKey>? keyComparer) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}.Builder
      description: The immutable collection builder.
    content.vb: Public Shared Function CreateBuilder(Of TKey, TValue)(keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue).Builder
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder*
  nameWithType.vb: ImmutableSortedDictionary.CreateBuilder(Of TKey, TValue)(IComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey))
  name.vb: CreateBuilder(Of TKey, TValue)(IComparer(Of TKey))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: CreateBuilder<TKey, TValue>(IComparer<TKey>?, IEqualityComparer<TValue>?)
  nameWithType: ImmutableSortedDictionary.CreateBuilder<TKey, TValue>(IComparer<TKey>?, IEqualityComparer<TValue>?)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder<TKey, TValue>(System.Collections.Generic.IComparer<TKey>?, System.Collections.Generic.IEqualityComparer<TValue>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary builder.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue>.Builder CreateBuilder<TKey, TValue>(IComparer<TKey>? keyComparer, IEqualityComparer<TValue>? valueComparer) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}.Builder
      description: The immutable collection builder.
    content.vb: Public Shared Function CreateBuilder(Of TKey, TValue)(keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue).Builder
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder*
  nameWithType.vb: ImmutableSortedDictionary.CreateBuilder(Of TKey, TValue)(IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: CreateBuilder(Of TKey, TValue)(IComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  id: ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IComparer<TKey>?, IEqualityComparer<TValue>?)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IComparer<TKey>?, IEqualityComparer<TValue>?)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IComparer<TKey>?, System.Collections.Generic.IEqualityComparer<TValue>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents by using the specified key and value comparers.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TSource, TKey, TValue>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector, IComparer<TKey>? keyComparer, IEqualityComparer<TValue>? valueComparer) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate to generate the dictionary.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function that will produce the key for the dictionary from each sequence element.
    - id: elementSelector
      type: System.Func{{TSource},{TValue}}
      description: The function that will produce the value for the dictionary from each sequence element.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer to use for the dictionary.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer to use for the dictionary.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    - id: TKey
      description: The type of the keys in the resulting dictionary.
    - id: TValue
      description: The type of the values in the resulting dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable sorted dictionary that contains the items in the specified sequence.
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TSource, TKey, TValue)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary*
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue), System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Immutable.ImmutableSortedDictionary{``0,``1}.Builder)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Immutable.ImmutableSortedDictionary{``0,``1}.Builder)
  id: ToImmutableSortedDictionary``2(System.Collections.Immutable.ImmutableSortedDictionary{``0,``1}.Builder)
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableSortedDictionary<TKey, TValue>(Builder)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(ImmutableSortedDictionary<TKey, TValue>.Builder)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Builder)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an immutable sorted dictionary from the current contents of the builder's dictionary.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TKey, TValue>(this ImmutableSortedDictionary<TKey, TValue>.Builder builder) where TKey : notnull'
    parameters:
    - id: builder
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}.Builder
      description: The builder to create the immutable sorted dictionary from.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable sorted dictionary that contains the current contents in the builder's dictionary.
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TKey, TValue)(builder As ImmutableSortedDictionary(Of TKey, TValue).Builder) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary*
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(ImmutableSortedDictionary(Of TKey, TValue).Builder)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Builder)
  name.vb: ToImmutableSortedDictionary(Of TKey, TValue)(Builder)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  id: ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IComparer<TKey>?)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IComparer<TKey>?)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IComparer<TKey>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents by using the specified key comparer.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TSource, TKey, TValue>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector, IComparer<TKey>? keyComparer) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate to generate the dictionary.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function that will produce the key for the dictionary from each sequence element.
    - id: elementSelector
      type: System.Func{{TSource},{TValue}}
      description: The function that will produce the value for the dictionary from each sequence element.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer to use for the dictionary.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    - id: TKey
      description: The type of the keys in the resulting dictionary.
    - id: TValue
      description: The type of the values in the resulting dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable dictionary that contains the items in the specified sequence.
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TSource, TKey, TValue)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary*
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue), System.Collections.Generic.IComparer(Of TKey))
  name.vb: ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IComparer(Of TKey))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  id: ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TSource, TKey, TValue>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate to generate the dictionary.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function that will produce the key for the dictionary from each sequence element.
    - id: elementSelector
      type: System.Func{{TSource},{TValue}}
      description: The function that will produce the value for the dictionary from each sequence element.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    - id: TKey
      description: The type of the keys in the resulting dictionary.
    - id: TValue
      description: The type of the values in the resulting dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable sorted dictionary that contains the items in the specified sequence.
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TSource, TKey, TValue)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary*
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue))
  name.vb: ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IComparer<TKey>?, IEqualityComparer<TValue>?)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IComparer<TKey>?, IEqualityComparer<TValue>?)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IComparer<TKey>?, System.Collections.Generic.IEqualityComparer<TValue>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence of key/value pairs and produces an immutable sorted dictionary of its contents by using the specified key and value comparers.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TKey, TValue>(this IEnumerable<KeyValuePair<TKey, TValue>> source, IComparer<TKey>? keyComparer, IEqualityComparer<TValue>? valueComparer) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The sequence of key/value pairs to enumerate.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer to use when building the immutable dictionary.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer to use for the immutable dictionary.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable sorted dictionary that contains the key/value pairs in the specified sequence.
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TKey, TValue)(source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary*
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: ToImmutableSortedDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  id: ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IComparer<TKey>?)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IComparer<TKey>?)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IComparer<TKey>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TKey, TValue>(this IEnumerable<KeyValuePair<TKey, TValue>> source, IComparer<TKey>? keyComparer) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The sequence of key/value pairs to enumerate.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer to use when building the immutable dictionary.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable sorted dictionary that contains the key/value pairs in the specified sequence.
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TKey, TValue)(source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary*
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IComparer(Of TKey))
  name.vb: ToImmutableSortedDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IComparer(Of TKey))
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence of key/value pairs and produces an immutable sorted dictionary of its contents.
  example: []
  syntax:
    content: 'public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TKey, TValue>(this IEnumerable<KeyValuePair<TKey, TValue>> source) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The sequence of key/value pairs to enumerate.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable sorted dictionary that contains the key/value pairs in the specified sequence.
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TKey, TValue)(source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary*
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: ToImmutableSortedDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
references:
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2
  commentId: T:System.Collections.Immutable.ImmutableSortedDictionary`2
  parent: System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  name: ImmutableSortedDictionary<TKey, TValue>
  nameWithType: ImmutableSortedDictionary<TKey, TValue>
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>
  nameWithType.vb: ImmutableSortedDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue)
  name.vb: ImmutableSortedDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create*
  commentId: Overload:System.Collections.Immutable.ImmutableSortedDictionary.Create
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_Create__2
  name: Create
  nameWithType: ImmutableSortedDictionary.Create
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Create
- uid: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Immutable.ImmutableSortedDictionary{`0,`1}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  name: ImmutableSortedDictionary<TKey, TValue>
  nameWithType: ImmutableSortedDictionary<TKey, TValue>
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>
  nameWithType.vb: ImmutableSortedDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue)
  name.vb: ImmutableSortedDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IComparer{{TKey}}
  commentId: T:System.Collections.Generic.IComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<TKey>
  nameWithType: IComparer<TKey>
  fullName: System.Collections.Generic.IComparer<TKey>
  nameWithType.vb: IComparer(Of TKey)
  fullName.vb: System.Collections.Generic.IComparer(Of TKey)
  name.vb: IComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEqualityComparer{{TValue}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<TValue>
  nameWithType: IEqualityComparer<TValue>
  fullName: System.Collections.Generic.IEqualityComparer<TValue>
  nameWithType.vb: IEqualityComparer(Of TValue)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TValue)
  name.vb: IEqualityComparer(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange*
  commentId: Overload:System.Collections.Immutable.ImmutableSortedDictionary.CreateRange
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_CreateRange__2_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair___0___1___
  name: CreateRange
  nameWithType: ImmutableSortedDictionary.CreateRange
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder*
  commentId: Overload:System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_CreateBuilder__2
  name: CreateBuilder
  nameWithType: ImmutableSortedDictionary.CreateBuilder
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder
- uid: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}.Builder
  commentId: T:System.Collections.Immutable.ImmutableSortedDictionary{`0,`1}.Builder
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  name: ImmutableSortedDictionary<TKey, TValue>.Builder
  nameWithType: ImmutableSortedDictionary<TKey, TValue>.Builder
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Builder
  nameWithType.vb: ImmutableSortedDictionary(Of TKey, TValue).Builder
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Builder
  name.vb: ImmutableSortedDictionary(Of TKey, TValue).Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: .
  - uid: System.Collections.Immutable.ImmutableSortedDictionary{`0,`1}.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2.builder
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: .
  - uid: System.Collections.Immutable.ImmutableSortedDictionary{`0,`1}.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2.builder
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
  commentId: T:System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
  parent: System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  name: ImmutableSortedDictionary<TKey, TValue>.Builder
  nameWithType: ImmutableSortedDictionary<TKey, TValue>.Builder
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Builder
  nameWithType.vb: ImmutableSortedDictionary(Of TKey, TValue).Builder
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Builder
  name.vb: ImmutableSortedDictionary(Of TKey, TValue).Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: .
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2.builder
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: .
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2.builder
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary*
  commentId: Overload:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__System_Collections_Generic_IEqualityComparer___2__
  name: ToImmutableSortedDictionary
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary
- uid: System.Collections.Generic.IEnumerable{{TSource}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TSource>
  nameWithType: IEnumerable<TSource>
  fullName: System.Collections.Generic.IEnumerable<TSource>
  nameWithType.vb: IEnumerable(Of TSource)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TSource)
  name.vb: IEnumerable(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: System.Func{{TSource},{TKey}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TSource, TKey>
  nameWithType: Func<TSource, TKey>
  fullName: System.Func<TSource, TKey>
  nameWithType.vb: Func(Of TSource, TKey)
  fullName.vb: System.Func(Of TSource, TKey)
  name.vb: Func(Of TSource, TKey)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: System.Func{{TSource},{TValue}}
  commentId: T:System.Func{``0,``2}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TSource, TValue>
  nameWithType: Func<TSource, TValue>
  fullName: System.Func<TSource, TValue>
  nameWithType.vb: Func(Of TSource, TValue)
  fullName.vb: System.Func(Of TSource, TValue)
  name.vb: Func(Of TSource, TValue)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
