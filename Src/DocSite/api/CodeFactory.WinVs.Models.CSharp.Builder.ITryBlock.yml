### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  id: ITryBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  children:
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock
  langs:
  - csharp
  - vb
  name: ITryBlock
  nameWithType: ITryBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  type: Interface
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ITryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Contract definition all try block implementation should implement.
  example: []
  syntax:
    content: 'public interface ITryBlock : IBlock'
    content.vb: Public Interface ITryBlock Inherits IBlock
  inheritedMembers:
  - CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String)
  id: GenerateTryBlock(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  langs:
  - csharp
  - vb
  name: GenerateTryBlock(string)
  nameWithType: ITryBlock.GenerateTryBlock(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ITryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the try block
  example: []
  syntax:
    content: string GenerateTryBlock(string memberName = null)
    parameters:
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the try block is implemented in.
    return:
      type: System.String
      description: Returns the generated try block
    content.vb: Function GenerateTryBlock(memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock*
  nameWithType.vb: ITryBlock.GenerateTryBlock(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(String)
  name.vb: GenerateTryBlock(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.String)
  id: GenerateTryBlock(System.String,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  langs:
  - csharp
  - vb
  name: GenerateTryBlock(string, string)
  nameWithType: ITryBlock.GenerateTryBlock(string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(string, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ITryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the try block
  example: []
  syntax:
    content: string GenerateTryBlock(string syntax, string memberName = null)
    parameters:
    - id: syntax
      type: System.String
      description: Syntax to be injected into the try block.
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the try block is implemented in.
    return:
      type: System.String
      description: Returns the generated try block
    content.vb: Function GenerateTryBlock(syntax As String, memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock*
  nameWithType.vb: ITryBlock.GenerateTryBlock(String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(String, String)
  name.vb: GenerateTryBlock(String, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  id: GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  langs:
  - csharp
  - vb
  name: GenerateTryBlock(IEnumerable<NamedSyntax>, string)
  nameWithType: ITryBlock.GenerateTryBlock(IEnumerable<NamedSyntax>, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ITryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the try block
  example: []
  syntax:
    content: string GenerateTryBlock(IEnumerable<NamedSyntax> multipleSyntax, string memberName = null)
    parameters:
    - id: multipleSyntax
      type: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
      description: Multiple syntax statements has been provided to be used by the try block.
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the try block is implemented in.
    return:
      type: System.String
      description: Returns the generated try block
    content.vb: Function GenerateTryBlock(multipleSyntax As IEnumerable(Of NamedSyntax), memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock*
  nameWithType.vb: ITryBlock.GenerateTryBlock(IEnumerable(Of NamedSyntax), String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax), String)
  name.vb: GenerateTryBlock(IEnumerable(Of NamedSyntax), String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  id: GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  langs:
  - csharp
  - vb
  name: GenerateTryBlock(string, IEnumerable<NamedSyntax>, string)
  nameWithType: ITryBlock.GenerateTryBlock(string, IEnumerable<NamedSyntax>, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(string, System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ITryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the Try block
  example: []
  syntax:
    content: string GenerateTryBlock(string syntax, IEnumerable<NamedSyntax> multipleSyntax, string memberName = null)
    parameters:
    - id: syntax
      type: System.String
      description: Syntax to be injected into the Try block.
    - id: multipleSyntax
      type: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
      description: Multiple syntax statements has been provided to be used by the Try block.
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the try block is implemented in.
    return:
      type: System.String
      description: Returns the generated try block
    content.vb: Function GenerateTryBlock(syntax As String, multipleSyntax As IEnumerable(Of NamedSyntax), memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock*
  nameWithType.vb: ITryBlock.GenerateTryBlock(String, IEnumerable(Of NamedSyntax), String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(String, System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax), String)
  name.vb: GenerateTryBlock(String, IEnumerable(Of NamedSyntax), String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock
  id: LoggerBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  langs:
  - csharp
  - vb
  name: LoggerBlock
  nameWithType: ITryBlock.LoggerBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ITryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: The logger block supporting the try block, this is optional.
  example: []
  syntax:
    content: ILoggerBlock LoggerBlock { get; }
    parameters: []
    return:
      type: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
    content.vb: ReadOnly Property LoggerBlock As ILoggerBlock
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock*
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks
  id: CatchBlocks
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  langs:
  - csharp
  - vb
  name: CatchBlocks
  nameWithType: ITryBlock.CatchBlocks
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ITryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Catch blocks that support the try block, these are optional.
  example: []
  syntax:
    content: IEnumerable<ICatchBlock> CatchBlocks { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock}
    content.vb: ReadOnly Property CatchBlocks As IEnumerable(Of ICatchBlock)
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks*
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock
  id: FinallyBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  langs:
  - csharp
  - vb
  name: FinallyBlock
  nameWithType: ITryBlock.FinallyBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ITryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Finally blick that supports the try block, this is optional.
  example: []
  syntax:
    content: IFinallyBlock FinallyBlock { get; }
    parameters: []
    return:
      type: CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock
    content.vb: ReadOnly Property FinallyBlock As IFinallyBlock
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock*
references:
- uid: CodeFactory.WinVs.Models.CSharp.Builder
  commentId: N:CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp.Builder
  nameWithType: CodeFactory.WinVs.Models.CSharp.Builder
  fullName: CodeFactory.WinVs.Models.CSharp.Builder
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.Builder
    name: Builder
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.Builder
    name: Builder
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.html
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
  parent: CodeFactory.WinVs.Models.CSharp.Builder.IBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_IBlock_BlockType
  name: BlockType
  nameWithType: IBlock.BlockType
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.IBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.html
  name: IBlock
  nameWithType: IBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_String_
  name: GenerateTryBlock
  nameWithType: ITryBlock.GenerateTryBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
  commentId: T:System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<NamedSyntax>
  nameWithType: IEnumerable<NamedSyntax>
  fullName: System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>
  nameWithType.vb: IEnumerable(Of NamedSyntax)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax)
  name.vb: IEnumerable(Of NamedSyntax)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    name: NamedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    name: NamedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_LoggerBlock
  name: LoggerBlock
  nameWithType: ITryBlock.LoggerBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock.html
  name: ILoggerBlock
  nameWithType: ILoggerBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_CatchBlocks
  name: CatchBlocks
  nameWithType: ITryBlock.CatchBlocks
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks
- uid: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock}
  commentId: T:System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ICatchBlock>
  nameWithType: IEnumerable<ICatchBlock>
  fullName: System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock>
  nameWithType.vb: IEnumerable(Of ICatchBlock)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock)
  name.vb: IEnumerable(Of ICatchBlock)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
    name: ICatchBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
    name: ICatchBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.html
  - name: )
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_FinallyBlock
  name: FinallyBlock
  nameWithType: ITryBlock.FinallyBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock.html
  name: IFinallyBlock
  nameWithType: IFinallyBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock
