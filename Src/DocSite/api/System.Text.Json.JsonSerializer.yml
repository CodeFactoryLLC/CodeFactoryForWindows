### YamlMime:ManagedReference
items:
- uid: System.Text.Json.JsonSerializer
  commentId: T:System.Text.Json.JsonSerializer
  id: JsonSerializer
  parent: System.Text.Json
  children:
  - System.Text.Json.JsonSerializer.Deserialize(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize(System.IO.Stream,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Char},System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Char},System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.Deserialize(System.String,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize(System.String,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonDocument,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonDocument,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonElement,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonElement,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  - System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.Serialization.JsonSerializerContext,System.Threading.CancellationToken)
  - System.Text.Json.JsonSerializer.DeserializeAsyncEnumerable``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  - System.Text.Json.JsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  - System.Text.Json.JsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Threading.CancellationToken)
  - System.Text.Json.JsonSerializer.Deserialize``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize``1(System.IO.Stream,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Char},System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Char},System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonDocument,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonDocument,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonElement,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonElement,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Serialize(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Serialize(System.IO.Stream,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.Serialize(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Serialize(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  - System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext,System.Threading.CancellationToken)
  - System.Text.Json.JsonSerializer.SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  - System.Text.Json.JsonSerializer.SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Threading.CancellationToken)
  - System.Text.Json.JsonSerializer.SerializeToDocument(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.SerializeToDocument(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.SerializeToDocument``1(``0,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.SerializeToDocument``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.SerializeToElement(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.SerializeToElement(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.SerializeToElement``1(``0,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.SerializeToElement``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.SerializeToNode(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.SerializeToNode(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.SerializeToNode``1(``0,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.SerializeToNode``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.JsonSerializer.SerializeToUtf8Bytes``1(``0,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.SerializeToUtf8Bytes``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Serialize``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Serialize``1(System.IO.Stream,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  - System.Text.Json.JsonSerializer.Serialize``1(``0,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.JsonSerializer.Serialize``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  langs:
  - csharp
  - vb
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: System.Text.Json.JsonSerializer
  type: Class
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Provides functionality to serialize objects or value types to JSON and to deserialize JSON into objects or value types.
  example: []
  syntax:
    content: public static class JsonSerializer
    content.vb: Public Module JsonSerializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonDocument,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonDocument,System.Text.Json.JsonSerializerOptions)
  id: Deserialize``1(System.Text.Json.JsonDocument,System.Text.Json.JsonSerializerOptions)
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(JsonDocument, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize<TValue>(JsonDocument, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.Text.Json.JsonDocument, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="typeparamref">TValue</code>.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(this JsonDocument document, JsonSerializerOptions? options = null)
    parameters:
    - id: document
      type: System.Text.Json.JsonDocument
      description: The <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(document As JsonDocument, options As JsonSerializerOptions = Nothing) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">document</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="typeparamref">TValue</code> is not compatible with the JSON.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(JsonDocument, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.JsonDocument, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Of TValue)(JsonDocument, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonDocument,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonDocument,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Deserialize(System.Text.Json.JsonDocument,System.Type,System.Text.Json.JsonSerializerOptions)
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(JsonDocument, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize(JsonDocument, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonDocument, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="paramref">returnType</code>.
  example: []
  syntax:
    content: public static object? Deserialize(this JsonDocument document, Type returnType, JsonSerializerOptions? options = null)
    parameters:
    - id: document
      type: System.Text.Json.JsonDocument
      description: The <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> to convert.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(document As JsonDocument, returnType As Type, options As JsonSerializerOptions = Nothing) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">document</code> or <code class="paramref">returnType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="paramref">returnType</code> is not compatible with the JSON.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(JsonDocument, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonDocument, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(JsonDocument, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonDocument,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonDocument,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Deserialize``1(System.Text.Json.JsonDocument,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(JsonDocument, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Deserialize<TValue>(JsonDocument, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.Text.Json.JsonDocument, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="typeparamref">TValue</code>.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(this JsonDocument document, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: document
      type: System.Text.Json.JsonDocument
      description: The <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> to convert.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(document As JsonDocument, jsonTypeInfo As JsonTypeInfo(Of TValue)) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "    <code class=\"paramref\">document</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>.\r\n\r\n-or-\r\n\r\n<code class=\"paramref\">jsonTypeInfo</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>."
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="typeparamref">TValue</code> is not compatible with the JSON.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(JsonDocument, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.JsonDocument, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Deserialize(Of TValue)(JsonDocument, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonDocument,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonDocument,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Deserialize(System.Text.Json.JsonDocument,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(JsonDocument, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Deserialize(JsonDocument, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonDocument, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="paramref">returnType</code>.
  example: []
  syntax:
    content: public static object? Deserialize(this JsonDocument document, Type returnType, JsonSerializerContext context)
    parameters:
    - id: document
      type: System.Text.Json.JsonDocument
      description: The <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> to convert.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(document As JsonDocument, returnType As Type, context As JsonSerializerContext) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "    <code class=\"paramref\">document</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>.\r\n\r\n-or-\r\n\r\n<code class=\"paramref\">returnType</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>.\r\n\r\n-or-\r\n\r\n<code class=\"paramref\">context</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>."
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="paramref">returnType</code> is not compatible with the JSON.


      -or-


      There is remaining data in the string beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonElement,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonElement,System.Text.Json.JsonSerializerOptions)
  id: Deserialize``1(System.Text.Json.JsonElement,System.Text.Json.JsonSerializerOptions)
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(JsonElement, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize<TValue>(JsonElement, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.Text.Json.JsonElement, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="typeparamref">TValue</code>.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(this JsonElement element, JsonSerializerOptions? options = null)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(element As JsonElement, options As JsonSerializerOptions = Nothing) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="typeparamref">TValue</code> is not compatible with the JSON.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(JsonElement, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.JsonElement, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Of TValue)(JsonElement, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonElement,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonElement,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Deserialize(System.Text.Json.JsonElement,System.Type,System.Text.Json.JsonSerializerOptions)
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(JsonElement, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize(JsonElement, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonElement, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="paramref">returnType</code>.
  example: []
  syntax:
    content: public static object? Deserialize(this JsonElement element, Type returnType, JsonSerializerOptions? options = null)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> to convert.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(element As JsonElement, returnType As Type, options As JsonSerializerOptions = Nothing) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">returnType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="paramref">returnType</code> is not compatible with the JSON.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(JsonElement, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonElement, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(JsonElement, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonElement,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonElement,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Deserialize``1(System.Text.Json.JsonElement,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(JsonElement, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Deserialize<TValue>(JsonElement, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.Text.Json.JsonElement, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="typeparamref">TValue</code>.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(this JsonElement element, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> to convert.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(element As JsonElement, jsonTypeInfo As JsonTypeInfo(Of TValue)) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">jsonTypeInfo</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="typeparamref">TValue</code> is not compatible with the JSON.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(JsonElement, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.JsonElement, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Deserialize(Of TValue)(JsonElement, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonElement,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonElement,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Deserialize(System.Text.Json.JsonElement,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(JsonElement, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Deserialize(JsonElement, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.JsonElement, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="paramref">returnType</code>.
  example: []
  syntax:
    content: public static object? Deserialize(this JsonElement element, Type returnType, JsonSerializerContext context)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> to convert.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(element As JsonElement, returnType As Type, context As JsonSerializerContext) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "    <code class=\"paramref\">returnType</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>.\r\n\r\n-or-\r\n\r\n<code class=\"paramref\">context</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>."
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="paramref">returnType</code> is not compatible with the JSON.


      -or-


      There is remaining data in the string beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
  id: Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(JsonNode?, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize<TValue>(JsonNode?, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.Text.Json.Nodes.JsonNode?, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="typeparamref">TValue</code>.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(this JsonNode? node, JsonSerializerOptions? options = null)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(node As JsonNode, options As JsonSerializerOptions = Nothing) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="typeparamref">TValue</code> is not compatible with the JSON.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(JsonNode, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.Nodes.JsonNode, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Of TValue)(JsonNode, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(JsonNode?, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize(JsonNode?, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode?, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="paramref">returnType</code>.
  example: []
  syntax:
    content: public static object? Deserialize(this JsonNode? node, Type returnType, JsonSerializerOptions? options = null)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> to convert.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(node As JsonNode, returnType As Type, options As JsonSerializerOptions = Nothing) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="paramref">returnType</code> is not compatible with the JSON.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(JsonNode, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(JsonNode, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(JsonNode?, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Deserialize<TValue>(JsonNode?, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.Text.Json.Nodes.JsonNode?, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="typeparamref">TValue</code>.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(this JsonNode? node, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> to convert.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(node As JsonNode, jsonTypeInfo As JsonTypeInfo(Of TValue)) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">jsonTypeInfo</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="typeparamref">TValue</code> is not compatible with the JSON.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(JsonNode, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.Nodes.JsonNode, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Deserialize(Of TValue)(JsonNode, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  isExtensionMethod: true
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(JsonNode?, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Deserialize(JsonNode?, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode?, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representing a single JSON value into a <code class="paramref">returnType</code>.
  example: []
  syntax:
    content: public static object? Deserialize(this JsonNode? node, Type returnType, JsonSerializerContext context)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> to convert.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(node As JsonNode, returnType As Type, context As JsonSerializerContext) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "    <code class=\"paramref\">returnType</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>.\r\n\r\n-or-\r\n\r\n<code class=\"paramref\">context</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>."
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="paramref">returnType</code> is not compatible with the JSON.


      -or-


      There is remaining data in the string beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
  nameWithType.vb: JsonSerializer.Deserialize(JsonNode, Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: Deserialize(JsonNode, Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.SerializeToDocument``1(``0,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToDocument``1(``0,System.Text.Json.JsonSerializerOptions)
  id: SerializeToDocument``1(``0,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToDocument<TValue>(TValue, JsonSerializerOptions?)
  nameWithType: JsonSerializer.SerializeToDocument<TValue>(TValue, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.SerializeToDocument<TValue>(TValue, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonDocument SerializeToDocument<TValue>(TValue value, JsonSerializerOptions? options = null)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.Text.Json.JsonDocument
      description: A <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representation of the JSON value.
    content.vb: Public Shared Function SerializeToDocument(Of TValue)(value As TValue, options As JsonSerializerOptions = Nothing) As JsonDocument
  overload: System.Text.Json.JsonSerializer.SerializeToDocument*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeToDocument(Of TValue)(TValue, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToDocument(Of TValue)(TValue, System.Text.Json.JsonSerializerOptions)
  name.vb: SerializeToDocument(Of TValue)(TValue, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.SerializeToDocument(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToDocument(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  id: SerializeToDocument(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToDocument(object?, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.SerializeToDocument(object?, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.SerializeToDocument(object?, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonDocument SerializeToDocument(object? value, Type inputType, JsonSerializerOptions? options = null)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    return:
      type: System.Text.Json.JsonDocument
      description: A <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function SerializeToDocument(value As Object, inputType As Type, options As JsonSerializerOptions = Nothing) As JsonDocument
  overload: System.Text.Json.JsonSerializer.SerializeToDocument*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">inputType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code>  or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeToDocument(Object, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToDocument(Object, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: SerializeToDocument(Object, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.SerializeToDocument``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.SerializeToDocument``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: SerializeToDocument``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToDocument<TValue>(TValue, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.SerializeToDocument<TValue>(TValue, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.SerializeToDocument<TValue>(TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonDocument SerializeToDocument<TValue>(TValue value, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.Text.Json.JsonDocument
      description: A <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function SerializeToDocument(Of TValue)(value As TValue, jsonTypeInfo As JsonTypeInfo(Of TValue)) As JsonDocument
  overload: System.Text.Json.JsonSerializer.SerializeToDocument*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">jsonTypeInfo</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.SerializeToDocument(Of TValue)(TValue, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToDocument(Of TValue)(TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: SerializeToDocument(Of TValue)(TValue, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.SerializeToDocument(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToDocument(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: SerializeToDocument(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToDocument(object?, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.SerializeToDocument(object?, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.SerializeToDocument(object?, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonDocument SerializeToDocument(object? value, Type inputType, JsonSerializerContext context)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Text.Json.JsonDocument
      description: A <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function SerializeToDocument(value As Object, inputType As Type, context As JsonSerializerContext) As JsonDocument
  overload: System.Text.Json.JsonSerializer.SerializeToDocument*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">inputType</code> or <code class="paramref">context</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.SerializeToDocument(Object, Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToDocument(Object, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: SerializeToDocument(Object, Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.SerializeToElement``1(``0,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToElement``1(``0,System.Text.Json.JsonSerializerOptions)
  id: SerializeToElement``1(``0,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToElement<TValue>(TValue, JsonSerializerOptions?)
  nameWithType: JsonSerializer.SerializeToElement<TValue>(TValue, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.SerializeToElement<TValue>(TValue, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonElement SerializeToElement<TValue>(TValue value, JsonSerializerOptions? options = null)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.Text.Json.JsonElement
      description: A <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representation of the JSON value.
    content.vb: Public Shared Function SerializeToElement(Of TValue)(value As TValue, options As JsonSerializerOptions = Nothing) As JsonElement
  overload: System.Text.Json.JsonSerializer.SerializeToElement*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeToElement(Of TValue)(TValue, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToElement(Of TValue)(TValue, System.Text.Json.JsonSerializerOptions)
  name.vb: SerializeToElement(Of TValue)(TValue, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.SerializeToElement(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToElement(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  id: SerializeToElement(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToElement(object?, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.SerializeToElement(object?, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.SerializeToElement(object?, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonElement SerializeToElement(object? value, Type inputType, JsonSerializerOptions? options = null)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    return:
      type: System.Text.Json.JsonElement
      description: A <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function SerializeToElement(value As Object, inputType As Type, options As JsonSerializerOptions = Nothing) As JsonElement
  overload: System.Text.Json.JsonSerializer.SerializeToElement*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">inputType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code>  or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeToElement(Object, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToElement(Object, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: SerializeToElement(Object, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.SerializeToElement``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.SerializeToElement``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: SerializeToElement``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToElement<TValue>(TValue, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.SerializeToElement<TValue>(TValue, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.SerializeToElement<TValue>(TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonElement SerializeToElement<TValue>(TValue value, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.Text.Json.JsonElement
      description: A <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function SerializeToElement(Of TValue)(value As TValue, jsonTypeInfo As JsonTypeInfo(Of TValue)) As JsonElement
  overload: System.Text.Json.JsonSerializer.SerializeToElement*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">jsonTypeInfo</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.SerializeToElement(Of TValue)(TValue, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToElement(Of TValue)(TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: SerializeToElement(Of TValue)(TValue, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.SerializeToElement(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToElement(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: SerializeToElement(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToElement(object?, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.SerializeToElement(object?, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.SerializeToElement(object?, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonElement SerializeToElement(object? value, Type inputType, JsonSerializerContext context)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Text.Json.JsonElement
      description: A <xref href="System.Text.Json.JsonDocument" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function SerializeToElement(value As Object, inputType As Type, context As JsonSerializerContext) As JsonElement
  overload: System.Text.Json.JsonSerializer.SerializeToElement*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">inputType</code> or <code class="paramref">context</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.SerializeToElement(Object, Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToElement(Object, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: SerializeToElement(Object, Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.SerializeToNode``1(``0,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToNode``1(``0,System.Text.Json.JsonSerializerOptions)
  id: SerializeToNode``1(``0,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToNode<TValue>(TValue, JsonSerializerOptions?)
  nameWithType: JsonSerializer.SerializeToNode<TValue>(TValue, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.SerializeToNode<TValue>(TValue, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonNode? SerializeToNode<TValue>(TValue value, JsonSerializerOptions? options = null)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representation of the JSON value.
    content.vb: Public Shared Function SerializeToNode(Of TValue)(value As TValue, options As JsonSerializerOptions = Nothing) As JsonNode
  overload: System.Text.Json.JsonSerializer.SerializeToNode*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeToNode(Of TValue)(TValue, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToNode(Of TValue)(TValue, System.Text.Json.JsonSerializerOptions)
  name.vb: SerializeToNode(Of TValue)(TValue, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.SerializeToNode(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToNode(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  id: SerializeToNode(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToNode(object?, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.SerializeToNode(object?, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.SerializeToNode(object?, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonNode? SerializeToNode(object? value, Type inputType, JsonSerializerOptions? options = null)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function SerializeToNode(value As Object, inputType As Type, options As JsonSerializerOptions = Nothing) As JsonNode
  overload: System.Text.Json.JsonSerializer.SerializeToNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">inputType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code>  or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeToNode(Object, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToNode(Object, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: SerializeToNode(Object, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.SerializeToNode``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.SerializeToNode``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: SerializeToNode``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToNode<TValue>(TValue, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.SerializeToNode<TValue>(TValue, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.SerializeToNode<TValue>(TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonNode? SerializeToNode<TValue>(TValue value, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function SerializeToNode(Of TValue)(value As TValue, jsonTypeInfo As JsonTypeInfo(Of TValue)) As JsonNode
  overload: System.Text.Json.JsonSerializer.SerializeToNode*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">jsonTypeInfo</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.SerializeToNode(Of TValue)(TValue, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToNode(Of TValue)(TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: SerializeToNode(Of TValue)(TValue, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.SerializeToNode(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToNode(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: SerializeToNode(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToNode(object?, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.SerializeToNode(object?, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.SerializeToNode(object?, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static JsonNode? SerializeToNode(object? value, Type inputType, JsonSerializerContext context)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function SerializeToNode(value As Object, inputType As Type, context As JsonSerializerContext) As JsonNode
  overload: System.Text.Json.JsonSerializer.SerializeToNode*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">inputType</code> or <code class="paramref">context</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.SerializeToNode(Object, Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToNode(Object, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: SerializeToNode(Object, Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonSerializerOptions)
  id: Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(ReadOnlySpan<byte>, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize<TValue>(ReadOnlySpan<byte>, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.ReadOnlySpan<byte>, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the UTF-8 encoded text representing a single JSON value into an instance of the type specified by a generic type parameter.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(ReadOnlySpan<byte> utf8Json, JsonSerializerOptions? options = null)
    parameters:
    - id: utf8Json
      type: System.ReadOnlySpan{System.Byte}
      description: The JSON text to parse.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    typeParameters:
    - id: TValue
      description: The target type of the UTF-8 encoded text.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(utf8Json As ReadOnlySpan(Of Byte), options As JsonSerializerOptions = Nothing) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">TValue</code> is not compatible with the JSON.


      -or-


      There is remaining data in the span beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(ReadOnlySpan(Of Byte), JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.ReadOnlySpan(Of Byte), System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Of TValue)(ReadOnlySpan(Of Byte), JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.JsonSerializerOptions)
  id: Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(ReadOnlySpan<byte>, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize(ReadOnlySpan<byte>, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan<byte>, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the UTF-8 encoded text representing a single JSON value into an instance of a specified type.
  example: []
  syntax:
    content: public static object? Deserialize(ReadOnlySpan<byte> utf8Json, Type returnType, JsonSerializerOptions? options = null)
    parameters:
    - id: utf8Json
      type: System.ReadOnlySpan{System.Byte}
      description: The JSON text to parse.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(utf8Json As ReadOnlySpan(Of Byte), returnType As Type, options As JsonSerializerOptions = Nothing) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">returnType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">returnType</code> is not compatible with the JSON.


      -or-


      There is remaining data in the span beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="paramref">returnType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(ReadOnlySpan(Of Byte), Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan(Of Byte), System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(ReadOnlySpan(Of Byte), Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(ReadOnlySpan<byte>, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Deserialize<TValue>(ReadOnlySpan<byte>, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.ReadOnlySpan<byte>, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the UTF-8 encoded text representing a single JSON value into a <code class="typeparamref">TValue</code>.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(ReadOnlySpan<byte> utf8Json, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: utf8Json
      type: System.ReadOnlySpan{System.Byte}
      description: JSON text to parse.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(utf8Json As ReadOnlySpan(Of Byte), jsonTypeInfo As JsonTypeInfo(Of TValue)) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: The JSON is invalid, <code class="typeparamref">TValue</code> is not compatible with the JSON, or there is remaining data in the Stream.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(ReadOnlySpan(Of Byte), JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.ReadOnlySpan(Of Byte), System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Deserialize(Of TValue)(ReadOnlySpan(Of Byte), JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(ReadOnlySpan<byte>, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Deserialize(ReadOnlySpan<byte>, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan<byte>, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the UTF-8 encoded text representing a single JSON value into a <code class="paramref">returnType</code>.
  example: []
  syntax:
    content: public static object? Deserialize(ReadOnlySpan<byte> utf8Json, Type returnType, JsonSerializerContext context)
    parameters:
    - id: utf8Json
      type: System.ReadOnlySpan{System.Byte}
      description: JSON text to parse.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(utf8Json As ReadOnlySpan(Of Byte), returnType As Type, context As JsonSerializerContext) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">returnType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: The JSON is invalid, <code class="paramref">returnType</code> is not compatible with the JSON, or there is remaining data in the Stream.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method on the provided <code class="paramref">context</code> did not return a compatible <xref href="System.Text.Json.Serialization.Metadata.JsonTypeInfo" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code>.
  nameWithType.vb: JsonSerializer.Deserialize(ReadOnlySpan(Of Byte), Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan(Of Byte), System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: Deserialize(ReadOnlySpan(Of Byte), Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  commentId: M:System.Text.Json.JsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  id: DeserializeAsync``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: DeserializeAsync<TValue>(Stream, JsonSerializerOptions?, CancellationToken)
  nameWithType: JsonSerializer.DeserializeAsync<TValue>(Stream, JsonSerializerOptions?, CancellationToken)
  fullName: System.Text.Json.JsonSerializer.DeserializeAsync<TValue>(System.IO.Stream, System.Text.Json.JsonSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Asynchronously reads the UTF-8 encoded text representing a single JSON value into an instance of a type specified by a generic type parameter. The stream will be read to completion.
  example: []
  syntax:
    content: public static ValueTask<TValue?> DeserializeAsync<TValue>(Stream utf8Json, JsonSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: The JSON data to parse.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during reading.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token that may be used to cancel the read operation.
    typeParameters:
    - id: TValue
      description: The target type of the JSON value.
    return:
      type: System.Threading.Tasks.ValueTask{{TValue}}
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function DeserializeAsync(Of TValue)(utf8Json As Stream, options As JsonSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As ValueTask(Of TValue)
  overload: System.Text.Json.JsonSerializer.DeserializeAsync*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">TValue</code> is not compatible with the JSON.


      -or-


      There is remaining data in the stream.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="typeparamref">TValue</code> or its serializable members.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code>is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.DeserializeAsync(Of TValue)(Stream, JsonSerializerOptions, CancellationToken)
  fullName.vb: System.Text.Json.JsonSerializer.DeserializeAsync(Of TValue)(System.IO.Stream, System.Text.Json.JsonSerializerOptions, System.Threading.CancellationToken)
  name.vb: DeserializeAsync(Of TValue)(Stream, JsonSerializerOptions, CancellationToken)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions)
  id: Deserialize``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(Stream, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize<TValue>(Stream, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.IO.Stream, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: >-
    Reads the UTF-8 encoded text representing a single JSON value into a <code class="typeparamref">TValue</code>.
                The Stream will be read to completion.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(Stream utf8Json, JsonSerializerOptions? options = null)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: JSON data to parse.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during reading.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(utf8Json As Stream, options As JsonSerializerOptions = Nothing) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: The JSON is invalid, <code class="typeparamref">TValue</code> is not compatible with the JSON, or there is remaining data in the Stream.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(Stream, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.IO.Stream, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Of TValue)(Stream, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  commentId: M:System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  id: DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: DeserializeAsync(Stream, Type, JsonSerializerOptions?, CancellationToken)
  nameWithType: JsonSerializer.DeserializeAsync(Stream, Type, JsonSerializerOptions?, CancellationToken)
  fullName: System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream, System.Type, System.Text.Json.JsonSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Asynchronously reads the UTF-8 encoded text representing a single JSON value into an instance of a specified type. The stream will be read to completion.
  example: []
  syntax:
    content: public static ValueTask<object?> DeserializeAsync(Stream utf8Json, Type returnType, JsonSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: The JSON data to parse.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during reading.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that may be used to cancel the read operation.
    return:
      type: System.Threading.Tasks.ValueTask{System.Object}
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function DeserializeAsync(utf8Json As Stream, returnType As Type, options As JsonSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)
  overload: System.Text.Json.JsonSerializer.DeserializeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> or <code class="paramref">returnType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">TValue</code> is not compatible with the JSON.


      -or-


      There is remaining data in the stream.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="paramref">returnType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.DeserializeAsync(Stream, Type, JsonSerializerOptions, CancellationToken)
  fullName.vb: System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream, System.Type, System.Text.Json.JsonSerializerOptions, System.Threading.CancellationToken)
  name.vb: DeserializeAsync(Stream, Type, JsonSerializerOptions, CancellationToken)
- uid: System.Text.Json.JsonSerializer.Deserialize(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Deserialize(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Stream, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize(Stream, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.IO.Stream, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: >-
    Reads the UTF-8 encoded text representing a single JSON value into a <code class="paramref">returnType</code>.
                The Stream will be read to completion.
  example: []
  syntax:
    content: public static object? Deserialize(Stream utf8Json, Type returnType, JsonSerializerOptions? options = null)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: JSON data to parse.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during reading.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(utf8Json As Stream, returnType As Type, options As JsonSerializerOptions = Nothing) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> or <code class="paramref">returnType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: The JSON is invalid, the <code class="paramref">returnType</code> is not compatible with the JSON, or there is remaining data in the Stream.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Stream, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.IO.Stream, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Stream, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Threading.CancellationToken)
  commentId: M:System.Text.Json.JsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Threading.CancellationToken)
  id: DeserializeAsync``1(System.IO.Stream,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Threading.CancellationToken)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: DeserializeAsync<TValue>(Stream, JsonTypeInfo<TValue>, CancellationToken)
  nameWithType: JsonSerializer.DeserializeAsync<TValue>(Stream, JsonTypeInfo<TValue>, CancellationToken)
  fullName: System.Text.Json.JsonSerializer.DeserializeAsync<TValue>(System.IO.Stream, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: >-
    Reads the UTF-8 encoded text representing a single JSON value into a <code class="typeparamref">TValue</code>.
                The Stream will be read to completion.
  example: []
  syntax:
    content: public static ValueTask<TValue?> DeserializeAsync<TValue>(Stream utf8Json, JsonTypeInfo<TValue> jsonTypeInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: JSON data to parse.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> which may be used to cancel the read operation.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: System.Threading.Tasks.ValueTask{{TValue}}
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function DeserializeAsync(Of TValue)(utf8Json As Stream, jsonTypeInfo As JsonTypeInfo(Of TValue), cancellationToken As CancellationToken = Nothing) As ValueTask(Of TValue)
  overload: System.Text.Json.JsonSerializer.DeserializeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> or <code class="paramref">jsonTypeInfo</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: The JSON is invalid, <code class="typeparamref">TValue</code> is not compatible with the JSON, or there is remaining data in the Stream.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.DeserializeAsync(Of TValue)(Stream, JsonTypeInfo(Of TValue), CancellationToken)
  fullName.vb: System.Text.Json.JsonSerializer.DeserializeAsync(Of TValue)(System.IO.Stream, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue), System.Threading.CancellationToken)
  name.vb: DeserializeAsync(Of TValue)(Stream, JsonTypeInfo(Of TValue), CancellationToken)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.IO.Stream,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.IO.Stream,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Deserialize``1(System.IO.Stream,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(Stream, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Deserialize<TValue>(Stream, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.IO.Stream, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: >-
    Reads the UTF-8 encoded text representing a single JSON value into a <code class="typeparamref">TValue</code>.
                The Stream will be read to completion.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(Stream utf8Json, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: JSON data to parse.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(utf8Json As Stream, jsonTypeInfo As JsonTypeInfo(Of TValue)) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> or <code class="paramref">jsonTypeInfo</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: The JSON is invalid, <code class="typeparamref">TValue</code> is not compatible with the JSON, or there is remaining data in the Stream.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(Stream, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.IO.Stream, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Deserialize(Of TValue)(Stream, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.Serialization.JsonSerializerContext,System.Threading.CancellationToken)
  commentId: M:System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.Serialization.JsonSerializerContext,System.Threading.CancellationToken)
  id: DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.Serialization.JsonSerializerContext,System.Threading.CancellationToken)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: DeserializeAsync(Stream, Type, JsonSerializerContext, CancellationToken)
  nameWithType: JsonSerializer.DeserializeAsync(Stream, Type, JsonSerializerContext, CancellationToken)
  fullName: System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream, System.Type, System.Text.Json.Serialization.JsonSerializerContext, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: >-
    Reads the UTF-8 encoded text representing a single JSON value into a <code class="paramref">returnType</code>.
                The Stream will be read to completion.
  example: []
  syntax:
    content: public static ValueTask<object?> DeserializeAsync(Stream utf8Json, Type returnType, JsonSerializerContext context, CancellationToken cancellationToken = default)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: JSON data to parse.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> that can be used to cancel the read operation.
    return:
      type: System.Threading.Tasks.ValueTask{System.Object}
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function DeserializeAsync(utf8Json As Stream, returnType As Type, context As JsonSerializerContext, cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)
  overload: System.Text.Json.JsonSerializer.DeserializeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code>, <code class="paramref">returnType</code>, or <code class="paramref">context</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: The JSON is invalid, the <code class="paramref">returnType</code> is not compatible with the JSON, or there is remaining data in the Stream.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method on the provided <code class="paramref">context</code> did not return a compatible <xref href="System.Text.Json.Serialization.Metadata.JsonTypeInfo" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code>.
- uid: System.Text.Json.JsonSerializer.Deserialize(System.IO.Stream,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.IO.Stream,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Deserialize(System.IO.Stream,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Stream, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Deserialize(Stream, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.IO.Stream, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: >-
    Reads the UTF-8 encoded text representing a single JSON value into a <code class="paramref">returnType</code>.
                The Stream will be read to completion.
  example: []
  syntax:
    content: public static object? Deserialize(Stream utf8Json, Type returnType, JsonSerializerContext context)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: JSON data to parse.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(utf8Json As Stream, returnType As Type, context As JsonSerializerContext) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code>, <code class="paramref">returnType</code>, or <code class="paramref">context</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: The JSON is invalid, the <code class="paramref">returnType</code> is not compatible with the JSON, or there is remaining data in the Stream.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method on the provided <code class="paramref">context</code> did not return a compatible <xref href="System.Text.Json.Serialization.Metadata.JsonTypeInfo" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code>.
- uid: System.Text.Json.JsonSerializer.DeserializeAsyncEnumerable``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  commentId: M:System.Text.Json.JsonSerializer.DeserializeAsyncEnumerable``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  id: DeserializeAsyncEnumerable``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: DeserializeAsyncEnumerable<TValue>(Stream, JsonSerializerOptions?, CancellationToken)
  nameWithType: JsonSerializer.DeserializeAsyncEnumerable<TValue>(Stream, JsonSerializerOptions?, CancellationToken)
  fullName: System.Text.Json.JsonSerializer.DeserializeAsyncEnumerable<TValue>(System.IO.Stream, System.Text.Json.JsonSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Wraps the UTF-8 encoded text into an <xref href="System.Collections.Generic.IAsyncEnumerable%601" data-throw-if-not-resolved="false"></xref> that can be used to deserialize root-level JSON arrays in a streaming manner.
  example: []
  syntax:
    content: public static IAsyncEnumerable<TValue?> DeserializeAsyncEnumerable<TValue>(Stream utf8Json, JsonSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: JSON data to parse.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during reading.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> which may be used to cancel the read operation.
    typeParameters:
    - id: TValue
      description: The element type to deserialize asynchronously.
    return:
      type: System.Collections.Generic.IAsyncEnumerable{{TValue}}
      description: An <xref href="System.Collections.Generic.IAsyncEnumerable%601" data-throw-if-not-resolved="false"></xref> representation of the provided JSON array.
    content.vb: Public Shared Function DeserializeAsyncEnumerable(Of TValue)(utf8Json As Stream, options As JsonSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of TValue)
  overload: System.Text.Json.JsonSerializer.DeserializeAsyncEnumerable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.DeserializeAsyncEnumerable(Of TValue)(Stream, JsonSerializerOptions, CancellationToken)
  fullName.vb: System.Text.Json.JsonSerializer.DeserializeAsyncEnumerable(Of TValue)(System.IO.Stream, System.Text.Json.JsonSerializerOptions, System.Threading.CancellationToken)
  name.vb: DeserializeAsyncEnumerable(Of TValue)(Stream, JsonSerializerOptions, CancellationToken)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)
  id: Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(string, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize<TValue>(string, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(string, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the text representing a single JSON value into an instance of the type specified by a generic type parameter.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(string json, JsonSerializerOptions? options = null)
    parameters:
    - id: json
      type: System.String
      description: The JSON text to parse.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    typeParameters:
    - id: TValue
      description: The target type of the JSON value.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(json As String, options As JsonSerializerOptions = Nothing) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">json</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">TValue</code> is not compatible with the JSON.


      -or-


      There is remaining data in the string beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(String, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(String, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Of TValue)(String, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Char},System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Char},System.Text.Json.JsonSerializerOptions)
  id: Deserialize``1(System.ReadOnlySpan{System.Char},System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(ReadOnlySpan<char>, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize<TValue>(ReadOnlySpan<char>, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.ReadOnlySpan<char>, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the text representing a single JSON value into an instance of the type specified by a generic type parameter.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(ReadOnlySpan<char> json, JsonSerializerOptions? options = null)
    parameters:
    - id: json
      type: System.ReadOnlySpan{System.Char}
      description: The JSON text to parse.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(json As ReadOnlySpan(Of Char), options As JsonSerializerOptions = Nothing) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">TValue</code> is not compatible with the JSON.


      -or-


      There is remaining data in the span beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(ReadOnlySpan(Of Char), JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.ReadOnlySpan(Of Char), System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Of TValue)(ReadOnlySpan(Of Char), JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize(System.String,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.String,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Deserialize(System.String,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(string, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize(string, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize(string, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the text representing a single JSON value into an instance of a specified type.
  example: []
  syntax:
    content: public static object? Deserialize(string json, Type returnType, JsonSerializerOptions? options = null)
    parameters:
    - id: json
      type: System.String
      description: The JSON text to parse.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(json As String, returnType As Type, options As JsonSerializerOptions = Nothing) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">json</code> or <code class="paramref">returnType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">TValue</code> is not compatible with the JSON.


      -or-


      There is remaining data in the string beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="paramref">returnType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(String, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(String, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(String, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Char},System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Char},System.Type,System.Text.Json.JsonSerializerOptions)
  id: Deserialize(System.ReadOnlySpan{System.Char},System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(ReadOnlySpan<char>, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize(ReadOnlySpan<char>, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan<char>, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the text representing a single JSON value into an instance of a specified type.
  example: []
  syntax:
    content: public static object? Deserialize(ReadOnlySpan<char> json, Type returnType, JsonSerializerOptions? options = null)
    parameters:
    - id: json
      type: System.ReadOnlySpan{System.Char}
      description: The JSON text to parse.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the behavior during parsing.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(json As ReadOnlySpan(Of Char), returnType As Type, options As JsonSerializerOptions = Nothing) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">returnType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="paramref">returnType</code> is not compatible with the JSON.


      -or-


      There is remaining data in the span beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(ReadOnlySpan(Of Char), Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan(Of Char), System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(ReadOnlySpan(Of Char), Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Deserialize``1(System.String,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(string, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Deserialize<TValue>(string, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(string, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the text representing a single JSON value into a <code class="typeparamref">TValue</code>.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(string json, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: json
      type: System.String
      description: JSON text to parse.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(json As String, jsonTypeInfo As JsonTypeInfo(Of TValue)) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "    <code class=\"paramref\">json</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>.\r\n\r\n-or-\r\n\r\n<code class=\"paramref\">jsonTypeInfo</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>."
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">TValue</code> is not compatible with the JSON.


      -or-


      There is remaining data in the string beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(String, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(String, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Deserialize(Of TValue)(String, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Char},System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Char},System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Deserialize``1(System.ReadOnlySpan{System.Char},System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(ReadOnlySpan<char>, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Deserialize<TValue>(ReadOnlySpan<char>, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.ReadOnlySpan<char>, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the text representing a single JSON value into a <code class="typeparamref">TValue</code>.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(ReadOnlySpan<char> json, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: json
      type: System.ReadOnlySpan{System.Char}
      description: JSON text to parse.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(json As ReadOnlySpan(Of Char), jsonTypeInfo As JsonTypeInfo(Of TValue)) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "    <code class=\"paramref\">json</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>.\r\n\r\n-or-\r\n\r\n<code class=\"paramref\">jsonTypeInfo</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>."
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">TValue</code> is not compatible with the JSON.


      -or-


      There is remaining data in the string beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(ReadOnlySpan(Of Char), JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.ReadOnlySpan(Of Char), System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Deserialize(Of TValue)(ReadOnlySpan(Of Char), JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.Deserialize(System.String,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.String,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Deserialize(System.String,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(string, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Deserialize(string, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Deserialize(string, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the text representing a single JSON value into a <code class="paramref">returnType</code>.
  example: []
  syntax:
    content: public static object? Deserialize(string json, Type returnType, JsonSerializerContext context)
    parameters:
    - id: json
      type: System.String
      description: JSON text to parse.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(json As String, returnType As Type, context As JsonSerializerContext) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "    <code class=\"paramref\">json</code> or <code class=\"paramref\">returnType</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>.\r\n\r\n-or-\r\n\r\n<code class=\"paramref\">context</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>."
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="paramref">returnType</code> is not compatible with the JSON.


      -or-


      There is remaining data in the string beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
  nameWithType.vb: JsonSerializer.Deserialize(String, Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(String, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: Deserialize(String, Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Char},System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Char},System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Deserialize(System.ReadOnlySpan{System.Char},System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(ReadOnlySpan<char>, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Deserialize(ReadOnlySpan<char>, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan<char>, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Parses the text representing a single JSON value into a <code class="paramref">returnType</code>.
  example: []
  syntax:
    content: public static object? Deserialize(ReadOnlySpan<char> json, Type returnType, JsonSerializerContext context)
    parameters:
    - id: json
      type: System.ReadOnlySpan{System.Char}
      description: JSON text to parse.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(json As ReadOnlySpan(Of Char), returnType As Type, context As JsonSerializerContext) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "    <code class=\"paramref\">json</code> or <code class=\"paramref\">returnType</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>.\r\n\r\n-or-\r\n\r\n<code class=\"paramref\">context</code> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a>."
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="paramref">returnType</code> is not compatible with the JSON.


      -or-


      There is remaining data in the string beyond a single JSON value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
  nameWithType.vb: JsonSerializer.Deserialize(ReadOnlySpan(Of Char), Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan(Of Char), System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: Deserialize(ReadOnlySpan(Of Char), Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonSerializerOptions)
  id: Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(ref Utf8JsonReader, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize<TValue>(ref Utf8JsonReader, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(ref System.Text.Json.Utf8JsonReader, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Reads one JSON value (including objects or arrays) from the provided reader into an instance of the type specified by a generic type parameter.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(ref Utf8JsonReader reader, JsonSerializerOptions? options = null)
    parameters:
    - id: reader
      type: System.Text.Json.Utf8JsonReader
      description: The reader to read the JSON from.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control serializer behavior during reading.
    typeParameters:
    - id: TValue
      description: The target type of the JSON value.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(reader As Utf8JsonReader, options As JsonSerializerOptions = Nothing) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">TValue</code> is not compatible with the JSON.


      -or-


      A value could not be read from the reader.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">reader</code> uses unsupported options.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(Utf8JsonReader, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.Utf8JsonReader, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Of TValue)(Utf8JsonReader, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(ref Utf8JsonReader, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Deserialize(ref Utf8JsonReader, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Deserialize(ref System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Reads one JSON value (including objects or arrays) from the provided reader and converts it into an instance of  a specified type.
  example: []
  syntax:
    content: public static object? Deserialize(ref Utf8JsonReader reader, Type returnType, JsonSerializerOptions? options = null)
    parameters:
    - id: reader
      type: System.Text.Json.Utf8JsonReader
      description: The reader to read the JSON from.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the serializer behavior during reading.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(reader As Utf8JsonReader, returnType As Type, options As JsonSerializerOptions = Nothing) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">returnType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: >-
      The JSON is invalid.


      -or-


      <code class="typeparamref">returnType</code> is not compatible with the JSON.


      -or-


      A value could not be read from the reader.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">reader</code> is using unsupported options.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="paramref">returnType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Utf8JsonReader, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Utf8JsonReader, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<TValue>(ref Utf8JsonReader, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Deserialize<TValue>(ref Utf8JsonReader, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(ref System.Text.Json.Utf8JsonReader, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Reads one JSON value (including objects or arrays) from the provided reader into a <code class="typeparamref">TValue</code>.
  example: []
  syntax:
    content: public static TValue? Deserialize<TValue>(ref Utf8JsonReader reader, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: reader
      type: System.Text.Json.Utf8JsonReader
      description: The reader to read.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type to deserialize the JSON value into.
    return:
      type: '{TValue}'
      description: A <code class="typeparamref">TValue</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(Of TValue)(reader As Utf8JsonReader, jsonTypeInfo As JsonTypeInfo(Of TValue)) As TValue
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: The JSON is invalid, <code class="typeparamref">TValue</code> is not compatible with the JSON, or a value could not be read from the reader.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">reader</code> is using unsupported options.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(Utf8JsonReader, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.Utf8JsonReader, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Deserialize(Of TValue)(Utf8JsonReader, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(ref Utf8JsonReader, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Deserialize(ref Utf8JsonReader, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Deserialize(ref System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Reads one JSON value (including objects or arrays) from the provided reader into a <code class="paramref">returnType</code>.
  example: []
  syntax:
    content: public static object? Deserialize(ref Utf8JsonReader reader, Type returnType, JsonSerializerContext context)
    parameters:
    - id: reader
      type: System.Text.Json.Utf8JsonReader
      description: The reader to read.
    - id: returnType
      type: System.Type
      description: The type of the object to convert to and return.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Object
      description: A <code class="paramref">returnType</code> representation of the JSON value.
    content.vb: Public Shared Function Deserialize(reader As Utf8JsonReader, returnType As Type, context As JsonSerializerContext) As Object
  overload: System.Text.Json.JsonSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">returnType</code> or <code class="paramref">context</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: The JSON is invalid, <code class="paramref">returnType</code> is not compatible with the JSON, or a value could not be read from the reader.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">reader</code> is using unsupported options.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method on the provided <code class="paramref">context</code> did not return a compatible <xref href="System.Text.Json.Serialization.Metadata.JsonTypeInfo" data-throw-if-not-resolved="false"></xref> for <code class="paramref">returnType</code>.
  nameWithType.vb: JsonSerializer.Deserialize(Utf8JsonReader, Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: Deserialize(Utf8JsonReader, Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes``1(``0,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes``1(``0,System.Text.Json.JsonSerializerOptions)
  id: SerializeToUtf8Bytes``1(``0,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToUtf8Bytes<TValue>(TValue, JsonSerializerOptions?)
  nameWithType: JsonSerializer.SerializeToUtf8Bytes<TValue>(TValue, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes<TValue>(TValue, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the value of a type specified by a generic type parameter into a JSON string, encoded as UTF-8 bytes.
  example: []
  syntax:
    content: public static byte[] SerializeToUtf8Bytes<TValue>(TValue value, JsonSerializerOptions? options = null)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    typeParameters:
    - id: TValue
      description: The type of the value.
    return:
      type: System.Byte[]
      description: A JSON string representation of the value, encoded as UTF-8 bytes.
    content.vb: Public Shared Function SerializeToUtf8Bytes(Of TValue)(value As TValue, options As JsonSerializerOptions = Nothing) As Byte()
  overload: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeToUtf8Bytes(Of TValue)(TValue, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(Of TValue)(TValue, System.Text.Json.JsonSerializerOptions)
  name.vb: SerializeToUtf8Bytes(Of TValue)(TValue, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  id: SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToUtf8Bytes(object?, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.SerializeToUtf8Bytes(object?, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(object?, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts a value of the specified type into a JSON string, encoded as UTF-8 bytes.
  example: []
  syntax:
    content: public static byte[] SerializeToUtf8Bytes(object? value, Type inputType, JsonSerializerOptions? options = null)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    return:
      type: System.Byte[]
      description: A JSON string representation of the value, encoded as UTF-8 bytes.
    content.vb: Public Shared Function SerializeToUtf8Bytes(value As Object, inputType As Type, options As JsonSerializerOptions = Nothing) As Byte()
  overload: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">inputType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="paramref">inputType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeToUtf8Bytes(Object, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(Object, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: SerializeToUtf8Bytes(Object, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: SerializeToUtf8Bytes``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToUtf8Bytes<TValue>(TValue, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.SerializeToUtf8Bytes<TValue>(TValue, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes<TValue>(TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array.
  example: []
  syntax:
    content: public static byte[] SerializeToUtf8Bytes<TValue>(TValue value, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.Byte[]
      description: A UTF-8 representation of the value.
    content.vb: Public Shared Function SerializeToUtf8Bytes(Of TValue)(value As TValue, jsonTypeInfo As JsonTypeInfo(Of TValue)) As Byte()
  overload: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">jsonTypeInfo</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.SerializeToUtf8Bytes(Of TValue)(TValue, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(Of TValue)(TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: SerializeToUtf8Bytes(Of TValue)(TValue, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeToUtf8Bytes(object?, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.SerializeToUtf8Bytes(object?, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(object?, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array.
  example: []
  syntax:
    content: public static byte[] SerializeToUtf8Bytes(object? value, Type inputType, JsonSerializerContext context)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.Byte[]
      description: A UTF-8 representation of the value.
    content.vb: Public Shared Function SerializeToUtf8Bytes(value As Object, inputType As Type, context As JsonSerializerContext) As Byte()
  overload: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">inputType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code>  or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
  nameWithType.vb: JsonSerializer.SerializeToUtf8Bytes(Object, Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(Object, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: SerializeToUtf8Bytes(Object, Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  commentId: M:System.Text.Json.JsonSerializer.SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  id: SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeAsync<TValue>(Stream, TValue, JsonSerializerOptions?, CancellationToken)
  nameWithType: JsonSerializer.SerializeAsync<TValue>(Stream, TValue, JsonSerializerOptions?, CancellationToken)
  fullName: System.Text.Json.JsonSerializer.SerializeAsync<TValue>(System.IO.Stream, TValue, System.Text.Json.JsonSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Asynchronously converts a value of a type specified by a generic type parameter to UTF-8 encoded JSON text and writes it to a stream.
  example: []
  syntax:
    content: public static Task SerializeAsync<TValue>(Stream utf8Json, TValue value, JsonSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: The UTF-8 stream to write to.
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control serialization behavior.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token that may be used to cancel the write operation.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
    content.vb: Public Shared Function SerializeAsync(Of TValue)(utf8Json As Stream, value As TValue, options As JsonSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: System.Text.Json.JsonSerializer.SerializeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeAsync(Of TValue)(Stream, TValue, JsonSerializerOptions, CancellationToken)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeAsync(Of TValue)(System.IO.Stream, TValue, System.Text.Json.JsonSerializerOptions, System.Threading.CancellationToken)
  name.vb: SerializeAsync(Of TValue)(Stream, TValue, JsonSerializerOptions, CancellationToken)
- uid: System.Text.Json.JsonSerializer.Serialize``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Serialize``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions)
  id: Serialize``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize<TValue>(Stream, TValue, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Serialize<TValue>(Stream, TValue, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Serialize<TValue>(System.IO.Stream, TValue, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value to UTF-8 encoded JSON text and write it to the <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void Serialize<TValue>(Stream utf8Json, TValue value, JsonSerializerOptions? options = null)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: The UTF-8 <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> to write to.
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    content.vb: Public Shared Sub Serialize(Of TValue)(utf8Json As Stream, value As TValue, options As JsonSerializerOptions = Nothing)
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Serialize(Of TValue)(Stream, TValue, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(Of TValue)(System.IO.Stream, TValue, System.Text.Json.JsonSerializerOptions)
  name.vb: Serialize(Of TValue)(Stream, TValue, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  commentId: M:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  id: SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeAsync(Stream, object?, Type, JsonSerializerOptions?, CancellationToken)
  nameWithType: JsonSerializer.SerializeAsync(Stream, object?, Type, JsonSerializerOptions?, CancellationToken)
  fullName: System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream, object?, System.Type, System.Text.Json.JsonSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Asynchronously converts the value of a specified type to UTF-8 encoded JSON text and writes it to the specified stream.
  example: []
  syntax:
    content: public static Task SerializeAsync(Stream utf8Json, object? value, Type inputType, JsonSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: The UTF-8 stream to write to.
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control serialization behavior.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token that may be used to cancel the write operation.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
    content.vb: Public Shared Function SerializeAsync(utf8Json As Stream, value As Object, inputType As Type, options As JsonSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: System.Text.Json.JsonSerializer.SerializeAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> or <code class="paramref">inputType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="paramref">inputType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeAsync(Stream, Object, Type, JsonSerializerOptions, CancellationToken)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream, Object, System.Type, System.Text.Json.JsonSerializerOptions, System.Threading.CancellationToken)
  name.vb: SerializeAsync(Stream, Object, Type, JsonSerializerOptions, CancellationToken)
- uid: System.Text.Json.JsonSerializer.Serialize(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Serialize(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Serialize(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Stream, object?, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Serialize(Stream, object?, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Serialize(System.IO.Stream, object?, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value to UTF-8 encoded JSON text and write it to the <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void Serialize(Stream utf8Json, object? value, Type inputType, JsonSerializerOptions? options = null)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: The UTF-8 <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> to write to.
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    content.vb: Public Shared Sub Serialize(utf8Json As Stream, value As Object, inputType As Type, options As JsonSerializerOptions = Nothing)
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> or <code class="paramref">inputType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code>  or its serializable members.
  nameWithType.vb: JsonSerializer.Serialize(Stream, Object, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(System.IO.Stream, Object, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Serialize(Stream, Object, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Threading.CancellationToken)
  commentId: M:System.Text.Json.JsonSerializer.SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Threading.CancellationToken)
  id: SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Threading.CancellationToken)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeAsync<TValue>(Stream, TValue, JsonTypeInfo<TValue>, CancellationToken)
  nameWithType: JsonSerializer.SerializeAsync<TValue>(Stream, TValue, JsonTypeInfo<TValue>, CancellationToken)
  fullName: System.Text.Json.JsonSerializer.SerializeAsync<TValue>(System.IO.Stream, TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value to UTF-8 encoded JSON text and write it to the <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task SerializeAsync<TValue>(Stream utf8Json, TValue value, JsonTypeInfo<TValue> jsonTypeInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: The UTF-8 <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> to write to.
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> that can be used to cancel the write operation.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
    content.vb: Public Shared Function SerializeAsync(Of TValue)(utf8Json As Stream, value As TValue, jsonTypeInfo As JsonTypeInfo(Of TValue), cancellationToken As CancellationToken = Nothing) As Task
  overload: System.Text.Json.JsonSerializer.SerializeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeAsync(Of TValue)(Stream, TValue, JsonTypeInfo(Of TValue), CancellationToken)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeAsync(Of TValue)(System.IO.Stream, TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue), System.Threading.CancellationToken)
  name.vb: SerializeAsync(Of TValue)(Stream, TValue, JsonTypeInfo(Of TValue), CancellationToken)
- uid: System.Text.Json.JsonSerializer.Serialize``1(System.IO.Stream,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Serialize``1(System.IO.Stream,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Serialize``1(System.IO.Stream,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize<TValue>(Stream, TValue, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Serialize<TValue>(Stream, TValue, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Serialize<TValue>(System.IO.Stream, TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value to UTF-8 encoded JSON text and write it to the <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void Serialize<TValue>(Stream utf8Json, TValue value, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: The UTF-8 <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> to write to.
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    content.vb: Public Shared Sub Serialize(Of TValue)(utf8Json As Stream, value As TValue, jsonTypeInfo As JsonTypeInfo(Of TValue))
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Serialize(Of TValue)(Stream, TValue, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(Of TValue)(System.IO.Stream, TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Serialize(Of TValue)(Stream, TValue, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext,System.Threading.CancellationToken)
  commentId: M:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext,System.Threading.CancellationToken)
  id: SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext,System.Threading.CancellationToken)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeAsync(Stream, object?, Type, JsonSerializerContext, CancellationToken)
  nameWithType: JsonSerializer.SerializeAsync(Stream, object?, Type, JsonSerializerContext, CancellationToken)
  fullName: System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream, object?, System.Type, System.Text.Json.Serialization.JsonSerializerContext, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value to UTF-8 encoded JSON text and write it to the <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task SerializeAsync(Stream utf8Json, object? value, Type inputType, JsonSerializerContext context, CancellationToken cancellationToken = default)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: The UTF-8 <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> to write to.
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> that can be used to cancel the write operation.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
    content.vb: Public Shared Function SerializeAsync(utf8Json As Stream, value As Object, inputType As Type, context As JsonSerializerContext, cancellationToken As CancellationToken = Nothing) As Task
  overload: System.Text.Json.JsonSerializer.SerializeAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code>, <code class="paramref">inputType</code>, or <code class="paramref">context</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code>  or its serializable members.
  nameWithType.vb: JsonSerializer.SerializeAsync(Stream, Object, Type, JsonSerializerContext, CancellationToken)
  fullName.vb: System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream, Object, System.Type, System.Text.Json.Serialization.JsonSerializerContext, System.Threading.CancellationToken)
  name.vb: SerializeAsync(Stream, Object, Type, JsonSerializerContext, CancellationToken)
- uid: System.Text.Json.JsonSerializer.Serialize(System.IO.Stream,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Serialize(System.IO.Stream,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Serialize(System.IO.Stream,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Stream, object?, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Serialize(Stream, object?, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Serialize(System.IO.Stream, object?, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value to UTF-8 encoded JSON text and write it to the <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void Serialize(Stream utf8Json, object? value, Type inputType, JsonSerializerContext context)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: The UTF-8 <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> to write to.
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    content.vb: Public Shared Sub Serialize(utf8Json As Stream, value As Object, inputType As Type, context As JsonSerializerContext)
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">utf8Json</code>, <code class="paramref">inputType</code>, or <code class="paramref">context</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code>  or its serializable members.
  nameWithType.vb: JsonSerializer.Serialize(Stream, Object, Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(System.IO.Stream, Object, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: Serialize(Stream, Object, Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.Serialize``1(``0,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Serialize``1(``0,System.Text.Json.JsonSerializerOptions)
  id: Serialize``1(``0,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize<TValue>(TValue, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Serialize<TValue>(TValue, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Serialize<TValue>(TValue, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the value of a type specified by a generic type parameter into a JSON string.
  example: []
  syntax:
    content: public static string Serialize<TValue>(TValue value, JsonSerializerOptions? options = null)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control serialization behavior.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.String
      description: A JSON string representation of the value.
    content.vb: Public Shared Function Serialize(Of TValue)(value As TValue, options As JsonSerializerOptions = Nothing) As String
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Serialize(Of TValue)(TValue, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(Of TValue)(TValue, System.Text.Json.JsonSerializerOptions)
  name.vb: Serialize(Of TValue)(TValue, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Serialize(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Serialize(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Serialize(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize(object?, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Serialize(object?, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Serialize(object?, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the value of a specified type into a JSON string.
  example: []
  syntax:
    content: public static string Serialize(object? value, Type inputType, JsonSerializerOptions? options = null)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the conversion behavior.
    return:
      type: System.String
      description: The JSON string representation of the value.
    content.vb: Public Shared Function Serialize(value As Object, inputType As Type, options As JsonSerializerOptions = Nothing) As String
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">inputType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="paramref">inputType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Serialize(Object, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(Object, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Serialize(Object, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Serialize``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Serialize``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Serialize``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize<TValue>(TValue, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Serialize<TValue>(TValue, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Serialize<TValue>(TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string Serialize<TValue>(TValue value, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: value
      type: '{TValue}'
      description: The value to convert.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function Serialize(Of TValue)(value As TValue, jsonTypeInfo As JsonTypeInfo(Of TValue)) As String
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">jsonTypeInfo</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.Serialize(Of TValue)(TValue, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(Of TValue)(TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Serialize(Of TValue)(TValue, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.Serialize(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Serialize(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Serialize(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize(object?, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Serialize(object?, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Serialize(object?, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Converts the provided value into a <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string Serialize(object? value, Type inputType, JsonSerializerContext context)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation of the value.
    content.vb: Public Shared Function Serialize(value As Object, inputType As Type, context As JsonSerializerContext) As String
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">inputType</code> or <code class="paramref">context</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonSerializer.Serialize(Object, Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(Object, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: Serialize(Object, Type, JsonSerializerContext)
- uid: System.Text.Json.JsonSerializer.Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.JsonSerializerOptions)
  id: Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize<TValue>(Utf8JsonWriter, TValue, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Serialize<TValue>(Utf8JsonWriter, TValue, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Serialize<TValue>(System.Text.Json.Utf8JsonWriter, TValue, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Writes the JSON representation of a type specified by a generic type parameter to the provided writer.
  example: []
  syntax:
    content: public static void Serialize<TValue>(Utf8JsonWriter writer, TValue value, JsonSerializerOptions? options = null)
    parameters:
    - id: writer
      type: System.Text.Json.Utf8JsonWriter
      description: A JSON writer to write to.
    - id: value
      type: '{TValue}'
      description: The value to convert and write.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control serialization behavior.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    content.vb: Public Shared Sub Serialize(Of TValue)(writer As Utf8JsonWriter, value As TValue, options As JsonSerializerOptions = Nothing)
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">writer</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Serialize(Of TValue)(Utf8JsonWriter, TValue, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(Of TValue)(System.Text.Json.Utf8JsonWriter, TValue, System.Text.Json.JsonSerializerOptions)
  name.vb: Serialize(Of TValue)(Utf8JsonWriter, TValue, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Utf8JsonWriter, object?, Type, JsonSerializerOptions?)
  nameWithType: JsonSerializer.Serialize(Utf8JsonWriter, object?, Type, JsonSerializerOptions?)
  fullName: System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter, object?, System.Type, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Writes the JSON representation of the specified type to the provided writer.
  example: []
  syntax:
    content: public static void Serialize(Utf8JsonWriter writer, object? value, Type inputType, JsonSerializerOptions? options = null)
    parameters:
    - id: writer
      type: System.Text.Json.Utf8JsonWriter
      description: The JSON writer to write to.
    - id: value
      type: System.Object
      description: The value to convert and write.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control serialization behavior.
    content.vb: Public Shared Sub Serialize(writer As Utf8JsonWriter, value As Object, inputType As Type, options As JsonSerializerOptions = Nothing)
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">writer</code> or <code class="paramref">inputType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter"></see> for <code class="paramref">inputType</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Serialize(Utf8JsonWriter, Object, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter, Object, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Serialize(Utf8JsonWriter, Object, Type, JsonSerializerOptions)
- uid: System.Text.Json.JsonSerializer.Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  id: Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize<TValue>(Utf8JsonWriter, TValue, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Serialize<TValue>(Utf8JsonWriter, TValue, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Serialize<TValue>(System.Text.Json.Utf8JsonWriter, TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Writes one JSON value (including objects or arrays) to the provided writer.
  example: []
  syntax:
    content: public static void Serialize<TValue>(Utf8JsonWriter writer, TValue value, JsonTypeInfo<TValue> jsonTypeInfo)
    parameters:
    - id: writer
      type: System.Text.Json.Utf8JsonWriter
      description: The writer to write.
    - id: value
      type: '{TValue}'
      description: The value to convert and write.
    - id: jsonTypeInfo
      type: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
      description: Metadata about the type to convert.
    typeParameters:
    - id: TValue
      description: The type of the value to serialize.
    content.vb: Public Shared Sub Serialize(Of TValue)(writer As Utf8JsonWriter, value As TValue, jsonTypeInfo As JsonTypeInfo(Of TValue))
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">writer</code> or <code class="paramref">jsonTypeInfo</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="typeparamref">TValue</code> or its serializable members.
  nameWithType.vb: JsonSerializer.Serialize(Of TValue)(Utf8JsonWriter, TValue, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(Of TValue)(System.Text.Json.Utf8JsonWriter, TValue, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Serialize(Of TValue)(Utf8JsonWriter, TValue, JsonTypeInfo(Of TValue))
- uid: System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  id: Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Utf8JsonWriter, object?, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Serialize(Utf8JsonWriter, object?, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter, object?, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json
  summary: Writes one JSON value (including objects or arrays) to the provided writer.
  example: []
  syntax:
    content: public static void Serialize(Utf8JsonWriter writer, object? value, Type inputType, JsonSerializerContext context)
    parameters:
    - id: writer
      type: System.Text.Json.Utf8JsonWriter
      description: A JSON writer to write to.
    - id: value
      type: System.Object
      description: The value to convert and write.
    - id: inputType
      type: System.Type
      description: The type of the <code class="paramref">value</code> to convert.
    - id: context
      type: System.Text.Json.Serialization.JsonSerializerContext
      description: A metadata provider for serializable types.
    content.vb: Public Shared Sub Serialize(writer As Utf8JsonWriter, value As Object, inputType As Type, context As JsonSerializerContext)
  overload: System.Text.Json.JsonSerializer.Serialize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">inputType</code> is not compatible with <code class="paramref">value</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">writer</code> or <code class="paramref">inputType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: There is no compatible <xref href="System.Text.Json.Serialization.JsonConverter" data-throw-if-not-resolved="false"></xref> for <code class="paramref">inputType</code> or its serializable members.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)" data-throw-if-not-resolved="false"></xref> method of the provided <code class="paramref">context</code> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the type to convert.
  nameWithType.vb: JsonSerializer.Serialize(Utf8JsonWriter, Object, Type, JsonSerializerContext)
  fullName.vb: System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter, Object, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  name.vb: Serialize(Utf8JsonWriter, Object, Type, JsonSerializerContext)
references:
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: System.html
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.Json.JsonDocument
  commentId: T:System.Text.Json.JsonDocument
  parent: System.Text.Json
  isExternal: true
  href: System.Text.Json.JsonDocument.html
  name: JsonDocument
  nameWithType: JsonDocument
  fullName: System.Text.Json.JsonDocument
- uid: System.Text.Json.Serialization.JsonConverter
  commentId: T:System.Text.Json.Serialization.JsonConverter
  parent: System.Text.Json.Serialization
  isExternal: true
  href: System.Text.Json.Serialization.JsonConverter.html
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: System.Text.Json.Serialization.JsonConverter
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Text.Json.JsonException
  commentId: T:System.Text.Json.JsonException
  isExternal: true
  href: System.Text.Json.JsonException.html
  name: JsonException
  nameWithType: JsonException
  fullName: System.Text.Json.JsonException
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Text.Json.JsonSerializer.Deserialize*
  commentId: Overload:System.Text.Json.JsonSerializer.Deserialize
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_JsonDocument_System_Text_Json_JsonSerializerOptions_
  name: Deserialize
  nameWithType: JsonSerializer.Deserialize
  fullName: System.Text.Json.JsonSerializer.Deserialize
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  href: System.Text.Json.JsonSerializerOptions.html
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Text.Json.Serialization
  commentId: N:System.Text.Json.Serialization
  isExternal: true
  href: System.html
  name: System.Text.Json.Serialization
  nameWithType: System.Text.Json.Serialization
  fullName: System.Text.Json.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
  - name: .
  - uid: System.Text.Json.Serialization
    name: Serialization
    isExternal: true
    href: System.Text.Json.Serialization.html
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
  - name: .
  - uid: System.Text.Json.Serialization
    name: Serialization
    isExternal: true
    href: System.Text.Json.Serialization.html
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}}
  commentId: T:System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0}
  parent: System.Text.Json.Serialization.Metadata
  definition: System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
  name: JsonTypeInfo<TValue>
  nameWithType: JsonTypeInfo<TValue>
  fullName: System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>
  nameWithType.vb: JsonTypeInfo(Of TValue)
  fullName.vb: System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue)
  name.vb: JsonTypeInfo(Of TValue)
  spec.csharp:
  - uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
    name: JsonTypeInfo
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
    name: JsonTypeInfo
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
  commentId: T:System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
  isExternal: true
  name: JsonTypeInfo<T>
  nameWithType: JsonTypeInfo<T>
  fullName: System.Text.Json.Serialization.Metadata.JsonTypeInfo<T>
  nameWithType.vb: JsonTypeInfo(Of T)
  fullName.vb: System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of T)
  name.vb: JsonTypeInfo(Of T)
  spec.csharp:
  - uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
    name: JsonTypeInfo
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
    name: JsonTypeInfo
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Text.Json.Serialization.Metadata
  commentId: N:System.Text.Json.Serialization.Metadata
  isExternal: true
  href: System.html
  name: System.Text.Json.Serialization.Metadata
  nameWithType: System.Text.Json.Serialization.Metadata
  fullName: System.Text.Json.Serialization.Metadata
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
  - name: .
  - uid: System.Text.Json.Serialization
    name: Serialization
    isExternal: true
    href: System.Text.Json.Serialization.html
  - name: .
  - uid: System.Text.Json.Serialization.Metadata
    name: Metadata
    isExternal: true
    href: System.Text.Json.Serialization.Metadata.html
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
  - name: .
  - uid: System.Text.Json.Serialization
    name: Serialization
    isExternal: true
    href: System.Text.Json.Serialization.html
  - name: .
  - uid: System.Text.Json.Serialization.Metadata
    name: Metadata
    isExternal: true
    href: System.Text.Json.Serialization.Metadata.html
- uid: System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)
  commentId: M:System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetTypeInfo(Type)
  nameWithType: JsonSerializerContext.GetTypeInfo(Type)
  fullName: System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)
    name: GetTypeInfo
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonSerializerContext.GetTypeInfo(System.Type)
    name: GetTypeInfo
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Text.Json.Serialization.JsonSerializerContext
  commentId: T:System.Text.Json.Serialization.JsonSerializerContext
  parent: System.Text.Json.Serialization
  isExternal: true
  name: JsonSerializerContext
  nameWithType: JsonSerializerContext
  fullName: System.Text.Json.Serialization.JsonSerializerContext
- uid: System.Text.Json.JsonElement
  commentId: T:System.Text.Json.JsonElement
  parent: System.Text.Json
  isExternal: true
  href: System.Text.Json.JsonElement.html
  name: JsonElement
  nameWithType: JsonElement
  fullName: System.Text.Json.JsonElement
- uid: System.Text.Json.Nodes.JsonNode
  commentId: T:System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html
  name: JsonNode
  nameWithType: JsonNode
  fullName: System.Text.Json.Nodes.JsonNode
- uid: System.Text.Json.Nodes
  commentId: N:System.Text.Json.Nodes
  isExternal: true
  href: System.html
  name: System.Text.Json.Nodes
  nameWithType: System.Text.Json.Nodes
  fullName: System.Text.Json.Nodes
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
  - name: .
  - uid: System.Text.Json.Nodes
    name: Nodes
    isExternal: true
    href: System.Text.Json.Nodes.html
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
  - name: .
  - uid: System.Text.Json.Nodes
    name: Nodes
    isExternal: true
    href: System.Text.Json.Nodes.html
- uid: System.Text.Json.JsonSerializer.SerializeToDocument*
  commentId: Overload:System.Text.Json.JsonSerializer.SerializeToDocument
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_SerializeToDocument__1___0_System_Text_Json_JsonSerializerOptions_
  name: SerializeToDocument
  nameWithType: JsonSerializer.SerializeToDocument
  fullName: System.Text.Json.JsonSerializer.SerializeToDocument
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Text.Json.JsonSerializer.SerializeToElement*
  commentId: Overload:System.Text.Json.JsonSerializer.SerializeToElement
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_SerializeToElement__1___0_System_Text_Json_JsonSerializerOptions_
  name: SerializeToElement
  nameWithType: JsonSerializer.SerializeToElement
  fullName: System.Text.Json.JsonSerializer.SerializeToElement
- uid: System.Text.Json.JsonSerializer.SerializeToNode*
  commentId: Overload:System.Text.Json.JsonSerializer.SerializeToNode
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_SerializeToNode__1___0_System_Text_Json_JsonSerializerOptions_
  name: SerializeToNode
  nameWithType: JsonSerializer.SerializeToNode
  fullName: System.Text.Json.JsonSerializer.SerializeToNode
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo
  commentId: T:System.Text.Json.Serialization.Metadata.JsonTypeInfo
  parent: System.Text.Json.Serialization.Metadata
  isExternal: true
  href: System.Text.Json.Serialization.Metadata.JsonTypeInfo.html
  name: JsonTypeInfo
  nameWithType: JsonTypeInfo
  fullName: System.Text.Json.Serialization.Metadata.JsonTypeInfo
- uid: System.Text.Json.JsonSerializer.DeserializeAsync*
  commentId: Overload:System.Text.Json.JsonSerializer.DeserializeAsync
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_DeserializeAsync__1_System_IO_Stream_System_Text_Json_JsonSerializerOptions_System_Threading_CancellationToken_
  name: DeserializeAsync
  nameWithType: JsonSerializer.DeserializeAsync
  fullName: System.Text.Json.JsonSerializer.DeserializeAsync
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask{{TValue}}
  commentId: T:System.Threading.Tasks.ValueTask{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TValue>
  nameWithType: ValueTask<TValue>
  fullName: System.Threading.Tasks.ValueTask<TValue>
  nameWithType.vb: ValueTask(Of TValue)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TValue)
  name.vb: ValueTask(Of TValue)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading.Tasks.ValueTask{System.Object}
  commentId: T:System.Threading.Tasks.ValueTask{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<object>
  nameWithType: ValueTask<object>
  fullName: System.Threading.Tasks.ValueTask<object>
  nameWithType.vb: ValueTask(Of Object)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Object)
  name.vb: ValueTask(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Text.Json.JsonSerializer.DeserializeAsyncEnumerable*
  commentId: Overload:System.Text.Json.JsonSerializer.DeserializeAsyncEnumerable
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_DeserializeAsyncEnumerable__1_System_IO_Stream_System_Text_Json_JsonSerializerOptions_System_Threading_CancellationToken_
  name: DeserializeAsyncEnumerable
  nameWithType: JsonSerializer.DeserializeAsyncEnumerable
  fullName: System.Text.Json.JsonSerializer.DeserializeAsyncEnumerable
- uid: System.Collections.Generic.IAsyncEnumerable{{TValue}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<TValue>
  nameWithType: IAsyncEnumerable<TValue>
  fullName: System.Collections.Generic.IAsyncEnumerable<TValue>
  nameWithType.vb: IAsyncEnumerable(Of TValue)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of TValue)
  name.vb: IAsyncEnumerable(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ReadOnlySpan{System.Char}
  commentId: T:System.ReadOnlySpan{System.Char}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<char>
  nameWithType: ReadOnlySpan<char>
  fullName: System.ReadOnlySpan<char>
  nameWithType.vb: ReadOnlySpan(Of Char)
  fullName.vb: System.ReadOnlySpan(Of Char)
  name.vb: ReadOnlySpan(Of Char)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.Text.Json.Utf8JsonReader
  commentId: T:System.Text.Json.Utf8JsonReader
  parent: System.Text.Json
  isExternal: true
  href: System.Text.Json.Utf8JsonReader.html
  name: Utf8JsonReader
  nameWithType: Utf8JsonReader
  fullName: System.Text.Json.Utf8JsonReader
- uid: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes*
  commentId: Overload:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_SerializeToUtf8Bytes__1___0_System_Text_Json_JsonSerializerOptions_
  name: SerializeToUtf8Bytes
  nameWithType: JsonSerializer.SerializeToUtf8Bytes
  fullName: System.Text.Json.JsonSerializer.SerializeToUtf8Bytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.Text.Json.JsonSerializer.SerializeAsync*
  commentId: Overload:System.Text.Json.JsonSerializer.SerializeAsync
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_SerializeAsync__1_System_IO_Stream___0_System_Text_Json_JsonSerializerOptions_System_Threading_CancellationToken_
  name: SerializeAsync
  nameWithType: JsonSerializer.SerializeAsync
  fullName: System.Text.Json.JsonSerializer.SerializeAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Text.Json.JsonSerializer.Serialize*
  commentId: Overload:System.Text.Json.JsonSerializer.Serialize
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Serialize__1_System_IO_Stream___0_System_Text_Json_JsonSerializerOptions_
  name: Serialize
  nameWithType: JsonSerializer.Serialize
  fullName: System.Text.Json.JsonSerializer.Serialize
- uid: System.Text.Json.Utf8JsonWriter
  commentId: T:System.Text.Json.Utf8JsonWriter
  parent: System.Text.Json
  isExternal: true
  href: System.Text.Json.Utf8JsonWriter.html
  name: Utf8JsonWriter
  nameWithType: Utf8JsonWriter
  fullName: System.Text.Json.Utf8JsonWriter
