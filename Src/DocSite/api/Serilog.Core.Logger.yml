### YamlMime:ManagedReference
items:
- uid: Serilog.Core.Logger
  commentId: T:Serilog.Core.Logger
  id: Logger
  parent: Serilog.Core
  children:
  - Serilog.Core.Logger.BindMessageTemplate(System.String,System.Object[],Serilog.Events.MessageTemplate@,System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}@)
  - Serilog.Core.Logger.BindProperty(System.String,System.Object,System.Boolean,Serilog.Events.LogEventProperty@)
  - Serilog.Core.Logger.Debug(System.Exception,System.String)
  - Serilog.Core.Logger.Debug(System.Exception,System.String,System.Object[])
  - Serilog.Core.Logger.Debug(System.String)
  - Serilog.Core.Logger.Debug(System.String,System.Object[])
  - Serilog.Core.Logger.Debug``1(System.Exception,System.String,``0)
  - Serilog.Core.Logger.Debug``1(System.String,``0)
  - Serilog.Core.Logger.Debug``2(System.Exception,System.String,``0,``1)
  - Serilog.Core.Logger.Debug``2(System.String,``0,``1)
  - Serilog.Core.Logger.Debug``3(System.Exception,System.String,``0,``1,``2)
  - Serilog.Core.Logger.Debug``3(System.String,``0,``1,``2)
  - Serilog.Core.Logger.Dispose
  - Serilog.Core.Logger.Error(System.Exception,System.String)
  - Serilog.Core.Logger.Error(System.Exception,System.String,System.Object[])
  - Serilog.Core.Logger.Error(System.String)
  - Serilog.Core.Logger.Error(System.String,System.Object[])
  - Serilog.Core.Logger.Error``1(System.Exception,System.String,``0)
  - Serilog.Core.Logger.Error``1(System.String,``0)
  - Serilog.Core.Logger.Error``2(System.Exception,System.String,``0,``1)
  - Serilog.Core.Logger.Error``2(System.String,``0,``1)
  - Serilog.Core.Logger.Error``3(System.Exception,System.String,``0,``1,``2)
  - Serilog.Core.Logger.Error``3(System.String,``0,``1,``2)
  - Serilog.Core.Logger.Fatal(System.Exception,System.String)
  - Serilog.Core.Logger.Fatal(System.Exception,System.String,System.Object[])
  - Serilog.Core.Logger.Fatal(System.String)
  - Serilog.Core.Logger.Fatal(System.String,System.Object[])
  - Serilog.Core.Logger.Fatal``1(System.Exception,System.String,``0)
  - Serilog.Core.Logger.Fatal``1(System.String,``0)
  - Serilog.Core.Logger.Fatal``2(System.Exception,System.String,``0,``1)
  - Serilog.Core.Logger.Fatal``2(System.String,``0,``1)
  - Serilog.Core.Logger.Fatal``3(System.Exception,System.String,``0,``1,``2)
  - Serilog.Core.Logger.Fatal``3(System.String,``0,``1,``2)
  - Serilog.Core.Logger.ForContext(Serilog.Core.ILogEventEnricher)
  - Serilog.Core.Logger.ForContext(System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher})
  - Serilog.Core.Logger.ForContext(System.String,System.Object,System.Boolean)
  - Serilog.Core.Logger.ForContext(System.Type)
  - Serilog.Core.Logger.ForContext``1
  - Serilog.Core.Logger.Information(System.Exception,System.String)
  - Serilog.Core.Logger.Information(System.Exception,System.String,System.Object[])
  - Serilog.Core.Logger.Information(System.String)
  - Serilog.Core.Logger.Information(System.String,System.Object[])
  - Serilog.Core.Logger.Information``1(System.Exception,System.String,``0)
  - Serilog.Core.Logger.Information``1(System.String,``0)
  - Serilog.Core.Logger.Information``2(System.Exception,System.String,``0,``1)
  - Serilog.Core.Logger.Information``2(System.String,``0,``1)
  - Serilog.Core.Logger.Information``3(System.Exception,System.String,``0,``1,``2)
  - Serilog.Core.Logger.Information``3(System.String,``0,``1,``2)
  - Serilog.Core.Logger.IsEnabled(Serilog.Events.LogEventLevel)
  - Serilog.Core.Logger.None
  - Serilog.Core.Logger.Verbose(System.Exception,System.String)
  - Serilog.Core.Logger.Verbose(System.Exception,System.String,System.Object[])
  - Serilog.Core.Logger.Verbose(System.String)
  - Serilog.Core.Logger.Verbose(System.String,System.Object[])
  - Serilog.Core.Logger.Verbose``1(System.Exception,System.String,``0)
  - Serilog.Core.Logger.Verbose``1(System.String,``0)
  - Serilog.Core.Logger.Verbose``2(System.Exception,System.String,``0,``1)
  - Serilog.Core.Logger.Verbose``2(System.String,``0,``1)
  - Serilog.Core.Logger.Verbose``3(System.Exception,System.String,``0,``1,``2)
  - Serilog.Core.Logger.Verbose``3(System.String,``0,``1,``2)
  - Serilog.Core.Logger.Warning(System.Exception,System.String)
  - Serilog.Core.Logger.Warning(System.Exception,System.String,System.Object[])
  - Serilog.Core.Logger.Warning(System.String)
  - Serilog.Core.Logger.Warning(System.String,System.Object[])
  - Serilog.Core.Logger.Warning``1(System.Exception,System.String,``0)
  - Serilog.Core.Logger.Warning``1(System.String,``0)
  - Serilog.Core.Logger.Warning``2(System.Exception,System.String,``0,``1)
  - Serilog.Core.Logger.Warning``2(System.String,``0,``1)
  - Serilog.Core.Logger.Warning``3(System.Exception,System.String,``0,``1,``2)
  - Serilog.Core.Logger.Warning``3(System.String,``0,``1,``2)
  - Serilog.Core.Logger.Write(Serilog.Events.LogEvent)
  - Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String)
  - Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String,System.Object[])
  - Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.String)
  - Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.String,System.Object[])
  - Serilog.Core.Logger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
  - Serilog.Core.Logger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
  - Serilog.Core.Logger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
  - Serilog.Core.Logger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
  - Serilog.Core.Logger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
  - Serilog.Core.Logger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Logger
  fullName: Serilog.Core.Logger
  type: Class
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: >-
    The core Serilog logging pipeline. A <xref href="Serilog.Core.Logger" data-throw-if-not-resolved="false"></xref> must

    be disposed to flush any events buffered within it. Most application

    code should depend on <xref href="Serilog.ILogger" data-throw-if-not-resolved="false"></xref>, not this class.
  example: []
  syntax:
    content: 'public sealed class Logger : ILogger, ILogEventSink, IDisposable'
    content.vb: Public NotInheritable Class Logger Implements ILogger, ILogEventSink, IDisposable
  inheritance:
  - System.Object
  implements:
  - Serilog.ILogger
  - Serilog.Core.ILogEventSink
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - Serilog.ILogger.Serilog.LoggerExtensions.ForContext``1(Serilog.Events.LogEventLevel,System.String,{TValue},System.Boolean)
- uid: Serilog.Core.Logger.ForContext(Serilog.Core.ILogEventEnricher)
  commentId: M:Serilog.Core.Logger.ForContext(Serilog.Core.ILogEventEnricher)
  id: ForContext(Serilog.Core.ILogEventEnricher)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: ForContext(ILogEventEnricher)
  nameWithType: Logger.ForContext(ILogEventEnricher)
  fullName: Serilog.Core.Logger.ForContext(Serilog.Core.ILogEventEnricher)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Create a logger that enriches log events via the provided enrichers.
  example: []
  syntax:
    content: public ILogger ForContext(ILogEventEnricher enricher)
    parameters:
    - id: enricher
      type: Serilog.Core.ILogEventEnricher
      description: Enricher that applies in the context.
    return:
      type: Serilog.ILogger
      description: A logger that will enrich log events as specified.
    content.vb: Public Function ForContext(enricher As ILogEventEnricher) As ILogger
  overload: Serilog.Core.Logger.ForContext*
  implements:
  - Serilog.ILogger.ForContext(Serilog.Core.ILogEventEnricher)
- uid: Serilog.Core.Logger.ForContext(System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher})
  commentId: M:Serilog.Core.Logger.ForContext(System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher})
  id: ForContext(System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher})
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: ForContext(IEnumerable<ILogEventEnricher>)
  nameWithType: Logger.ForContext(IEnumerable<ILogEventEnricher>)
  fullName: Serilog.Core.Logger.ForContext(System.Collections.Generic.IEnumerable<Serilog.Core.ILogEventEnricher>)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Create a logger that enriches log events via the provided enrichers.
  example: []
  syntax:
    content: public ILogger ForContext(IEnumerable<ILogEventEnricher> enrichers)
    parameters:
    - id: enrichers
      type: System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher}
      description: Enrichers that apply in the context.
    return:
      type: Serilog.ILogger
      description: A logger that will enrich log events as specified.
    content.vb: Public Function ForContext(enrichers As IEnumerable(Of ILogEventEnricher)) As ILogger
  overload: Serilog.Core.Logger.ForContext*
  implements:
  - Serilog.ILogger.ForContext(System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher})
  nameWithType.vb: Logger.ForContext(IEnumerable(Of ILogEventEnricher))
  fullName.vb: Serilog.Core.Logger.ForContext(System.Collections.Generic.IEnumerable(Of Serilog.Core.ILogEventEnricher))
  name.vb: ForContext(IEnumerable(Of ILogEventEnricher))
- uid: Serilog.Core.Logger.ForContext(System.String,System.Object,System.Boolean)
  commentId: M:Serilog.Core.Logger.ForContext(System.String,System.Object,System.Boolean)
  id: ForContext(System.String,System.Object,System.Boolean)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: ForContext(string, object?, bool)
  nameWithType: Logger.ForContext(string, object?, bool)
  fullName: Serilog.Core.Logger.ForContext(string, object?, bool)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Create a logger that enriches log events with the specified property.
  example: []
  syntax:
    content: public ILogger ForContext(string propertyName, object? value, bool destructureObjects = false)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property. Must be non-empty.
    - id: value
      type: System.Object
      description: The property value.
    - id: destructureObjects
      type: System.Boolean
      description: >-
        If true, the value will be serialized as a structured
                    object if possible; if false, the object will be recorded as a scalar or simple array.
    return:
      type: Serilog.ILogger
      description: A logger that will enrich log events as specified.
    content.vb: Public Function ForContext(propertyName As String, value As Object, destructureObjects As Boolean = False) As ILogger
  overload: Serilog.Core.Logger.ForContext*
  implements:
  - Serilog.ILogger.ForContext(System.String,System.Object,System.Boolean)
  nameWithType.vb: Logger.ForContext(String, Object, Boolean)
  fullName.vb: Serilog.Core.Logger.ForContext(String, Object, Boolean)
  name.vb: ForContext(String, Object, Boolean)
- uid: Serilog.Core.Logger.ForContext(System.Type)
  commentId: M:Serilog.Core.Logger.ForContext(System.Type)
  id: ForContext(System.Type)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: ForContext(Type)
  nameWithType: Logger.ForContext(Type)
  fullName: Serilog.Core.Logger.ForContext(System.Type)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: >-
    Create a logger that marks log events as being from the specified

    source type.
  example: []
  syntax:
    content: public ILogger ForContext(Type source)
    parameters:
    - id: source
      type: System.Type
      description: Type generating log messages in the context.
    return:
      type: Serilog.ILogger
      description: A logger that will enrich log events as specified.
    content.vb: Public Function ForContext(source As Type) As ILogger
  overload: Serilog.Core.Logger.ForContext*
  implements:
  - Serilog.ILogger.ForContext(System.Type)
- uid: Serilog.Core.Logger.ForContext``1
  commentId: M:Serilog.Core.Logger.ForContext``1
  id: ForContext``1
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: ForContext<TSource>()
  nameWithType: Logger.ForContext<TSource>()
  fullName: Serilog.Core.Logger.ForContext<TSource>()
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: >-
    Create a logger that marks log events as being from the specified

    source type.
  example: []
  syntax:
    content: public ILogger ForContext<TSource>()
    typeParameters:
    - id: TSource
      description: Type generating log messages in the context.
    return:
      type: Serilog.ILogger
      description: A logger that will enrich log events as specified.
    content.vb: Public Function ForContext(Of TSource)() As ILogger
  overload: Serilog.Core.Logger.ForContext*
  implements:
  - Serilog.ILogger.ForContext``1
  nameWithType.vb: Logger.ForContext(Of TSource)()
  fullName.vb: Serilog.Core.Logger.ForContext(Of TSource)()
  name.vb: ForContext(Of TSource)()
- uid: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.String)
  commentId: M:Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.String)
  id: Write(Serilog.Events.LogEventLevel,System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write(LogEventLevel, string)
  nameWithType: Logger.Write(LogEventLevel, string)
  fullName: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel, string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the specified level.
  example: []
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Write(LogEventLevel level, string messageTemplate)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: The level of the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Write(level As LogEventLevel, messageTemplate As String)
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Write(LogEventLevel, String)
  fullName.vb: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel, String)
  name.vb: Write(LogEventLevel, String)
- uid: Serilog.Core.Logger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
  commentId: M:Serilog.Core.Logger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
  id: Write``1(Serilog.Events.LogEventLevel,System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write<T>(LogEventLevel, string, T)
  nameWithType: Logger.Write<T>(LogEventLevel, string, T)
  fullName: Serilog.Core.Logger.Write<T>(Serilog.Events.LogEventLevel, string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the specified level.
  example: []
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Write<T>(LogEventLevel level, string messageTemplate, T propertyValue)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: The level of the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Write(Of T)(level As LogEventLevel, messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Write(Of T)(LogEventLevel, String, T)
  fullName.vb: Serilog.Core.Logger.Write(Of T)(Serilog.Events.LogEventLevel, String, T)
  name.vb: Write(Of T)(LogEventLevel, String, T)
- uid: Serilog.Core.Logger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
  id: Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write<T0, T1>(LogEventLevel, string, T0, T1)
  nameWithType: Logger.Write<T0, T1>(LogEventLevel, string, T0, T1)
  fullName: Serilog.Core.Logger.Write<T0, T1>(Serilog.Events.LogEventLevel, string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the specified level.
  example: []
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Write<T0, T1>(LogEventLevel level, string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: The level of the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Write(Of T0, T1)(level As LogEventLevel, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Write(Of T0, T1)(LogEventLevel, String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Write(Of T0, T1)(Serilog.Events.LogEventLevel, String, T0, T1)
  name.vb: Write(Of T0, T1)(LogEventLevel, String, T0, T1)
- uid: Serilog.Core.Logger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
  id: Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write<T0, T1, T2>(LogEventLevel, string, T0, T1, T2)
  nameWithType: Logger.Write<T0, T1, T2>(LogEventLevel, string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Write<T0, T1, T2>(Serilog.Events.LogEventLevel, string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the specified level.
  example: []
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Write<T0, T1, T2>(LogEventLevel level, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: The level of the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Write(Of T0, T1, T2)(level As LogEventLevel, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Write(Of T0, T1, T2)(LogEventLevel, String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Write(Of T0, T1, T2)(Serilog.Events.LogEventLevel, String, T0, T1, T2)
  name.vb: Write(Of T0, T1, T2)(LogEventLevel, String, T0, T1, T2)
- uid: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.String,System.Object[])
  id: Write(Serilog.Events.LogEventLevel,System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write(LogEventLevel, string, params object?[]?)
  nameWithType: Logger.Write(LogEventLevel, string, params object?[]?)
  fullName: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel, string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the specified level.
  example: []
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Write(LogEventLevel level, string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: The level of the event.
    - id: messageTemplate
      type: System.String
      description: ''
    - id: propertyValues
      type: System.Object[]
      description: ''
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Write(level As LogEventLevel, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Write(LogEventLevel, String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel, String, ParamArray Object())
  name.vb: Write(LogEventLevel, String, ParamArray Object())
- uid: Serilog.Core.Logger.IsEnabled(Serilog.Events.LogEventLevel)
  commentId: M:Serilog.Core.Logger.IsEnabled(Serilog.Events.LogEventLevel)
  id: IsEnabled(Serilog.Events.LogEventLevel)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: IsEnabled(LogEventLevel)
  nameWithType: Logger.IsEnabled(LogEventLevel)
  fullName: Serilog.Core.Logger.IsEnabled(Serilog.Events.LogEventLevel)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: >-
    Determine if events at the specified level, and higher, will be passed through

    to the log sinks.
  example: []
  syntax:
    content: public bool IsEnabled(LogEventLevel level)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: Level to check.
    return:
      type: System.Boolean
      description: True if the level is enabled; otherwise, false.
    content.vb: Public Function IsEnabled(level As LogEventLevel) As Boolean
  overload: Serilog.Core.Logger.IsEnabled*
  implements:
  - Serilog.ILogger.IsEnabled(Serilog.Events.LogEventLevel)
- uid: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String)
  commentId: M:Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String)
  id: Write(Serilog.Events.LogEventLevel,System.Exception,System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write(LogEventLevel, Exception?, string)
  nameWithType: Logger.Write(LogEventLevel, Exception?, string)
  fullName: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel, System.Exception?, string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the specified level and associated exception.
  example: []
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Write(LogEventLevel level, Exception? exception, string messageTemplate)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: The level of the event.
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Write(level As LogEventLevel, exception As Exception, messageTemplate As String)
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Write(LogEventLevel, Exception, String)
  fullName.vb: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel, System.Exception, String)
  name.vb: Write(LogEventLevel, Exception, String)
- uid: Serilog.Core.Logger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
  commentId: M:Serilog.Core.Logger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
  id: Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write<T>(LogEventLevel, Exception?, string, T)
  nameWithType: Logger.Write<T>(LogEventLevel, Exception?, string, T)
  fullName: Serilog.Core.Logger.Write<T>(Serilog.Events.LogEventLevel, System.Exception?, string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the specified level and associated exception.
  example: []
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Write<T>(LogEventLevel level, Exception? exception, string messageTemplate, T propertyValue)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: The level of the event.
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Write(Of T)(level As LogEventLevel, exception As Exception, messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Write(Of T)(LogEventLevel, Exception, String, T)
  fullName.vb: Serilog.Core.Logger.Write(Of T)(Serilog.Events.LogEventLevel, System.Exception, String, T)
  name.vb: Write(Of T)(LogEventLevel, Exception, String, T)
- uid: Serilog.Core.Logger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
  id: Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write<T0, T1>(LogEventLevel, Exception?, string, T0, T1)
  nameWithType: Logger.Write<T0, T1>(LogEventLevel, Exception?, string, T0, T1)
  fullName: Serilog.Core.Logger.Write<T0, T1>(Serilog.Events.LogEventLevel, System.Exception?, string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the specified level and associated exception.
  example: []
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Write<T0, T1>(LogEventLevel level, Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: The level of the event.
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Write(Of T0, T1)(level As LogEventLevel, exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Write(Of T0, T1)(LogEventLevel, Exception, String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Write(Of T0, T1)(Serilog.Events.LogEventLevel, System.Exception, String, T0, T1)
  name.vb: Write(Of T0, T1)(LogEventLevel, Exception, String, T0, T1)
- uid: Serilog.Core.Logger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
  id: Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write<T0, T1, T2>(LogEventLevel, Exception?, string, T0, T1, T2)
  nameWithType: Logger.Write<T0, T1, T2>(LogEventLevel, Exception?, string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Write<T0, T1, T2>(Serilog.Events.LogEventLevel, System.Exception?, string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the specified level and associated exception.
  example: []
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Write<T0, T1, T2>(LogEventLevel level, Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: The level of the event.
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Write(Of T0, T1, T2)(level As LogEventLevel, exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Write(Of T0, T1, T2)(LogEventLevel, Exception, String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Write(Of T0, T1, T2)(Serilog.Events.LogEventLevel, System.Exception, String, T0, T1, T2)
  name.vb: Write(Of T0, T1, T2)(LogEventLevel, Exception, String, T0, T1, T2)
- uid: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String,System.Object[])
  id: Write(Serilog.Events.LogEventLevel,System.Exception,System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write(LogEventLevel, Exception?, string, params object?[]?)
  nameWithType: Logger.Write(LogEventLevel, Exception?, string, params object?[]?)
  fullName: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel, System.Exception?, string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the specified level and associated exception.
  example: []
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Write(LogEventLevel level, Exception? exception, string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: level
      type: Serilog.Events.LogEventLevel
      description: The level of the event.
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Write(level As LogEventLevel, exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Write(LogEventLevel, Exception, String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Write(Serilog.Events.LogEventLevel, System.Exception, String, ParamArray Object())
  name.vb: Write(LogEventLevel, Exception, String, ParamArray Object())
- uid: Serilog.Core.Logger.Write(Serilog.Events.LogEvent)
  commentId: M:Serilog.Core.Logger.Write(Serilog.Events.LogEvent)
  id: Write(Serilog.Events.LogEvent)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Write(LogEvent)
  nameWithType: Logger.Write(LogEvent)
  fullName: Serilog.Core.Logger.Write(Serilog.Events.LogEvent)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write an event to the log.
  example: []
  syntax:
    content: public void Write(LogEvent logEvent)
    parameters:
    - id: logEvent
      type: Serilog.Events.LogEvent
      description: The event to write.
    content.vb: Public Sub Write(logEvent As LogEvent)
  overload: Serilog.Core.Logger.Write*
  implements:
  - Serilog.ILogger.Write(Serilog.Events.LogEvent)
- uid: Serilog.Core.Logger.Verbose(System.String)
  commentId: M:Serilog.Core.Logger.Verbose(System.String)
  id: Verbose(System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Verbose(string)
  nameWithType: Logger.Verbose(string)
  fullName: Serilog.Core.Logger.Verbose(string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Verbose" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Verbose("Staring into space, wondering if we're alone.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Verbose(string messageTemplate)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Verbose(messageTemplate As String)
  overload: Serilog.Core.Logger.Verbose*
  implements:
  - Serilog.ILogger.Verbose(System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Verbose(String)
  fullName.vb: Serilog.Core.Logger.Verbose(String)
  name.vb: Verbose(String)
- uid: Serilog.Core.Logger.Verbose``1(System.String,``0)
  commentId: M:Serilog.Core.Logger.Verbose``1(System.String,``0)
  id: Verbose``1(System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Verbose<T>(string, T)
  nameWithType: Logger.Verbose<T>(string, T)
  fullName: Serilog.Core.Logger.Verbose<T>(string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Verbose" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Verbose("Staring into space, wondering if we're alone.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Verbose<T>(string messageTemplate, T propertyValue)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Verbose(Of T)(messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Verbose*
  implements:
  - Serilog.ILogger.Verbose``1(System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Verbose(Of T)(String, T)
  fullName.vb: Serilog.Core.Logger.Verbose(Of T)(String, T)
  name.vb: Verbose(Of T)(String, T)
- uid: Serilog.Core.Logger.Verbose``2(System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Verbose``2(System.String,``0,``1)
  id: Verbose``2(System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Verbose<T0, T1>(string, T0, T1)
  nameWithType: Logger.Verbose<T0, T1>(string, T0, T1)
  fullName: Serilog.Core.Logger.Verbose<T0, T1>(string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Verbose" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Verbose("Staring into space, wondering if we're alone.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Verbose<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Verbose(Of T0, T1)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Verbose*
  implements:
  - Serilog.ILogger.Verbose``2(System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Verbose(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Verbose(Of T0, T1)(String, T0, T1)
  name.vb: Verbose(Of T0, T1)(String, T0, T1)
- uid: Serilog.Core.Logger.Verbose``3(System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Verbose``3(System.String,``0,``1,``2)
  id: Verbose``3(System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Verbose<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: Logger.Verbose<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Verbose<T0, T1, T2>(string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Verbose" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Verbose("Staring into space, wondering if we're alone.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Verbose<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Verbose(Of T0, T1, T2)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Verbose*
  implements:
  - Serilog.ILogger.Verbose``3(System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Verbose(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Verbose(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Verbose(Of T0, T1, T2)(String, T0, T1, T2)
- uid: Serilog.Core.Logger.Verbose(System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Verbose(System.String,System.Object[])
  id: Verbose(System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Verbose(string, params object?[]?)
  nameWithType: Logger.Verbose(string, params object?[]?)
  fullName: Serilog.Core.Logger.Verbose(string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Verbose" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Verbose("Staring into space, wondering if we're alone.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Verbose(string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Verbose(messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Verbose*
  implements:
  - Serilog.ILogger.Verbose(System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Verbose(String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Verbose(String, ParamArray Object())
  name.vb: Verbose(String, ParamArray Object())
- uid: Serilog.Core.Logger.Verbose(System.Exception,System.String)
  commentId: M:Serilog.Core.Logger.Verbose(System.Exception,System.String)
  id: Verbose(System.Exception,System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Verbose(Exception?, string)
  nameWithType: Logger.Verbose(Exception?, string)
  fullName: Serilog.Core.Logger.Verbose(System.Exception?, string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Verbose" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Verbose(ex, "Staring into space, wondering where this comet came from.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Verbose(Exception? exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Verbose(exception As Exception, messageTemplate As String)
  overload: Serilog.Core.Logger.Verbose*
  implements:
  - Serilog.ILogger.Verbose(System.Exception,System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Verbose(Exception, String)
  fullName.vb: Serilog.Core.Logger.Verbose(System.Exception, String)
  name.vb: Verbose(Exception, String)
- uid: Serilog.Core.Logger.Verbose``1(System.Exception,System.String,``0)
  commentId: M:Serilog.Core.Logger.Verbose``1(System.Exception,System.String,``0)
  id: Verbose``1(System.Exception,System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Verbose<T>(Exception?, string, T)
  nameWithType: Logger.Verbose<T>(Exception?, string, T)
  fullName: Serilog.Core.Logger.Verbose<T>(System.Exception?, string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Verbose" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Verbose(ex, "Staring into space, wondering where this comet came from.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Verbose<T>(Exception? exception, string messageTemplate, T propertyValue)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Verbose(Of T)(exception As Exception, messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Verbose*
  implements:
  - Serilog.ILogger.Verbose``1(System.Exception,System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Verbose(Of T)(Exception, String, T)
  fullName.vb: Serilog.Core.Logger.Verbose(Of T)(System.Exception, String, T)
  name.vb: Verbose(Of T)(Exception, String, T)
- uid: Serilog.Core.Logger.Verbose``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Verbose``2(System.Exception,System.String,``0,``1)
  id: Verbose``2(System.Exception,System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Verbose<T0, T1>(Exception?, string, T0, T1)
  nameWithType: Logger.Verbose<T0, T1>(Exception?, string, T0, T1)
  fullName: Serilog.Core.Logger.Verbose<T0, T1>(System.Exception?, string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Verbose" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Verbose(ex, "Staring into space, wondering where this comet came from.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Verbose<T0, T1>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Verbose(Of T0, T1)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Verbose*
  implements:
  - Serilog.ILogger.Verbose``2(System.Exception,System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Verbose(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Verbose(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Verbose(Of T0, T1)(Exception, String, T0, T1)
- uid: Serilog.Core.Logger.Verbose``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Verbose``3(System.Exception,System.String,``0,``1,``2)
  id: Verbose``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Verbose<T0, T1, T2>(Exception?, string, T0, T1, T2)
  nameWithType: Logger.Verbose<T0, T1, T2>(Exception?, string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Verbose<T0, T1, T2>(System.Exception?, string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Verbose" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Verbose(ex, "Staring into space, wondering where this comet came from.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Verbose<T0, T1, T2>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Verbose(Of T0, T1, T2)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Verbose*
  implements:
  - Serilog.ILogger.Verbose``3(System.Exception,System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Verbose(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Verbose(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Verbose(Of T0, T1, T2)(Exception, String, T0, T1, T2)
- uid: Serilog.Core.Logger.Verbose(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Verbose(System.Exception,System.String,System.Object[])
  id: Verbose(System.Exception,System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Verbose(Exception?, string, params object?[]?)
  nameWithType: Logger.Verbose(Exception?, string, params object?[]?)
  fullName: Serilog.Core.Logger.Verbose(System.Exception?, string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Verbose" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Verbose(ex, "Staring into space, wondering where this comet came from.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Verbose(Exception? exception, string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Verbose(exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Verbose*
  implements:
  - Serilog.ILogger.Verbose(System.Exception,System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Verbose(Exception, String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Verbose(System.Exception, String, ParamArray Object())
  name.vb: Verbose(Exception, String, ParamArray Object())
- uid: Serilog.Core.Logger.Debug(System.String)
  commentId: M:Serilog.Core.Logger.Debug(System.String)
  id: Debug(System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Debug(string)
  nameWithType: Logger.Debug(string)
  fullName: Serilog.Core.Logger.Debug(string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Debug" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Debug("Starting up at {StartedAt}.", DateTime.Now);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Debug(string messageTemplate)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Debug(messageTemplate As String)
  overload: Serilog.Core.Logger.Debug*
  implements:
  - Serilog.ILogger.Debug(System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Debug(String)
  fullName.vb: Serilog.Core.Logger.Debug(String)
  name.vb: Debug(String)
- uid: Serilog.Core.Logger.Debug``1(System.String,``0)
  commentId: M:Serilog.Core.Logger.Debug``1(System.String,``0)
  id: Debug``1(System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Debug<T>(string, T)
  nameWithType: Logger.Debug<T>(string, T)
  fullName: Serilog.Core.Logger.Debug<T>(string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Debug" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Debug("Starting up at {StartedAt}.", DateTime.Now);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Debug<T>(string messageTemplate, T propertyValue)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Debug(Of T)(messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Debug*
  implements:
  - Serilog.ILogger.Debug``1(System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Debug(Of T)(String, T)
  fullName.vb: Serilog.Core.Logger.Debug(Of T)(String, T)
  name.vb: Debug(Of T)(String, T)
- uid: Serilog.Core.Logger.Debug``2(System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Debug``2(System.String,``0,``1)
  id: Debug``2(System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Debug<T0, T1>(string, T0, T1)
  nameWithType: Logger.Debug<T0, T1>(string, T0, T1)
  fullName: Serilog.Core.Logger.Debug<T0, T1>(string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Debug" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Debug("Starting up at {StartedAt}.", DateTime.Now);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Debug<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Debug(Of T0, T1)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Debug*
  implements:
  - Serilog.ILogger.Debug``2(System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Debug(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Debug(Of T0, T1)(String, T0, T1)
  name.vb: Debug(Of T0, T1)(String, T0, T1)
- uid: Serilog.Core.Logger.Debug``3(System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Debug``3(System.String,``0,``1,``2)
  id: Debug``3(System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Debug<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: Logger.Debug<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Debug<T0, T1, T2>(string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Debug" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Debug("Starting up at {StartedAt}.", DateTime.Now);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Debug<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Debug(Of T0, T1, T2)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Debug*
  implements:
  - Serilog.ILogger.Debug``3(System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Debug(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Debug(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Debug(Of T0, T1, T2)(String, T0, T1, T2)
- uid: Serilog.Core.Logger.Debug(System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Debug(System.String,System.Object[])
  id: Debug(System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Debug(string, params object?[]?)
  nameWithType: Logger.Debug(string, params object?[]?)
  fullName: Serilog.Core.Logger.Debug(string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Debug" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Debug("Starting up at {StartedAt}.", DateTime.Now);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Debug(string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Debug(messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Debug*
  implements:
  - Serilog.ILogger.Debug(System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Debug(String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Debug(String, ParamArray Object())
  name.vb: Debug(String, ParamArray Object())
- uid: Serilog.Core.Logger.Debug(System.Exception,System.String)
  commentId: M:Serilog.Core.Logger.Debug(System.Exception,System.String)
  id: Debug(System.Exception,System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Debug(Exception?, string)
  nameWithType: Logger.Debug(Exception?, string)
  fullName: Serilog.Core.Logger.Debug(System.Exception?, string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Debug" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Debug(ex, "Swallowing a mundane exception.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Debug(Exception? exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Debug(exception As Exception, messageTemplate As String)
  overload: Serilog.Core.Logger.Debug*
  implements:
  - Serilog.ILogger.Debug(System.Exception,System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Debug(Exception, String)
  fullName.vb: Serilog.Core.Logger.Debug(System.Exception, String)
  name.vb: Debug(Exception, String)
- uid: Serilog.Core.Logger.Debug``1(System.Exception,System.String,``0)
  commentId: M:Serilog.Core.Logger.Debug``1(System.Exception,System.String,``0)
  id: Debug``1(System.Exception,System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Debug<T>(Exception?, string, T)
  nameWithType: Logger.Debug<T>(Exception?, string, T)
  fullName: Serilog.Core.Logger.Debug<T>(System.Exception?, string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Debug" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Debug(ex, "Swallowing a mundane exception.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Debug<T>(Exception? exception, string messageTemplate, T propertyValue)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Debug(Of T)(exception As Exception, messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Debug*
  implements:
  - Serilog.ILogger.Debug``1(System.Exception,System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Debug(Of T)(Exception, String, T)
  fullName.vb: Serilog.Core.Logger.Debug(Of T)(System.Exception, String, T)
  name.vb: Debug(Of T)(Exception, String, T)
- uid: Serilog.Core.Logger.Debug``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Debug``2(System.Exception,System.String,``0,``1)
  id: Debug``2(System.Exception,System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Debug<T0, T1>(Exception?, string, T0, T1)
  nameWithType: Logger.Debug<T0, T1>(Exception?, string, T0, T1)
  fullName: Serilog.Core.Logger.Debug<T0, T1>(System.Exception?, string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Debug" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Debug(ex, "Swallowing a mundane exception.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Debug<T0, T1>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Debug(Of T0, T1)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Debug*
  implements:
  - Serilog.ILogger.Debug``2(System.Exception,System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Debug(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Debug(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Debug(Of T0, T1)(Exception, String, T0, T1)
- uid: Serilog.Core.Logger.Debug``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Debug``3(System.Exception,System.String,``0,``1,``2)
  id: Debug``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Debug<T0, T1, T2>(Exception?, string, T0, T1, T2)
  nameWithType: Logger.Debug<T0, T1, T2>(Exception?, string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Debug<T0, T1, T2>(System.Exception?, string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Debug" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Debug(ex, "Swallowing a mundane exception.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Debug<T0, T1, T2>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Debug(Of T0, T1, T2)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Debug*
  implements:
  - Serilog.ILogger.Debug``3(System.Exception,System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Debug(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Debug(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Debug(Of T0, T1, T2)(Exception, String, T0, T1, T2)
- uid: Serilog.Core.Logger.Debug(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Debug(System.Exception,System.String,System.Object[])
  id: Debug(System.Exception,System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Debug(Exception?, string, params object?[]?)
  nameWithType: Logger.Debug(Exception?, string, params object?[]?)
  fullName: Serilog.Core.Logger.Debug(System.Exception?, string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Debug" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Debug(ex, "Swallowing a mundane exception.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Debug(Exception? exception, string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Debug(exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Debug*
  implements:
  - Serilog.ILogger.Debug(System.Exception,System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Debug(Exception, String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Debug(System.Exception, String, ParamArray Object())
  name.vb: Debug(Exception, String, ParamArray Object())
- uid: Serilog.Core.Logger.Information(System.String)
  commentId: M:Serilog.Core.Logger.Information(System.String)
  id: Information(System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Information(string)
  nameWithType: Logger.Information(string)
  fullName: Serilog.Core.Logger.Information(string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Information" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Information("Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Information(string messageTemplate)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Information(messageTemplate As String)
  overload: Serilog.Core.Logger.Information*
  implements:
  - Serilog.ILogger.Information(System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Information(String)
  fullName.vb: Serilog.Core.Logger.Information(String)
  name.vb: Information(String)
- uid: Serilog.Core.Logger.Information``1(System.String,``0)
  commentId: M:Serilog.Core.Logger.Information``1(System.String,``0)
  id: Information``1(System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Information<T>(string, T)
  nameWithType: Logger.Information<T>(string, T)
  fullName: Serilog.Core.Logger.Information<T>(string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Information" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Information("Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Information<T>(string messageTemplate, T propertyValue)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Information(Of T)(messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Information*
  implements:
  - Serilog.ILogger.Information``1(System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Information(Of T)(String, T)
  fullName.vb: Serilog.Core.Logger.Information(Of T)(String, T)
  name.vb: Information(Of T)(String, T)
- uid: Serilog.Core.Logger.Information``2(System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Information``2(System.String,``0,``1)
  id: Information``2(System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Information<T0, T1>(string, T0, T1)
  nameWithType: Logger.Information<T0, T1>(string, T0, T1)
  fullName: Serilog.Core.Logger.Information<T0, T1>(string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Information" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Information("Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Information<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Information(Of T0, T1)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Information*
  implements:
  - Serilog.ILogger.Information``2(System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Information(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Information(Of T0, T1)(String, T0, T1)
  name.vb: Information(Of T0, T1)(String, T0, T1)
- uid: Serilog.Core.Logger.Information``3(System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Information``3(System.String,``0,``1,``2)
  id: Information``3(System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Information<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: Logger.Information<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Information<T0, T1, T2>(string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Information" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Information("Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Information<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Information(Of T0, T1, T2)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Information*
  implements:
  - Serilog.ILogger.Information``3(System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Information(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Information(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Information(Of T0, T1, T2)(String, T0, T1, T2)
- uid: Serilog.Core.Logger.Information(System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Information(System.String,System.Object[])
  id: Information(System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Information(string, params object?[]?)
  nameWithType: Logger.Information(string, params object?[]?)
  fullName: Serilog.Core.Logger.Information(string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Information" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Information("Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Information(string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Information(messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Information*
  implements:
  - Serilog.ILogger.Information(System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Information(String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Information(String, ParamArray Object())
  name.vb: Information(String, ParamArray Object())
- uid: Serilog.Core.Logger.Information(System.Exception,System.String)
  commentId: M:Serilog.Core.Logger.Information(System.Exception,System.String)
  id: Information(System.Exception,System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Information(Exception?, string)
  nameWithType: Logger.Information(Exception?, string)
  fullName: Serilog.Core.Logger.Information(System.Exception?, string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Information" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Information(ex, "Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Information(Exception? exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Information(exception As Exception, messageTemplate As String)
  overload: Serilog.Core.Logger.Information*
  implements:
  - Serilog.ILogger.Information(System.Exception,System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Information(Exception, String)
  fullName.vb: Serilog.Core.Logger.Information(System.Exception, String)
  name.vb: Information(Exception, String)
- uid: Serilog.Core.Logger.Information``1(System.Exception,System.String,``0)
  commentId: M:Serilog.Core.Logger.Information``1(System.Exception,System.String,``0)
  id: Information``1(System.Exception,System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Information<T>(Exception?, string, T)
  nameWithType: Logger.Information<T>(Exception?, string, T)
  fullName: Serilog.Core.Logger.Information<T>(System.Exception?, string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Information" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Information(ex, "Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Information<T>(Exception? exception, string messageTemplate, T propertyValue)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Information(Of T)(exception As Exception, messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Information*
  implements:
  - Serilog.ILogger.Information``1(System.Exception,System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Information(Of T)(Exception, String, T)
  fullName.vb: Serilog.Core.Logger.Information(Of T)(System.Exception, String, T)
  name.vb: Information(Of T)(Exception, String, T)
- uid: Serilog.Core.Logger.Information``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Information``2(System.Exception,System.String,``0,``1)
  id: Information``2(System.Exception,System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Information<T0, T1>(Exception?, string, T0, T1)
  nameWithType: Logger.Information<T0, T1>(Exception?, string, T0, T1)
  fullName: Serilog.Core.Logger.Information<T0, T1>(System.Exception?, string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Information" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Information(ex, "Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Information<T0, T1>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Information(Of T0, T1)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Information*
  implements:
  - Serilog.ILogger.Information``2(System.Exception,System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Information(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Information(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Information(Of T0, T1)(Exception, String, T0, T1)
- uid: Serilog.Core.Logger.Information``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Information``3(System.Exception,System.String,``0,``1,``2)
  id: Information``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Information<T0, T1, T2>(Exception?, string, T0, T1, T2)
  nameWithType: Logger.Information<T0, T1, T2>(Exception?, string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Information<T0, T1, T2>(System.Exception?, string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Information" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Information(ex, "Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Information<T0, T1, T2>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Information(Of T0, T1, T2)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Information*
  implements:
  - Serilog.ILogger.Information``3(System.Exception,System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Information(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Information(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Information(Of T0, T1, T2)(Exception, String, T0, T1, T2)
- uid: Serilog.Core.Logger.Information(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Information(System.Exception,System.String,System.Object[])
  id: Information(System.Exception,System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Information(Exception?, string, params object?[]?)
  nameWithType: Logger.Information(Exception?, string, params object?[]?)
  fullName: Serilog.Core.Logger.Information(System.Exception?, string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Information" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Information(ex, "Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Information(Exception? exception, string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Information(exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Information*
  implements:
  - Serilog.ILogger.Information(System.Exception,System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Information(Exception, String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Information(System.Exception, String, ParamArray Object())
  name.vb: Information(Exception, String, ParamArray Object())
- uid: Serilog.Core.Logger.Warning(System.String)
  commentId: M:Serilog.Core.Logger.Warning(System.String)
  id: Warning(System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Warning(string)
  nameWithType: Logger.Warning(string)
  fullName: Serilog.Core.Logger.Warning(string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Warning" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Warning("Skipped {SkipCount} records.", skippedRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Warning(string messageTemplate)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Warning(messageTemplate As String)
  overload: Serilog.Core.Logger.Warning*
  implements:
  - Serilog.ILogger.Warning(System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Warning(String)
  fullName.vb: Serilog.Core.Logger.Warning(String)
  name.vb: Warning(String)
- uid: Serilog.Core.Logger.Warning``1(System.String,``0)
  commentId: M:Serilog.Core.Logger.Warning``1(System.String,``0)
  id: Warning``1(System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Warning<T>(string, T)
  nameWithType: Logger.Warning<T>(string, T)
  fullName: Serilog.Core.Logger.Warning<T>(string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Warning" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Warning("Skipped {SkipCount} records.", skippedRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Warning<T>(string messageTemplate, T propertyValue)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Warning(Of T)(messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Warning*
  implements:
  - Serilog.ILogger.Warning``1(System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Warning(Of T)(String, T)
  fullName.vb: Serilog.Core.Logger.Warning(Of T)(String, T)
  name.vb: Warning(Of T)(String, T)
- uid: Serilog.Core.Logger.Warning``2(System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Warning``2(System.String,``0,``1)
  id: Warning``2(System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Warning<T0, T1>(string, T0, T1)
  nameWithType: Logger.Warning<T0, T1>(string, T0, T1)
  fullName: Serilog.Core.Logger.Warning<T0, T1>(string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Warning" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Warning("Skipped {SkipCount} records.", skippedRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Warning<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Warning(Of T0, T1)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Warning*
  implements:
  - Serilog.ILogger.Warning``2(System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Warning(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Warning(Of T0, T1)(String, T0, T1)
  name.vb: Warning(Of T0, T1)(String, T0, T1)
- uid: Serilog.Core.Logger.Warning``3(System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Warning``3(System.String,``0,``1,``2)
  id: Warning``3(System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Warning<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: Logger.Warning<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Warning<T0, T1, T2>(string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Warning" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Warning("Skipped {SkipCount} records.", skippedRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Warning<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Warning(Of T0, T1, T2)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Warning*
  implements:
  - Serilog.ILogger.Warning``3(System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Warning(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Warning(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Warning(Of T0, T1, T2)(String, T0, T1, T2)
- uid: Serilog.Core.Logger.Warning(System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Warning(System.String,System.Object[])
  id: Warning(System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Warning(string, params object?[]?)
  nameWithType: Logger.Warning(string, params object?[]?)
  fullName: Serilog.Core.Logger.Warning(string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Warning" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Warning("Skipped {SkipCount} records.", skippedRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Warning(string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Warning(messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Warning*
  implements:
  - Serilog.ILogger.Warning(System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Warning(String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Warning(String, ParamArray Object())
  name.vb: Warning(String, ParamArray Object())
- uid: Serilog.Core.Logger.Warning(System.Exception,System.String)
  commentId: M:Serilog.Core.Logger.Warning(System.Exception,System.String)
  id: Warning(System.Exception,System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Warning(Exception?, string)
  nameWithType: Logger.Warning(Exception?, string)
  fullName: Serilog.Core.Logger.Warning(System.Exception?, string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Warning" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Warning(ex, "Skipped {SkipCount} records.", skippedRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Warning(Exception? exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Warning(exception As Exception, messageTemplate As String)
  overload: Serilog.Core.Logger.Warning*
  implements:
  - Serilog.ILogger.Warning(System.Exception,System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Warning(Exception, String)
  fullName.vb: Serilog.Core.Logger.Warning(System.Exception, String)
  name.vb: Warning(Exception, String)
- uid: Serilog.Core.Logger.Warning``1(System.Exception,System.String,``0)
  commentId: M:Serilog.Core.Logger.Warning``1(System.Exception,System.String,``0)
  id: Warning``1(System.Exception,System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Warning<T>(Exception?, string, T)
  nameWithType: Logger.Warning<T>(Exception?, string, T)
  fullName: Serilog.Core.Logger.Warning<T>(System.Exception?, string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Warning" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Warning(ex, "Skipped {SkipCount} records.", skippedRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Warning<T>(Exception? exception, string messageTemplate, T propertyValue)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Warning(Of T)(exception As Exception, messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Warning*
  implements:
  - Serilog.ILogger.Warning``1(System.Exception,System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Warning(Of T)(Exception, String, T)
  fullName.vb: Serilog.Core.Logger.Warning(Of T)(System.Exception, String, T)
  name.vb: Warning(Of T)(Exception, String, T)
- uid: Serilog.Core.Logger.Warning``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Warning``2(System.Exception,System.String,``0,``1)
  id: Warning``2(System.Exception,System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Warning<T0, T1>(Exception?, string, T0, T1)
  nameWithType: Logger.Warning<T0, T1>(Exception?, string, T0, T1)
  fullName: Serilog.Core.Logger.Warning<T0, T1>(System.Exception?, string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Warning" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Warning(ex, "Skipped {SkipCount} records.", skippedRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Warning<T0, T1>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Warning(Of T0, T1)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Warning*
  implements:
  - Serilog.ILogger.Warning``2(System.Exception,System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Warning(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Warning(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Warning(Of T0, T1)(Exception, String, T0, T1)
- uid: Serilog.Core.Logger.Warning``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Warning``3(System.Exception,System.String,``0,``1,``2)
  id: Warning``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Warning<T0, T1, T2>(Exception?, string, T0, T1, T2)
  nameWithType: Logger.Warning<T0, T1, T2>(Exception?, string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Warning<T0, T1, T2>(System.Exception?, string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Warning" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Warning(ex, "Skipped {SkipCount} records.", skippedRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Warning<T0, T1, T2>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Warning(Of T0, T1, T2)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Warning*
  implements:
  - Serilog.ILogger.Warning``3(System.Exception,System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Warning(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Warning(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Warning(Of T0, T1, T2)(Exception, String, T0, T1, T2)
- uid: Serilog.Core.Logger.Warning(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Warning(System.Exception,System.String,System.Object[])
  id: Warning(System.Exception,System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Warning(Exception?, string, params object?[]?)
  nameWithType: Logger.Warning(Exception?, string, params object?[]?)
  fullName: Serilog.Core.Logger.Warning(System.Exception?, string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Warning" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Warning(ex, "Skipped {SkipCount} records.", skippedRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Warning(Exception? exception, string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Warning(exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Warning*
  implements:
  - Serilog.ILogger.Warning(System.Exception,System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Warning(Exception, String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Warning(System.Exception, String, ParamArray Object())
  name.vb: Warning(Exception, String, ParamArray Object())
- uid: Serilog.Core.Logger.Error(System.String)
  commentId: M:Serilog.Core.Logger.Error(System.String)
  id: Error(System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Error(string)
  nameWithType: Logger.Error(string)
  fullName: Serilog.Core.Logger.Error(string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Error" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Error("Failed {ErrorCount} records.", brokenRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Error(string messageTemplate)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub [Error](messageTemplate As String)
  overload: Serilog.Core.Logger.Error*
  implements:
  - Serilog.ILogger.Error(System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Error(String)
  fullName.vb: Serilog.Core.Logger.Error(String)
  name.vb: Error(String)
- uid: Serilog.Core.Logger.Error``1(System.String,``0)
  commentId: M:Serilog.Core.Logger.Error``1(System.String,``0)
  id: Error``1(System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Error<T>(string, T)
  nameWithType: Logger.Error<T>(string, T)
  fullName: Serilog.Core.Logger.Error<T>(string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Error" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Error("Failed {ErrorCount} records.", brokenRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Error<T>(string messageTemplate, T propertyValue)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub [Error](Of T)(messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Error*
  implements:
  - Serilog.ILogger.Error``1(System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Error(Of T)(String, T)
  fullName.vb: Serilog.Core.Logger.Error(Of T)(String, T)
  name.vb: Error(Of T)(String, T)
- uid: Serilog.Core.Logger.Error``2(System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Error``2(System.String,``0,``1)
  id: Error``2(System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Error<T0, T1>(string, T0, T1)
  nameWithType: Logger.Error<T0, T1>(string, T0, T1)
  fullName: Serilog.Core.Logger.Error<T0, T1>(string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Error" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Error("Failed {ErrorCount} records.", brokenRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Error<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub [Error](Of T0, T1)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Error*
  implements:
  - Serilog.ILogger.Error``2(System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Error(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Error(Of T0, T1)(String, T0, T1)
  name.vb: Error(Of T0, T1)(String, T0, T1)
- uid: Serilog.Core.Logger.Error``3(System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Error``3(System.String,``0,``1,``2)
  id: Error``3(System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Error<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: Logger.Error<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Error<T0, T1, T2>(string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Error" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Error("Failed {ErrorCount} records.", brokenRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Error<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub [Error](Of T0, T1, T2)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Error*
  implements:
  - Serilog.ILogger.Error``3(System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Error(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Error(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Error(Of T0, T1, T2)(String, T0, T1, T2)
- uid: Serilog.Core.Logger.Error(System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Error(System.String,System.Object[])
  id: Error(System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Error(string, params object?[]?)
  nameWithType: Logger.Error(string, params object?[]?)
  fullName: Serilog.Core.Logger.Error(string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Error" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Error("Failed {ErrorCount} records.", brokenRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Error(string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub [Error](messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Error*
  implements:
  - Serilog.ILogger.Error(System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Error(String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Error(String, ParamArray Object())
  name.vb: Error(String, ParamArray Object())
- uid: Serilog.Core.Logger.Error(System.Exception,System.String)
  commentId: M:Serilog.Core.Logger.Error(System.Exception,System.String)
  id: Error(System.Exception,System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Error(Exception?, string)
  nameWithType: Logger.Error(Exception?, string)
  fullName: Serilog.Core.Logger.Error(System.Exception?, string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Error" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Error(ex, "Failed {ErrorCount} records.", brokenRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Error(Exception? exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub [Error](exception As Exception, messageTemplate As String)
  overload: Serilog.Core.Logger.Error*
  implements:
  - Serilog.ILogger.Error(System.Exception,System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Error(Exception, String)
  fullName.vb: Serilog.Core.Logger.Error(System.Exception, String)
  name.vb: Error(Exception, String)
- uid: Serilog.Core.Logger.Error``1(System.Exception,System.String,``0)
  commentId: M:Serilog.Core.Logger.Error``1(System.Exception,System.String,``0)
  id: Error``1(System.Exception,System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Error<T>(Exception?, string, T)
  nameWithType: Logger.Error<T>(Exception?, string, T)
  fullName: Serilog.Core.Logger.Error<T>(System.Exception?, string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Error" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Error(ex, "Failed {ErrorCount} records.", brokenRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Error<T>(Exception? exception, string messageTemplate, T propertyValue)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub [Error](Of T)(exception As Exception, messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Error*
  implements:
  - Serilog.ILogger.Error``1(System.Exception,System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Error(Of T)(Exception, String, T)
  fullName.vb: Serilog.Core.Logger.Error(Of T)(System.Exception, String, T)
  name.vb: Error(Of T)(Exception, String, T)
- uid: Serilog.Core.Logger.Error``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Error``2(System.Exception,System.String,``0,``1)
  id: Error``2(System.Exception,System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Error<T0, T1>(Exception?, string, T0, T1)
  nameWithType: Logger.Error<T0, T1>(Exception?, string, T0, T1)
  fullName: Serilog.Core.Logger.Error<T0, T1>(System.Exception?, string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Error" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Error(ex, "Failed {ErrorCount} records.", brokenRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Error<T0, T1>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub [Error](Of T0, T1)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Error*
  implements:
  - Serilog.ILogger.Error``2(System.Exception,System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Error(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Error(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Error(Of T0, T1)(Exception, String, T0, T1)
- uid: Serilog.Core.Logger.Error``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Error``3(System.Exception,System.String,``0,``1,``2)
  id: Error``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Error<T0, T1, T2>(Exception?, string, T0, T1, T2)
  nameWithType: Logger.Error<T0, T1, T2>(Exception?, string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Error<T0, T1, T2>(System.Exception?, string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Error" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Error(ex, "Failed {ErrorCount} records.", brokenRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Error<T0, T1, T2>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub [Error](Of T0, T1, T2)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Error*
  implements:
  - Serilog.ILogger.Error``3(System.Exception,System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Error(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Error(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Error(Of T0, T1, T2)(Exception, String, T0, T1, T2)
- uid: Serilog.Core.Logger.Error(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Error(System.Exception,System.String,System.Object[])
  id: Error(System.Exception,System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Error(Exception?, string, params object?[]?)
  nameWithType: Logger.Error(Exception?, string, params object?[]?)
  fullName: Serilog.Core.Logger.Error(System.Exception?, string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Error" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Error(ex, "Failed {ErrorCount} records.", brokenRecords.Length);
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Error(Exception? exception, string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub [Error](exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Error*
  implements:
  - Serilog.ILogger.Error(System.Exception,System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Error(Exception, String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Error(System.Exception, String, ParamArray Object())
  name.vb: Error(Exception, String, ParamArray Object())
- uid: Serilog.Core.Logger.Fatal(System.String)
  commentId: M:Serilog.Core.Logger.Fatal(System.String)
  id: Fatal(System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Fatal(string)
  nameWithType: Logger.Fatal(string)
  fullName: Serilog.Core.Logger.Fatal(string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Fatal" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Fatal("Process terminating.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Fatal(string messageTemplate)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Fatal(messageTemplate As String)
  overload: Serilog.Core.Logger.Fatal*
  implements:
  - Serilog.ILogger.Fatal(System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Fatal(String)
  fullName.vb: Serilog.Core.Logger.Fatal(String)
  name.vb: Fatal(String)
- uid: Serilog.Core.Logger.Fatal``1(System.String,``0)
  commentId: M:Serilog.Core.Logger.Fatal``1(System.String,``0)
  id: Fatal``1(System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Fatal<T>(string, T)
  nameWithType: Logger.Fatal<T>(string, T)
  fullName: Serilog.Core.Logger.Fatal<T>(string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Fatal" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Fatal("Process terminating.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Fatal<T>(string messageTemplate, T propertyValue)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Fatal(Of T)(messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Fatal*
  implements:
  - Serilog.ILogger.Fatal``1(System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Fatal(Of T)(String, T)
  fullName.vb: Serilog.Core.Logger.Fatal(Of T)(String, T)
  name.vb: Fatal(Of T)(String, T)
- uid: Serilog.Core.Logger.Fatal``2(System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Fatal``2(System.String,``0,``1)
  id: Fatal``2(System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Fatal<T0, T1>(string, T0, T1)
  nameWithType: Logger.Fatal<T0, T1>(string, T0, T1)
  fullName: Serilog.Core.Logger.Fatal<T0, T1>(string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Fatal" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Fatal("Process terminating.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Fatal<T0, T1>(string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Fatal(Of T0, T1)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Fatal*
  implements:
  - Serilog.ILogger.Fatal``2(System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Fatal(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Fatal(Of T0, T1)(String, T0, T1)
  name.vb: Fatal(Of T0, T1)(String, T0, T1)
- uid: Serilog.Core.Logger.Fatal``3(System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Fatal``3(System.String,``0,``1,``2)
  id: Fatal``3(System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Fatal<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: Logger.Fatal<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Fatal<T0, T1, T2>(string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Fatal" data-throw-if-not-resolved="false"></xref> level.
  example:
  - Log.Fatal("Process terminating.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Fatal<T0, T1, T2>(string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Fatal(Of T0, T1, T2)(messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Fatal*
  implements:
  - Serilog.ILogger.Fatal``3(System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Fatal(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Fatal(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Fatal(Of T0, T1, T2)(String, T0, T1, T2)
- uid: Serilog.Core.Logger.Fatal(System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Fatal(System.String,System.Object[])
  id: Fatal(System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Fatal(string, params object?[]?)
  nameWithType: Logger.Fatal(string, params object?[]?)
  fullName: Serilog.Core.Logger.Fatal(string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Fatal" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Fatal("Process terminating.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Fatal(string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Fatal(messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Fatal*
  implements:
  - Serilog.ILogger.Fatal(System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Fatal(String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Fatal(String, ParamArray Object())
  name.vb: Fatal(String, ParamArray Object())
- uid: Serilog.Core.Logger.Fatal(System.Exception,System.String)
  commentId: M:Serilog.Core.Logger.Fatal(System.Exception,System.String)
  id: Fatal(System.Exception,System.String)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Fatal(Exception?, string)
  nameWithType: Logger.Fatal(Exception?, string)
  fullName: Serilog.Core.Logger.Fatal(System.Exception?, string)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Fatal" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Fatal(ex, "Process terminating.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Fatal(Exception? exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Fatal(exception As Exception, messageTemplate As String)
  overload: Serilog.Core.Logger.Fatal*
  implements:
  - Serilog.ILogger.Fatal(System.Exception,System.String)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Fatal(Exception, String)
  fullName.vb: Serilog.Core.Logger.Fatal(System.Exception, String)
  name.vb: Fatal(Exception, String)
- uid: Serilog.Core.Logger.Fatal``1(System.Exception,System.String,``0)
  commentId: M:Serilog.Core.Logger.Fatal``1(System.Exception,System.String,``0)
  id: Fatal``1(System.Exception,System.String,``0)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Fatal<T>(Exception?, string, T)
  nameWithType: Logger.Fatal<T>(Exception?, string, T)
  fullName: Serilog.Core.Logger.Fatal<T>(System.Exception?, string, T)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Fatal" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Fatal(ex, "Process terminating.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Fatal<T>(Exception? exception, string messageTemplate, T propertyValue)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue
      type: '{T}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Fatal(Of T)(exception As Exception, messageTemplate As String, propertyValue As T)
  overload: Serilog.Core.Logger.Fatal*
  implements:
  - Serilog.ILogger.Fatal``1(System.Exception,System.String,{T})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Fatal(Of T)(Exception, String, T)
  fullName.vb: Serilog.Core.Logger.Fatal(Of T)(System.Exception, String, T)
  name.vb: Fatal(Of T)(Exception, String, T)
- uid: Serilog.Core.Logger.Fatal``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.Core.Logger.Fatal``2(System.Exception,System.String,``0,``1)
  id: Fatal``2(System.Exception,System.String,``0,``1)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Fatal<T0, T1>(Exception?, string, T0, T1)
  nameWithType: Logger.Fatal<T0, T1>(Exception?, string, T0, T1)
  fullName: Serilog.Core.Logger.Fatal<T0, T1>(System.Exception?, string, T0, T1)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Fatal" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Fatal(ex, "Process terminating.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Fatal<T0, T1>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Fatal(Of T0, T1)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1)
  overload: Serilog.Core.Logger.Fatal*
  implements:
  - Serilog.ILogger.Fatal``2(System.Exception,System.String,{T0},{T1})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Fatal(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.Core.Logger.Fatal(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Fatal(Of T0, T1)(Exception, String, T0, T1)
- uid: Serilog.Core.Logger.Fatal``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.Core.Logger.Fatal``3(System.Exception,System.String,``0,``1,``2)
  id: Fatal``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Fatal<T0, T1, T2>(Exception?, string, T0, T1, T2)
  nameWithType: Logger.Fatal<T0, T1, T2>(Exception?, string, T0, T1, T2)
  fullName: Serilog.Core.Logger.Fatal<T0, T1, T2>(System.Exception?, string, T0, T1, T2)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Fatal" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Fatal(ex, "Process terminating.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Fatal<T0, T1, T2>(Exception? exception, string messageTemplate, T0 propertyValue0, T1 propertyValue1, T2 propertyValue2)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValue0
      type: '{T0}'
      description: Object positionally formatted into the message template.
    - id: propertyValue1
      type: '{T1}'
      description: Object positionally formatted into the message template.
    - id: propertyValue2
      type: '{T2}'
      description: Object positionally formatted into the message template.
    typeParameters:
    - id: T0
    - id: T1
    - id: T2
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Fatal(Of T0, T1, T2)(exception As Exception, messageTemplate As String, propertyValue0 As T0, propertyValue1 As T1, propertyValue2 As T2)
  overload: Serilog.Core.Logger.Fatal*
  implements:
  - Serilog.ILogger.Fatal``3(System.Exception,System.String,{T0},{T1},{T2})
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Fatal(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.Core.Logger.Fatal(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Fatal(Of T0, T1, T2)(Exception, String, T0, T1, T2)
- uid: Serilog.Core.Logger.Fatal(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.Core.Logger.Fatal(System.Exception,System.String,System.Object[])
  id: Fatal(System.Exception,System.String,System.Object[])
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Fatal(Exception?, string, params object?[]?)
  nameWithType: Logger.Fatal(Exception?, string, params object?[]?)
  fullName: Serilog.Core.Logger.Fatal(System.Exception?, string, params object?[]?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Write a log event with the <xref href="Serilog.Events.LogEventLevel.Fatal" data-throw-if-not-resolved="false"></xref> level and associated exception.
  example:
  - Log.Fatal(ex, "Process terminating.");
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public void Fatal(Exception? exception, string messageTemplate, params object?[]? propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: Exception related to the event.
    - id: messageTemplate
      type: System.String
      description: Message template describing the event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Sub Fatal(exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Serilog.Core.Logger.Fatal*
  implements:
  - Serilog.ILogger.Fatal(System.Exception,System.String,System.Object[])
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.Fatal(Exception, String, ParamArray Object())
  fullName.vb: Serilog.Core.Logger.Fatal(System.Exception, String, ParamArray Object())
  name.vb: Fatal(Exception, String, ParamArray Object())
- uid: Serilog.Core.Logger.BindMessageTemplate(System.String,System.Object[],Serilog.Events.MessageTemplate@,System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}@)
  commentId: M:Serilog.Core.Logger.BindMessageTemplate(System.String,System.Object[],Serilog.Events.MessageTemplate@,System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}@)
  id: BindMessageTemplate(System.String,System.Object[],Serilog.Events.MessageTemplate@,System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}@)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: BindMessageTemplate(string, object?[]?, out MessageTemplate?, out IEnumerable<LogEventProperty>?)
  nameWithType: Logger.BindMessageTemplate(string, object?[]?, out MessageTemplate?, out IEnumerable<LogEventProperty>?)
  fullName: Serilog.Core.Logger.BindMessageTemplate(string, object?[]?, out Serilog.Events.MessageTemplate?, out System.Collections.Generic.IEnumerable<Serilog.Events.LogEventProperty>?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: >-
    Uses configured scalar conversion and destructuring rules to bind a set of properties to a

    message template. Returns false if the template or values are invalid (<code>ILogger</code>

    methods never throw exceptions).
  example:
  - >-
    MessageTemplate template;

    IEnumerable&lt;LogEventProperty&gt; properties&gt;;

    if (Log.BindMessageTemplate("Hello, {Name}!", new[] { "World" }, out template, out properties)

    {
        var propsByName = properties.ToDictionary(p =&gt; p.Name, p =&gt; p.Value);
        Console.WriteLine(template.Render(propsByName, null));
        // -&gt; "Hello, World!"
    }
  syntax:
    content: >-
      [MessageTemplateFormatMethod("messageTemplate")]

      public bool BindMessageTemplate(string messageTemplate, object?[]? propertyValues, out MessageTemplate? parsedTemplate, out IEnumerable<LogEventProperty>? boundProperties)
    parameters:
    - id: messageTemplate
      type: System.String
      description: Message template describing an event.
    - id: propertyValues
      type: System.Object[]
      description: Objects positionally formatted into the message template.
    - id: parsedTemplate
      type: Serilog.Events.MessageTemplate
      description: >-
        The internal representation of the template, which may be used to
                    render the <code class="paramref">boundProperties</code> as text.
    - id: boundProperties
      type: System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}
      description: Captured properties from the template and <code class="paramref">propertyValues</code>.
    return:
      type: System.Boolean
    content.vb: >-
      <MessageTemplateFormatMethod("messageTemplate")>

      Public Function BindMessageTemplate(messageTemplate As String, propertyValues As Object(), parsedTemplate As MessageTemplate, boundProperties As IEnumerable(Of LogEventProperty)) As Boolean
  overload: Serilog.Core.Logger.BindMessageTemplate*
  implements:
  - Serilog.ILogger.BindMessageTemplate(System.String,System.Object[],Serilog.Events.MessageTemplate@,System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}@)
  attributes:
  - type: Serilog.Core.MessageTemplateFormatMethodAttribute
    ctor: Serilog.Core.MessageTemplateFormatMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageTemplate
  nameWithType.vb: Logger.BindMessageTemplate(String, Object(), MessageTemplate, IEnumerable(Of LogEventProperty))
  fullName.vb: Serilog.Core.Logger.BindMessageTemplate(String, Object(), Serilog.Events.MessageTemplate, System.Collections.Generic.IEnumerable(Of Serilog.Events.LogEventProperty))
  name.vb: BindMessageTemplate(String, Object(), MessageTemplate, IEnumerable(Of LogEventProperty))
- uid: Serilog.Core.Logger.BindProperty(System.String,System.Object,System.Boolean,Serilog.Events.LogEventProperty@)
  commentId: M:Serilog.Core.Logger.BindProperty(System.String,System.Object,System.Boolean,Serilog.Events.LogEventProperty@)
  id: BindProperty(System.String,System.Object,System.Boolean,Serilog.Events.LogEventProperty@)
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: BindProperty(string?, object?, bool, out LogEventProperty?)
  nameWithType: Logger.BindProperty(string?, object?, bool, out LogEventProperty?)
  fullName: Serilog.Core.Logger.BindProperty(string?, object?, bool, out Serilog.Events.LogEventProperty?)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: >-
    Uses configured scalar conversion and destructuring rules to bind a property value to its captured

    representation.
  example: []
  syntax:
    content: public bool BindProperty(string? propertyName, object? value, bool destructureObjects, out LogEventProperty? property)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property. Must be non-empty.
    - id: value
      type: System.Object
      description: The property value.
    - id: destructureObjects
      type: System.Boolean
      description: >-
        If true, the value will be serialized as a structured
                    object if possible; if false, the object will be recorded as a scalar or simple array.
    - id: property
      type: Serilog.Events.LogEventProperty
      description: The resulting property.
    return:
      type: System.Boolean
      description: >-
        True if the property could be bound, otherwise false (<summary>ILogger</summary>
                    methods never throw exceptions).
    content.vb: Public Function BindProperty(propertyName As String, value As Object, destructureObjects As Boolean, [property] As LogEventProperty) As Boolean
  overload: Serilog.Core.Logger.BindProperty*
  implements:
  - Serilog.ILogger.BindProperty(System.String,System.Object,System.Boolean,Serilog.Events.LogEventProperty@)
  nameWithType.vb: Logger.BindProperty(String, Object, Boolean, LogEventProperty)
  fullName.vb: Serilog.Core.Logger.BindProperty(String, Object, Boolean, Serilog.Events.LogEventProperty)
  name.vb: BindProperty(String, Object, Boolean, LogEventProperty)
- uid: Serilog.Core.Logger.Dispose
  commentId: M:Serilog.Core.Logger.Dispose
  id: Dispose
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Logger.Dispose()
  fullName: Serilog.Core.Logger.Dispose()
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: Close and flush the logging pipeline.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Serilog.Core.Logger.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Serilog.Core.Logger.None
  commentId: P:Serilog.Core.Logger.None
  id: None
  parent: Serilog.Core.Logger
  langs:
  - csharp
  - vb
  name: None
  nameWithType: Logger.None
  fullName: Serilog.Core.Logger.None
  type: Property
  assemblies:
  - Serilog
  namespace: Serilog.Core
  summary: An <xref href="Serilog.ILogger" data-throw-if-not-resolved="false"></xref> instance that efficiently ignores all method calls.
  example: []
  syntax:
    content: public static ILogger None { get; }
    parameters: []
    return:
      type: Serilog.ILogger
    content.vb: Public Shared ReadOnly Property None As ILogger
  overload: Serilog.Core.Logger.None*
references:
- uid: Serilog.Core.Logger
  commentId: T:Serilog.Core.Logger
  parent: Serilog.Core
  isExternal: true
  href: Serilog.Core.Logger.html
  name: Logger
  nameWithType: Logger
  fullName: Serilog.Core.Logger
- uid: Serilog.ILogger
  commentId: T:Serilog.ILogger
  parent: Serilog
  isExternal: true
  href: Serilog.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: Serilog.ILogger
- uid: Serilog.Core
  commentId: N:Serilog.Core
  isExternal: true
  href: Serilog.html
  name: Serilog.Core
  nameWithType: Serilog.Core
  fullName: Serilog.Core
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Core
    name: Core
    isExternal: true
    href: Serilog.Core.html
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Core
    name: Core
    isExternal: true
    href: Serilog.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Serilog.Core.ILogEventSink
  commentId: T:Serilog.Core.ILogEventSink
  parent: Serilog.Core
  isExternal: true
  href: Serilog.Core.ILogEventSink.html
  name: ILogEventSink
  nameWithType: ILogEventSink
  fullName: Serilog.Core.ILogEventSink
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: Serilog.ILogger.Serilog.LoggerExtensions.ForContext``1(Serilog.Events.LogEventLevel,System.String,{TValue},System.Boolean)
  commentId: M:Serilog.LoggerExtensions.ForContext``1(Serilog.ILogger,Serilog.Events.LogEventLevel,System.String,``0,System.Boolean)
  parent: Serilog.LoggerExtensions
  definition: Serilog.LoggerExtensions.ForContext``1(Serilog.ILogger,Serilog.Events.LogEventLevel,System.String,``0,System.Boolean)
  href: Serilog.LoggerExtensions.html#Serilog_LoggerExtensions_ForContext__1_Serilog_ILogger_Serilog_Events_LogEventLevel_System_String___0_System_Boolean_
  name: ForContext<TValue>(ILogger, LogEventLevel, string, TValue, bool)
  nameWithType: LoggerExtensions.ForContext<TValue>(ILogger, LogEventLevel, string, TValue, bool)
  fullName: Serilog.LoggerExtensions.ForContext<TValue>(Serilog.ILogger, Serilog.Events.LogEventLevel, string, TValue, bool)
  nameWithType.vb: LoggerExtensions.ForContext(Of TValue)(ILogger, LogEventLevel, String, TValue, Boolean)
  fullName.vb: Serilog.LoggerExtensions.ForContext(Of TValue)(Serilog.ILogger, Serilog.Events.LogEventLevel, String, TValue, Boolean)
  name.vb: ForContext(Of TValue)(ILogger, LogEventLevel, String, TValue, Boolean)
  spec.csharp:
  - uid: Serilog.LoggerExtensions.ForContext``1(Serilog.ILogger,Serilog.Events.LogEventLevel,System.String,``0,System.Boolean)
    name: ForContext
    isExternal: true
    href: Serilog.LoggerExtensions.html#Serilog_LoggerExtensions_ForContext__1_Serilog_ILogger_Serilog_Events_LogEventLevel_System_String___0_System_Boolean_
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: Serilog.ILogger
    name: ILogger
    isExternal: true
    href: Serilog.ILogger.html
  - name: ','
  - name: " "
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Serilog.LoggerExtensions.ForContext``1(Serilog.ILogger,Serilog.Events.LogEventLevel,System.String,``0,System.Boolean)
    name: ForContext
    isExternal: true
    href: Serilog.LoggerExtensions.html#Serilog_LoggerExtensions_ForContext__1_Serilog_ILogger_Serilog_Events_LogEventLevel_System_String___0_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: Serilog.ILogger
    name: ILogger
    isExternal: true
    href: Serilog.ILogger.html
  - name: ','
  - name: " "
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  href: Serilog.html
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Serilog.LoggerExtensions.ForContext``1(Serilog.ILogger,Serilog.Events.LogEventLevel,System.String,``0,System.Boolean)
  commentId: M:Serilog.LoggerExtensions.ForContext``1(Serilog.ILogger,Serilog.Events.LogEventLevel,System.String,``0,System.Boolean)
  isExternal: true
  href: Serilog.LoggerExtensions.html#Serilog_LoggerExtensions_ForContext__1_Serilog_ILogger_Serilog_Events_LogEventLevel_System_String___0_System_Boolean_
  name: ForContext<TValue>(ILogger, LogEventLevel, string, TValue, bool)
  nameWithType: LoggerExtensions.ForContext<TValue>(ILogger, LogEventLevel, string, TValue, bool)
  fullName: Serilog.LoggerExtensions.ForContext<TValue>(Serilog.ILogger, Serilog.Events.LogEventLevel, string, TValue, bool)
  nameWithType.vb: LoggerExtensions.ForContext(Of TValue)(ILogger, LogEventLevel, String, TValue, Boolean)
  fullName.vb: Serilog.LoggerExtensions.ForContext(Of TValue)(Serilog.ILogger, Serilog.Events.LogEventLevel, String, TValue, Boolean)
  name.vb: ForContext(Of TValue)(ILogger, LogEventLevel, String, TValue, Boolean)
  spec.csharp:
  - uid: Serilog.LoggerExtensions.ForContext``1(Serilog.ILogger,Serilog.Events.LogEventLevel,System.String,``0,System.Boolean)
    name: ForContext
    isExternal: true
    href: Serilog.LoggerExtensions.html#Serilog_LoggerExtensions_ForContext__1_Serilog_ILogger_Serilog_Events_LogEventLevel_System_String___0_System_Boolean_
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: Serilog.ILogger
    name: ILogger
    isExternal: true
    href: Serilog.ILogger.html
  - name: ','
  - name: " "
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Serilog.LoggerExtensions.ForContext``1(Serilog.ILogger,Serilog.Events.LogEventLevel,System.String,``0,System.Boolean)
    name: ForContext
    isExternal: true
    href: Serilog.LoggerExtensions.html#Serilog_LoggerExtensions_ForContext__1_Serilog_ILogger_Serilog_Events_LogEventLevel_System_String___0_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: Serilog.ILogger
    name: ILogger
    isExternal: true
    href: Serilog.ILogger.html
  - name: ','
  - name: " "
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Serilog.LoggerExtensions
  commentId: T:Serilog.LoggerExtensions
  parent: Serilog
  isExternal: true
  href: Serilog.LoggerExtensions.html
  name: LoggerExtensions
  nameWithType: LoggerExtensions
  fullName: Serilog.LoggerExtensions
- uid: Serilog.Core.Logger.ForContext*
  commentId: Overload:Serilog.Core.Logger.ForContext
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_ForContext_Serilog_Core_ILogEventEnricher_
  name: ForContext
  nameWithType: Logger.ForContext
  fullName: Serilog.Core.Logger.ForContext
- uid: Serilog.ILogger.ForContext(Serilog.Core.ILogEventEnricher)
  commentId: M:Serilog.ILogger.ForContext(Serilog.Core.ILogEventEnricher)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_ForContext_Serilog_Core_ILogEventEnricher_
  name: ForContext(ILogEventEnricher)
  nameWithType: ILogger.ForContext(ILogEventEnricher)
  fullName: Serilog.ILogger.ForContext(Serilog.Core.ILogEventEnricher)
  spec.csharp:
  - uid: Serilog.ILogger.ForContext(Serilog.Core.ILogEventEnricher)
    name: ForContext
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_ForContext_Serilog_Core_ILogEventEnricher_
  - name: (
  - uid: Serilog.Core.ILogEventEnricher
    name: ILogEventEnricher
    isExternal: true
    href: Serilog.Core.ILogEventEnricher.html
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.ForContext(Serilog.Core.ILogEventEnricher)
    name: ForContext
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_ForContext_Serilog_Core_ILogEventEnricher_
  - name: (
  - uid: Serilog.Core.ILogEventEnricher
    name: ILogEventEnricher
    isExternal: true
    href: Serilog.Core.ILogEventEnricher.html
  - name: )
- uid: Serilog.Core.ILogEventEnricher
  commentId: T:Serilog.Core.ILogEventEnricher
  parent: Serilog.Core
  isExternal: true
  href: Serilog.Core.ILogEventEnricher.html
  name: ILogEventEnricher
  nameWithType: ILogEventEnricher
  fullName: Serilog.Core.ILogEventEnricher
- uid: Serilog.ILogger.ForContext(System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher})
  commentId: M:Serilog.ILogger.ForContext(System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher})
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_ForContext_System_Collections_Generic_IEnumerable_Serilog_Core_ILogEventEnricher__
  name: ForContext(IEnumerable<ILogEventEnricher>)
  nameWithType: ILogger.ForContext(IEnumerable<ILogEventEnricher>)
  fullName: Serilog.ILogger.ForContext(System.Collections.Generic.IEnumerable<Serilog.Core.ILogEventEnricher>)
  nameWithType.vb: ILogger.ForContext(IEnumerable(Of ILogEventEnricher))
  fullName.vb: Serilog.ILogger.ForContext(System.Collections.Generic.IEnumerable(Of Serilog.Core.ILogEventEnricher))
  name.vb: ForContext(IEnumerable(Of ILogEventEnricher))
  spec.csharp:
  - uid: Serilog.ILogger.ForContext(System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher})
    name: ForContext
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_ForContext_System_Collections_Generic_IEnumerable_Serilog_Core_ILogEventEnricher__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Serilog.Core.ILogEventEnricher
    name: ILogEventEnricher
    isExternal: true
    href: Serilog.Core.ILogEventEnricher.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.ForContext(System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher})
    name: ForContext
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_ForContext_System_Collections_Generic_IEnumerable_Serilog_Core_ILogEventEnricher__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Serilog.Core.ILogEventEnricher
    name: ILogEventEnricher
    isExternal: true
    href: Serilog.Core.ILogEventEnricher.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher}
  commentId: T:System.Collections.Generic.IEnumerable{Serilog.Core.ILogEventEnricher}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ILogEventEnricher>
  nameWithType: IEnumerable<ILogEventEnricher>
  fullName: System.Collections.Generic.IEnumerable<Serilog.Core.ILogEventEnricher>
  nameWithType.vb: IEnumerable(Of ILogEventEnricher)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Serilog.Core.ILogEventEnricher)
  name.vb: IEnumerable(Of ILogEventEnricher)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Serilog.Core.ILogEventEnricher
    name: ILogEventEnricher
    isExternal: true
    href: Serilog.Core.ILogEventEnricher.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Serilog.Core.ILogEventEnricher
    name: ILogEventEnricher
    isExternal: true
    href: Serilog.Core.ILogEventEnricher.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Serilog.ILogger.ForContext(System.String,System.Object,System.Boolean)
  commentId: M:Serilog.ILogger.ForContext(System.String,System.Object,System.Boolean)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_ForContext_System_String_System_Object_System_Boolean_
  name: ForContext(string, object, bool)
  nameWithType: ILogger.ForContext(string, object, bool)
  fullName: Serilog.ILogger.ForContext(string, object, bool)
  nameWithType.vb: ILogger.ForContext(String, Object, Boolean)
  fullName.vb: Serilog.ILogger.ForContext(String, Object, Boolean)
  name.vb: ForContext(String, Object, Boolean)
  spec.csharp:
  - uid: Serilog.ILogger.ForContext(System.String,System.Object,System.Boolean)
    name: ForContext
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_ForContext_System_String_System_Object_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.ForContext(System.String,System.Object,System.Boolean)
    name: ForContext
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_ForContext_System_String_System_Object_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Serilog.ILogger.ForContext(System.Type)
  commentId: M:Serilog.ILogger.ForContext(System.Type)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_ForContext_System_Type_
  name: ForContext(Type)
  nameWithType: ILogger.ForContext(Type)
  fullName: Serilog.ILogger.ForContext(System.Type)
  spec.csharp:
  - uid: Serilog.ILogger.ForContext(System.Type)
    name: ForContext
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_ForContext_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.ForContext(System.Type)
    name: ForContext
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_ForContext_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Serilog.ILogger.ForContext``1
  commentId: M:Serilog.ILogger.ForContext``1
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_ForContext__1
  name: ForContext<TSource>()
  nameWithType: ILogger.ForContext<TSource>()
  fullName: Serilog.ILogger.ForContext<TSource>()
  nameWithType.vb: ILogger.ForContext(Of TSource)()
  fullName.vb: Serilog.ILogger.ForContext(Of TSource)()
  name.vb: ForContext(Of TSource)()
  spec.csharp:
  - uid: Serilog.ILogger.ForContext``1
    name: ForContext
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_ForContext__1
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.ForContext``1
    name: ForContext
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_ForContext__1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - name: )
- uid: Serilog.Core.Logger.Write*
  commentId: Overload:Serilog.Core.Logger.Write
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_Write_Serilog_Events_LogEventLevel_System_String_
  name: Write
  nameWithType: Logger.Write
  fullName: Serilog.Core.Logger.Write
- uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.String)
  commentId: M:Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_String_
  name: Write(LogEventLevel, string)
  nameWithType: ILogger.Write(LogEventLevel, string)
  fullName: Serilog.ILogger.Write(Serilog.Events.LogEventLevel, string)
  nameWithType.vb: ILogger.Write(LogEventLevel, String)
  fullName.vb: Serilog.ILogger.Write(Serilog.Events.LogEventLevel, String)
  name.vb: Write(LogEventLevel, String)
  spec.csharp:
  - uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.String)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_String_
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.String)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_String_
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.Events.LogEventLevel
  commentId: T:Serilog.Events.LogEventLevel
  parent: Serilog.Events
  isExternal: true
  href: Serilog.Events.LogEventLevel.html
  name: LogEventLevel
  nameWithType: LogEventLevel
  fullName: Serilog.Events.LogEventLevel
- uid: Serilog.Events
  commentId: N:Serilog.Events
  isExternal: true
  href: Serilog.html
  name: Serilog.Events
  nameWithType: Serilog.Events
  fullName: Serilog.Events
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Events
    name: Events
    isExternal: true
    href: Serilog.Events.html
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Events
    name: Events
    isExternal: true
    href: Serilog.Events.html
- uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.String,{T})
  commentId: M:Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_String___0_
  name: Write<T>(LogEventLevel, string, T)
  nameWithType: ILogger.Write<T>(LogEventLevel, string, T)
  fullName: Serilog.ILogger.Write<T>(Serilog.Events.LogEventLevel, string, T)
  nameWithType.vb: ILogger.Write(Of T)(LogEventLevel, String, T)
  fullName.vb: Serilog.ILogger.Write(Of T)(Serilog.Events.LogEventLevel, String, T)
  name.vb: Write(Of T)(LogEventLevel, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
  commentId: M:Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_String___0_
  name: Write<T>(LogEventLevel, string, T)
  nameWithType: ILogger.Write<T>(LogEventLevel, string, T)
  fullName: Serilog.ILogger.Write<T>(Serilog.Events.LogEventLevel, string, T)
  nameWithType.vb: ILogger.Write(Of T)(LogEventLevel, String, T)
  fullName.vb: Serilog.ILogger.Write(Of T)(Serilog.Events.LogEventLevel, String, T)
  name.vb: Write(Of T)(LogEventLevel, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.String,``0)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_String___0___1_
  name: Write<T0, T1>(LogEventLevel, string, T0, T1)
  nameWithType: ILogger.Write<T0, T1>(LogEventLevel, string, T0, T1)
  fullName: Serilog.ILogger.Write<T0, T1>(Serilog.Events.LogEventLevel, string, T0, T1)
  nameWithType.vb: ILogger.Write(Of T0, T1)(LogEventLevel, String, T0, T1)
  fullName.vb: Serilog.ILogger.Write(Of T0, T1)(Serilog.Events.LogEventLevel, String, T0, T1)
  name.vb: Write(Of T0, T1)(LogEventLevel, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: '{T0}'
  commentId: '!:T0'
  definition: T0
  name: T0
  nameWithType: T0
  fullName: T0
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
  commentId: M:Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_String___0___1_
  name: Write<T0, T1>(LogEventLevel, string, T0, T1)
  nameWithType: ILogger.Write<T0, T1>(LogEventLevel, string, T0, T1)
  fullName: Serilog.ILogger.Write<T0, T1>(Serilog.Events.LogEventLevel, string, T0, T1)
  nameWithType.vb: ILogger.Write(Of T0, T1)(LogEventLevel, String, T0, T1)
  fullName.vb: Serilog.ILogger.Write(Of T0, T1)(Serilog.Events.LogEventLevel, String, T0, T1)
  name.vb: Write(Of T0, T1)(LogEventLevel, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.String,``0,``1)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: T0
  name: T0
  nameWithType: T0
  fullName: T0
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_String___0___1___2_
  name: Write<T0, T1, T2>(LogEventLevel, string, T0, T1, T2)
  nameWithType: ILogger.Write<T0, T1, T2>(LogEventLevel, string, T0, T1, T2)
  fullName: Serilog.ILogger.Write<T0, T1, T2>(Serilog.Events.LogEventLevel, string, T0, T1, T2)
  nameWithType.vb: ILogger.Write(Of T0, T1, T2)(LogEventLevel, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Write(Of T0, T1, T2)(Serilog.Events.LogEventLevel, String, T0, T1, T2)
  name.vb: Write(Of T0, T1, T2)(LogEventLevel, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_String___0___1___2_
  name: Write<T0, T1, T2>(LogEventLevel, string, T0, T1, T2)
  nameWithType: ILogger.Write<T0, T1, T2>(LogEventLevel, string, T0, T1, T2)
  fullName: Serilog.ILogger.Write<T0, T1, T2>(Serilog.Events.LogEventLevel, string, T0, T1, T2)
  nameWithType.vb: ILogger.Write(Of T0, T1, T2)(LogEventLevel, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Write(Of T0, T1, T2)(Serilog.Events.LogEventLevel, String, T0, T1, T2)
  name.vb: Write(Of T0, T1, T2)(LogEventLevel, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.String,``0,``1,``2)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.String,System.Object[])
  commentId: M:Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_String_System_Object___
  name: Write(LogEventLevel, string, params object[])
  nameWithType: ILogger.Write(LogEventLevel, string, params object[])
  fullName: Serilog.ILogger.Write(Serilog.Events.LogEventLevel, string, params object[])
  nameWithType.vb: ILogger.Write(LogEventLevel, String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Write(Serilog.Events.LogEventLevel, String, ParamArray Object())
  name.vb: Write(LogEventLevel, String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.String,System.Object[])
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_String_System_Object___
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.String,System.Object[])
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_String_System_Object___
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Serilog.Core.Logger.IsEnabled*
  commentId: Overload:Serilog.Core.Logger.IsEnabled
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_IsEnabled_Serilog_Events_LogEventLevel_
  name: IsEnabled
  nameWithType: Logger.IsEnabled
  fullName: Serilog.Core.Logger.IsEnabled
- uid: Serilog.ILogger.IsEnabled(Serilog.Events.LogEventLevel)
  commentId: M:Serilog.ILogger.IsEnabled(Serilog.Events.LogEventLevel)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_IsEnabled_Serilog_Events_LogEventLevel_
  name: IsEnabled(LogEventLevel)
  nameWithType: ILogger.IsEnabled(LogEventLevel)
  fullName: Serilog.ILogger.IsEnabled(Serilog.Events.LogEventLevel)
  spec.csharp:
  - uid: Serilog.ILogger.IsEnabled(Serilog.Events.LogEventLevel)
    name: IsEnabled
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_IsEnabled_Serilog_Events_LogEventLevel_
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.IsEnabled(Serilog.Events.LogEventLevel)
    name: IsEnabled
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_IsEnabled_Serilog_Events_LogEventLevel_
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: )
- uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String)
  commentId: M:Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_Exception_System_String_
  name: Write(LogEventLevel, Exception, string)
  nameWithType: ILogger.Write(LogEventLevel, Exception, string)
  fullName: Serilog.ILogger.Write(Serilog.Events.LogEventLevel, System.Exception, string)
  nameWithType.vb: ILogger.Write(LogEventLevel, Exception, String)
  fullName.vb: Serilog.ILogger.Write(Serilog.Events.LogEventLevel, System.Exception, String)
  name.vb: Write(LogEventLevel, Exception, String)
  spec.csharp:
  - uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_Exception_System_String_
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_Exception_System_String_
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,{T})
  commentId: M:Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_Exception_System_String___0_
  name: Write<T>(LogEventLevel, Exception, string, T)
  nameWithType: ILogger.Write<T>(LogEventLevel, Exception, string, T)
  fullName: Serilog.ILogger.Write<T>(Serilog.Events.LogEventLevel, System.Exception, string, T)
  nameWithType.vb: ILogger.Write(Of T)(LogEventLevel, Exception, String, T)
  fullName.vb: Serilog.ILogger.Write(Of T)(Serilog.Events.LogEventLevel, System.Exception, String, T)
  name.vb: Write(Of T)(LogEventLevel, Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
  commentId: M:Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_Exception_System_String___0_
  name: Write<T>(LogEventLevel, Exception, string, T)
  nameWithType: ILogger.Write<T>(LogEventLevel, Exception, string, T)
  fullName: Serilog.ILogger.Write<T>(Serilog.Events.LogEventLevel, System.Exception, string, T)
  nameWithType.vb: ILogger.Write(Of T)(LogEventLevel, Exception, String, T)
  fullName.vb: Serilog.ILogger.Write(Of T)(Serilog.Events.LogEventLevel, System.Exception, String, T)
  name.vb: Write(Of T)(LogEventLevel, Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``1(Serilog.Events.LogEventLevel,System.Exception,System.String,``0)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__1_Serilog_Events_LogEventLevel_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1_
  name: Write<T0, T1>(LogEventLevel, Exception, string, T0, T1)
  nameWithType: ILogger.Write<T0, T1>(LogEventLevel, Exception, string, T0, T1)
  fullName: Serilog.ILogger.Write<T0, T1>(Serilog.Events.LogEventLevel, System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Write(Of T0, T1)(LogEventLevel, Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Write(Of T0, T1)(Serilog.Events.LogEventLevel, System.Exception, String, T0, T1)
  name.vb: Write(Of T0, T1)(LogEventLevel, Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
  commentId: M:Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1_
  name: Write<T0, T1>(LogEventLevel, Exception, string, T0, T1)
  nameWithType: ILogger.Write<T0, T1>(LogEventLevel, Exception, string, T0, T1)
  fullName: Serilog.ILogger.Write<T0, T1>(Serilog.Events.LogEventLevel, System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Write(Of T0, T1)(LogEventLevel, Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Write(Of T0, T1)(Serilog.Events.LogEventLevel, System.Exception, String, T0, T1)
  name.vb: Write(Of T0, T1)(LogEventLevel, Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``2(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__2_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1___2_
  name: Write<T0, T1, T2>(LogEventLevel, Exception, string, T0, T1, T2)
  nameWithType: ILogger.Write<T0, T1, T2>(LogEventLevel, Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Write<T0, T1, T2>(Serilog.Events.LogEventLevel, System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Write(Of T0, T1, T2)(LogEventLevel, Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Write(Of T0, T1, T2)(Serilog.Events.LogEventLevel, System.Exception, String, T0, T1, T2)
  name.vb: Write(Of T0, T1, T2)(LogEventLevel, Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1___2_
  name: Write<T0, T1, T2>(LogEventLevel, Exception, string, T0, T1, T2)
  nameWithType: ILogger.Write<T0, T1, T2>(LogEventLevel, Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Write<T0, T1, T2>(Serilog.Events.LogEventLevel, System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Write(Of T0, T1, T2)(LogEventLevel, Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Write(Of T0, T1, T2)(Serilog.Events.LogEventLevel, System.Exception, String, T0, T1, T2)
  name.vb: Write(Of T0, T1, T2)(LogEventLevel, Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write``3(Serilog.Events.LogEventLevel,System.Exception,System.String,``0,``1,``2)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write__3_Serilog_Events_LogEventLevel_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String,System.Object[])
  commentId: M:Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_Exception_System_String_System_Object___
  name: Write(LogEventLevel, Exception, string, params object[])
  nameWithType: ILogger.Write(LogEventLevel, Exception, string, params object[])
  fullName: Serilog.ILogger.Write(Serilog.Events.LogEventLevel, System.Exception, string, params object[])
  nameWithType.vb: ILogger.Write(LogEventLevel, Exception, String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Write(Serilog.Events.LogEventLevel, System.Exception, String, ParamArray Object())
  name.vb: Write(LogEventLevel, Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String,System.Object[])
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_Exception_System_String_System_Object___
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write(Serilog.Events.LogEventLevel,System.Exception,System.String,System.Object[])
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEventLevel_System_Exception_System_String_System_Object___
  - name: (
  - uid: Serilog.Events.LogEventLevel
    name: LogEventLevel
    isExternal: true
    href: Serilog.Events.LogEventLevel.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.ILogger.Write(Serilog.Events.LogEvent)
  commentId: M:Serilog.ILogger.Write(Serilog.Events.LogEvent)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEvent_
  name: Write(LogEvent)
  nameWithType: ILogger.Write(LogEvent)
  fullName: Serilog.ILogger.Write(Serilog.Events.LogEvent)
  spec.csharp:
  - uid: Serilog.ILogger.Write(Serilog.Events.LogEvent)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEvent_
  - name: (
  - uid: Serilog.Events.LogEvent
    name: LogEvent
    isExternal: true
    href: Serilog.Events.LogEvent.html
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Write(Serilog.Events.LogEvent)
    name: Write
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Write_Serilog_Events_LogEvent_
  - name: (
  - uid: Serilog.Events.LogEvent
    name: LogEvent
    isExternal: true
    href: Serilog.Events.LogEvent.html
  - name: )
- uid: Serilog.Events.LogEvent
  commentId: T:Serilog.Events.LogEvent
  parent: Serilog.Events
  isExternal: true
  href: Serilog.Events.LogEvent.html
  name: LogEvent
  nameWithType: LogEvent
  fullName: Serilog.Events.LogEvent
- uid: Serilog.Events.LogEventLevel.Verbose
  commentId: F:Serilog.Events.LogEventLevel.Verbose
  isExternal: true
  href: Serilog.Events.LogEventLevel.html#Serilog_Events_LogEventLevel_Verbose
  name: Verbose
  nameWithType: LogEventLevel.Verbose
  fullName: Serilog.Events.LogEventLevel.Verbose
- uid: Serilog.Core.Logger.Verbose*
  commentId: Overload:Serilog.Core.Logger.Verbose
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_Verbose_System_String_
  name: Verbose
  nameWithType: Logger.Verbose
  fullName: Serilog.Core.Logger.Verbose
- uid: Serilog.ILogger.Verbose(System.String)
  commentId: M:Serilog.ILogger.Verbose(System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_String_
  name: Verbose(string)
  nameWithType: ILogger.Verbose(string)
  fullName: Serilog.ILogger.Verbose(string)
  nameWithType.vb: ILogger.Verbose(String)
  fullName.vb: Serilog.ILogger.Verbose(String)
  name.vb: Verbose(String)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose(System.String)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose(System.String)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Verbose``1(System.String,{T})
  commentId: M:Serilog.ILogger.Verbose``1(System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Verbose``1(System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_String___0_
  name: Verbose<T>(string, T)
  nameWithType: ILogger.Verbose<T>(string, T)
  fullName: Serilog.ILogger.Verbose<T>(string, T)
  nameWithType.vb: ILogger.Verbose(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Verbose(Of T)(String, T)
  name.vb: Verbose(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``1(System.String,``0)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``1(System.String,``0)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Verbose``1(System.String,``0)
  commentId: M:Serilog.ILogger.Verbose``1(System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_String___0_
  name: Verbose<T>(string, T)
  nameWithType: ILogger.Verbose<T>(string, T)
  fullName: Serilog.ILogger.Verbose<T>(string, T)
  nameWithType.vb: ILogger.Verbose(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Verbose(Of T)(String, T)
  name.vb: Verbose(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``1(System.String,``0)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``1(System.String,``0)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Verbose``2(System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Verbose``2(System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Verbose``2(System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_String___0___1_
  name: Verbose<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Verbose<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Verbose<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Verbose(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Verbose(Of T0, T1)(String, T0, T1)
  name.vb: Verbose(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``2(System.String,``0,``1)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``2(System.String,``0,``1)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Verbose``2(System.String,``0,``1)
  commentId: M:Serilog.ILogger.Verbose``2(System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_String___0___1_
  name: Verbose<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Verbose<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Verbose<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Verbose(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Verbose(Of T0, T1)(String, T0, T1)
  name.vb: Verbose(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``2(System.String,``0,``1)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``2(System.String,``0,``1)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Verbose``3(System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Verbose``3(System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Verbose``3(System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_String___0___1___2_
  name: Verbose<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Verbose<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Verbose<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Verbose(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Verbose(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Verbose(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``3(System.String,``0,``1,``2)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``3(System.String,``0,``1,``2)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Verbose``3(System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Verbose``3(System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_String___0___1___2_
  name: Verbose<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Verbose<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Verbose<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Verbose(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Verbose(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Verbose(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``3(System.String,``0,``1,``2)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``3(System.String,``0,``1,``2)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Verbose(System.String,System.Object[])
  commentId: M:Serilog.ILogger.Verbose(System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_String_System_Object___
  name: Verbose(string, params object[])
  nameWithType: ILogger.Verbose(string, params object[])
  fullName: Serilog.ILogger.Verbose(string, params object[])
  nameWithType.vb: ILogger.Verbose(String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Verbose(String, ParamArray Object())
  name.vb: Verbose(String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Verbose(System.String,System.Object[])
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose(System.String,System.Object[])
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.ILogger.Verbose(System.Exception,System.String)
  commentId: M:Serilog.ILogger.Verbose(System.Exception,System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_Exception_System_String_
  name: Verbose(Exception, string)
  nameWithType: ILogger.Verbose(Exception, string)
  fullName: Serilog.ILogger.Verbose(System.Exception, string)
  nameWithType.vb: ILogger.Verbose(Exception, String)
  fullName.vb: Serilog.ILogger.Verbose(System.Exception, String)
  name.vb: Verbose(Exception, String)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose(System.Exception,System.String)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose(System.Exception,System.String)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Verbose``1(System.Exception,System.String,{T})
  commentId: M:Serilog.ILogger.Verbose``1(System.Exception,System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Verbose``1(System.Exception,System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_Exception_System_String___0_
  name: Verbose<T>(Exception, string, T)
  nameWithType: ILogger.Verbose<T>(Exception, string, T)
  fullName: Serilog.ILogger.Verbose<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Verbose(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Verbose(Of T)(System.Exception, String, T)
  name.vb: Verbose(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``1(System.Exception,System.String,``0)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``1(System.Exception,System.String,``0)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Verbose``1(System.Exception,System.String,``0)
  commentId: M:Serilog.ILogger.Verbose``1(System.Exception,System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_Exception_System_String___0_
  name: Verbose<T>(Exception, string, T)
  nameWithType: ILogger.Verbose<T>(Exception, string, T)
  fullName: Serilog.ILogger.Verbose<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Verbose(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Verbose(Of T)(System.Exception, String, T)
  name.vb: Verbose(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``1(System.Exception,System.String,``0)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``1(System.Exception,System.String,``0)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Verbose``2(System.Exception,System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Verbose``2(System.Exception,System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Verbose``2(System.Exception,System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_Exception_System_String___0___1_
  name: Verbose<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Verbose<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Verbose<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Verbose(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Verbose(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Verbose(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``2(System.Exception,System.String,``0,``1)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``2(System.Exception,System.String,``0,``1)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Verbose``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.ILogger.Verbose``2(System.Exception,System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_Exception_System_String___0___1_
  name: Verbose<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Verbose<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Verbose<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Verbose(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Verbose(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Verbose(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``2(System.Exception,System.String,``0,``1)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``2(System.Exception,System.String,``0,``1)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Verbose``3(System.Exception,System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Verbose``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Verbose``3(System.Exception,System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_Exception_System_String___0___1___2_
  name: Verbose<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Verbose<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Verbose<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Verbose(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Verbose(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Verbose(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``3(System.Exception,System.String,``0,``1,``2)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``3(System.Exception,System.String,``0,``1,``2)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Verbose``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Verbose``3(System.Exception,System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_Exception_System_String___0___1___2_
  name: Verbose<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Verbose<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Verbose<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Verbose(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Verbose(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Verbose(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Verbose``3(System.Exception,System.String,``0,``1,``2)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose``3(System.Exception,System.String,``0,``1,``2)
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Verbose(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.ILogger.Verbose(System.Exception,System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_Exception_System_String_System_Object___
  name: Verbose(Exception, string, params object[])
  nameWithType: ILogger.Verbose(Exception, string, params object[])
  fullName: Serilog.ILogger.Verbose(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Verbose(Exception, String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Verbose(System.Exception, String, ParamArray Object())
  name.vb: Verbose(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Verbose(System.Exception,System.String,System.Object[])
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Verbose(System.Exception,System.String,System.Object[])
    name: Verbose
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Verbose_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.Events.LogEventLevel.Debug
  commentId: F:Serilog.Events.LogEventLevel.Debug
  isExternal: true
  href: Serilog.Events.LogEventLevel.html#Serilog_Events_LogEventLevel_Debug
  name: Debug
  nameWithType: LogEventLevel.Debug
  fullName: Serilog.Events.LogEventLevel.Debug
- uid: Serilog.Core.Logger.Debug*
  commentId: Overload:Serilog.Core.Logger.Debug
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_Debug_System_String_
  name: Debug
  nameWithType: Logger.Debug
  fullName: Serilog.Core.Logger.Debug
- uid: Serilog.ILogger.Debug(System.String)
  commentId: M:Serilog.ILogger.Debug(System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_String_
  name: Debug(string)
  nameWithType: ILogger.Debug(string)
  fullName: Serilog.ILogger.Debug(string)
  nameWithType.vb: ILogger.Debug(String)
  fullName.vb: Serilog.ILogger.Debug(String)
  name.vb: Debug(String)
  spec.csharp:
  - uid: Serilog.ILogger.Debug(System.String)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug(System.String)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Debug``1(System.String,{T})
  commentId: M:Serilog.ILogger.Debug``1(System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Debug``1(System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_String___0_
  name: Debug<T>(string, T)
  nameWithType: ILogger.Debug<T>(string, T)
  fullName: Serilog.ILogger.Debug<T>(string, T)
  nameWithType.vb: ILogger.Debug(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Debug(Of T)(String, T)
  name.vb: Debug(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``1(System.String,``0)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``1(System.String,``0)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Debug``1(System.String,``0)
  commentId: M:Serilog.ILogger.Debug``1(System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_String___0_
  name: Debug<T>(string, T)
  nameWithType: ILogger.Debug<T>(string, T)
  fullName: Serilog.ILogger.Debug<T>(string, T)
  nameWithType.vb: ILogger.Debug(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Debug(Of T)(String, T)
  name.vb: Debug(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``1(System.String,``0)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``1(System.String,``0)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Debug``2(System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Debug``2(System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Debug``2(System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_String___0___1_
  name: Debug<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Debug<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Debug<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Debug(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Debug(Of T0, T1)(String, T0, T1)
  name.vb: Debug(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``2(System.String,``0,``1)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``2(System.String,``0,``1)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Debug``2(System.String,``0,``1)
  commentId: M:Serilog.ILogger.Debug``2(System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_String___0___1_
  name: Debug<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Debug<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Debug<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Debug(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Debug(Of T0, T1)(String, T0, T1)
  name.vb: Debug(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``2(System.String,``0,``1)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``2(System.String,``0,``1)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Debug``3(System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Debug``3(System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Debug``3(System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_String___0___1___2_
  name: Debug<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Debug<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Debug<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Debug(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Debug(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Debug(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``3(System.String,``0,``1,``2)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``3(System.String,``0,``1,``2)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Debug``3(System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Debug``3(System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_String___0___1___2_
  name: Debug<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Debug<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Debug<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Debug(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Debug(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Debug(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``3(System.String,``0,``1,``2)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``3(System.String,``0,``1,``2)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Debug(System.String,System.Object[])
  commentId: M:Serilog.ILogger.Debug(System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_String_System_Object___
  name: Debug(string, params object[])
  nameWithType: ILogger.Debug(string, params object[])
  fullName: Serilog.ILogger.Debug(string, params object[])
  nameWithType.vb: ILogger.Debug(String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Debug(String, ParamArray Object())
  name.vb: Debug(String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Debug(System.String,System.Object[])
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug(System.String,System.Object[])
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.ILogger.Debug(System.Exception,System.String)
  commentId: M:Serilog.ILogger.Debug(System.Exception,System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_Exception_System_String_
  name: Debug(Exception, string)
  nameWithType: ILogger.Debug(Exception, string)
  fullName: Serilog.ILogger.Debug(System.Exception, string)
  nameWithType.vb: ILogger.Debug(Exception, String)
  fullName.vb: Serilog.ILogger.Debug(System.Exception, String)
  name.vb: Debug(Exception, String)
  spec.csharp:
  - uid: Serilog.ILogger.Debug(System.Exception,System.String)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug(System.Exception,System.String)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Debug``1(System.Exception,System.String,{T})
  commentId: M:Serilog.ILogger.Debug``1(System.Exception,System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Debug``1(System.Exception,System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_Exception_System_String___0_
  name: Debug<T>(Exception, string, T)
  nameWithType: ILogger.Debug<T>(Exception, string, T)
  fullName: Serilog.ILogger.Debug<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Debug(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Debug(Of T)(System.Exception, String, T)
  name.vb: Debug(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``1(System.Exception,System.String,``0)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``1(System.Exception,System.String,``0)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Debug``1(System.Exception,System.String,``0)
  commentId: M:Serilog.ILogger.Debug``1(System.Exception,System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_Exception_System_String___0_
  name: Debug<T>(Exception, string, T)
  nameWithType: ILogger.Debug<T>(Exception, string, T)
  fullName: Serilog.ILogger.Debug<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Debug(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Debug(Of T)(System.Exception, String, T)
  name.vb: Debug(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``1(System.Exception,System.String,``0)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``1(System.Exception,System.String,``0)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Debug``2(System.Exception,System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Debug``2(System.Exception,System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Debug``2(System.Exception,System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_Exception_System_String___0___1_
  name: Debug<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Debug<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Debug<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Debug(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Debug(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Debug(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``2(System.Exception,System.String,``0,``1)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``2(System.Exception,System.String,``0,``1)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Debug``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.ILogger.Debug``2(System.Exception,System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_Exception_System_String___0___1_
  name: Debug<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Debug<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Debug<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Debug(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Debug(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Debug(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``2(System.Exception,System.String,``0,``1)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``2(System.Exception,System.String,``0,``1)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Debug``3(System.Exception,System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Debug``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Debug``3(System.Exception,System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_Exception_System_String___0___1___2_
  name: Debug<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Debug<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Debug<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Debug(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Debug(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Debug(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``3(System.Exception,System.String,``0,``1,``2)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``3(System.Exception,System.String,``0,``1,``2)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Debug``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Debug``3(System.Exception,System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_Exception_System_String___0___1___2_
  name: Debug<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Debug<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Debug<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Debug(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Debug(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Debug(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Debug``3(System.Exception,System.String,``0,``1,``2)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug``3(System.Exception,System.String,``0,``1,``2)
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Debug(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.ILogger.Debug(System.Exception,System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_Exception_System_String_System_Object___
  name: Debug(Exception, string, params object[])
  nameWithType: ILogger.Debug(Exception, string, params object[])
  fullName: Serilog.ILogger.Debug(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Debug(Exception, String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Debug(System.Exception, String, ParamArray Object())
  name.vb: Debug(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Debug(System.Exception,System.String,System.Object[])
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Debug(System.Exception,System.String,System.Object[])
    name: Debug
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Debug_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.Events.LogEventLevel.Information
  commentId: F:Serilog.Events.LogEventLevel.Information
  isExternal: true
  href: Serilog.Events.LogEventLevel.html#Serilog_Events_LogEventLevel_Information
  name: Information
  nameWithType: LogEventLevel.Information
  fullName: Serilog.Events.LogEventLevel.Information
- uid: Serilog.Core.Logger.Information*
  commentId: Overload:Serilog.Core.Logger.Information
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_Information_System_String_
  name: Information
  nameWithType: Logger.Information
  fullName: Serilog.Core.Logger.Information
- uid: Serilog.ILogger.Information(System.String)
  commentId: M:Serilog.ILogger.Information(System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Information_System_String_
  name: Information(string)
  nameWithType: ILogger.Information(string)
  fullName: Serilog.ILogger.Information(string)
  nameWithType.vb: ILogger.Information(String)
  fullName.vb: Serilog.ILogger.Information(String)
  name.vb: Information(String)
  spec.csharp:
  - uid: Serilog.ILogger.Information(System.String)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information(System.String)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Information``1(System.String,{T})
  commentId: M:Serilog.ILogger.Information``1(System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Information``1(System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_String___0_
  name: Information<T>(string, T)
  nameWithType: ILogger.Information<T>(string, T)
  fullName: Serilog.ILogger.Information<T>(string, T)
  nameWithType.vb: ILogger.Information(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Information(Of T)(String, T)
  name.vb: Information(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Information``1(System.String,``0)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``1(System.String,``0)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Information``1(System.String,``0)
  commentId: M:Serilog.ILogger.Information``1(System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_String___0_
  name: Information<T>(string, T)
  nameWithType: ILogger.Information<T>(string, T)
  fullName: Serilog.ILogger.Information<T>(string, T)
  nameWithType.vb: ILogger.Information(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Information(Of T)(String, T)
  name.vb: Information(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Information``1(System.String,``0)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``1(System.String,``0)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Information``2(System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Information``2(System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Information``2(System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_String___0___1_
  name: Information<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Information<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Information<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Information(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Information(Of T0, T1)(String, T0, T1)
  name.vb: Information(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Information``2(System.String,``0,``1)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``2(System.String,``0,``1)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Information``2(System.String,``0,``1)
  commentId: M:Serilog.ILogger.Information``2(System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_String___0___1_
  name: Information<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Information<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Information<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Information(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Information(Of T0, T1)(String, T0, T1)
  name.vb: Information(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Information``2(System.String,``0,``1)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``2(System.String,``0,``1)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Information``3(System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Information``3(System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Information``3(System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_String___0___1___2_
  name: Information<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Information<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Information<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Information(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Information(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Information(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Information``3(System.String,``0,``1,``2)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``3(System.String,``0,``1,``2)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Information``3(System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Information``3(System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_String___0___1___2_
  name: Information<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Information<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Information<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Information(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Information(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Information(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Information``3(System.String,``0,``1,``2)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``3(System.String,``0,``1,``2)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Information(System.String,System.Object[])
  commentId: M:Serilog.ILogger.Information(System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Information_System_String_System_Object___
  name: Information(string, params object[])
  nameWithType: ILogger.Information(string, params object[])
  fullName: Serilog.ILogger.Information(string, params object[])
  nameWithType.vb: ILogger.Information(String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Information(String, ParamArray Object())
  name.vb: Information(String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Information(System.String,System.Object[])
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information(System.String,System.Object[])
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.ILogger.Information(System.Exception,System.String)
  commentId: M:Serilog.ILogger.Information(System.Exception,System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Information_System_Exception_System_String_
  name: Information(Exception, string)
  nameWithType: ILogger.Information(Exception, string)
  fullName: Serilog.ILogger.Information(System.Exception, string)
  nameWithType.vb: ILogger.Information(Exception, String)
  fullName.vb: Serilog.ILogger.Information(System.Exception, String)
  name.vb: Information(Exception, String)
  spec.csharp:
  - uid: Serilog.ILogger.Information(System.Exception,System.String)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information(System.Exception,System.String)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Information``1(System.Exception,System.String,{T})
  commentId: M:Serilog.ILogger.Information``1(System.Exception,System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Information``1(System.Exception,System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_Exception_System_String___0_
  name: Information<T>(Exception, string, T)
  nameWithType: ILogger.Information<T>(Exception, string, T)
  fullName: Serilog.ILogger.Information<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Information(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Information(Of T)(System.Exception, String, T)
  name.vb: Information(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Information``1(System.Exception,System.String,``0)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``1(System.Exception,System.String,``0)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Information``1(System.Exception,System.String,``0)
  commentId: M:Serilog.ILogger.Information``1(System.Exception,System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_Exception_System_String___0_
  name: Information<T>(Exception, string, T)
  nameWithType: ILogger.Information<T>(Exception, string, T)
  fullName: Serilog.ILogger.Information<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Information(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Information(Of T)(System.Exception, String, T)
  name.vb: Information(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Information``1(System.Exception,System.String,``0)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``1(System.Exception,System.String,``0)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Information``2(System.Exception,System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Information``2(System.Exception,System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Information``2(System.Exception,System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_Exception_System_String___0___1_
  name: Information<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Information<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Information<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Information(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Information(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Information(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Information``2(System.Exception,System.String,``0,``1)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``2(System.Exception,System.String,``0,``1)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Information``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.ILogger.Information``2(System.Exception,System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_Exception_System_String___0___1_
  name: Information<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Information<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Information<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Information(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Information(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Information(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Information``2(System.Exception,System.String,``0,``1)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``2(System.Exception,System.String,``0,``1)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Information``3(System.Exception,System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Information``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Information``3(System.Exception,System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_Exception_System_String___0___1___2_
  name: Information<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Information<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Information<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Information(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Information(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Information(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Information``3(System.Exception,System.String,``0,``1,``2)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``3(System.Exception,System.String,``0,``1,``2)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Information``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Information``3(System.Exception,System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_Exception_System_String___0___1___2_
  name: Information<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Information<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Information<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Information(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Information(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Information(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Information``3(System.Exception,System.String,``0,``1,``2)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information``3(System.Exception,System.String,``0,``1,``2)
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Information(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.ILogger.Information(System.Exception,System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Information_System_Exception_System_String_System_Object___
  name: Information(Exception, string, params object[])
  nameWithType: ILogger.Information(Exception, string, params object[])
  fullName: Serilog.ILogger.Information(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Information(Exception, String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Information(System.Exception, String, ParamArray Object())
  name.vb: Information(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Information(System.Exception,System.String,System.Object[])
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Information(System.Exception,System.String,System.Object[])
    name: Information
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Information_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.Events.LogEventLevel.Warning
  commentId: F:Serilog.Events.LogEventLevel.Warning
  isExternal: true
  href: Serilog.Events.LogEventLevel.html#Serilog_Events_LogEventLevel_Warning
  name: Warning
  nameWithType: LogEventLevel.Warning
  fullName: Serilog.Events.LogEventLevel.Warning
- uid: Serilog.Core.Logger.Warning*
  commentId: Overload:Serilog.Core.Logger.Warning
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_Warning_System_String_
  name: Warning
  nameWithType: Logger.Warning
  fullName: Serilog.Core.Logger.Warning
- uid: Serilog.ILogger.Warning(System.String)
  commentId: M:Serilog.ILogger.Warning(System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_String_
  name: Warning(string)
  nameWithType: ILogger.Warning(string)
  fullName: Serilog.ILogger.Warning(string)
  nameWithType.vb: ILogger.Warning(String)
  fullName.vb: Serilog.ILogger.Warning(String)
  name.vb: Warning(String)
  spec.csharp:
  - uid: Serilog.ILogger.Warning(System.String)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning(System.String)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Warning``1(System.String,{T})
  commentId: M:Serilog.ILogger.Warning``1(System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Warning``1(System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_String___0_
  name: Warning<T>(string, T)
  nameWithType: ILogger.Warning<T>(string, T)
  fullName: Serilog.ILogger.Warning<T>(string, T)
  nameWithType.vb: ILogger.Warning(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Warning(Of T)(String, T)
  name.vb: Warning(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``1(System.String,``0)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``1(System.String,``0)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Warning``1(System.String,``0)
  commentId: M:Serilog.ILogger.Warning``1(System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_String___0_
  name: Warning<T>(string, T)
  nameWithType: ILogger.Warning<T>(string, T)
  fullName: Serilog.ILogger.Warning<T>(string, T)
  nameWithType.vb: ILogger.Warning(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Warning(Of T)(String, T)
  name.vb: Warning(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``1(System.String,``0)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``1(System.String,``0)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Warning``2(System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Warning``2(System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Warning``2(System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_String___0___1_
  name: Warning<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Warning<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Warning<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Warning(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Warning(Of T0, T1)(String, T0, T1)
  name.vb: Warning(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``2(System.String,``0,``1)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``2(System.String,``0,``1)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Warning``2(System.String,``0,``1)
  commentId: M:Serilog.ILogger.Warning``2(System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_String___0___1_
  name: Warning<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Warning<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Warning<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Warning(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Warning(Of T0, T1)(String, T0, T1)
  name.vb: Warning(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``2(System.String,``0,``1)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``2(System.String,``0,``1)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Warning``3(System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Warning``3(System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Warning``3(System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_String___0___1___2_
  name: Warning<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Warning<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Warning<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Warning(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Warning(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Warning(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``3(System.String,``0,``1,``2)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``3(System.String,``0,``1,``2)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Warning``3(System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Warning``3(System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_String___0___1___2_
  name: Warning<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Warning<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Warning<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Warning(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Warning(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Warning(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``3(System.String,``0,``1,``2)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``3(System.String,``0,``1,``2)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Warning(System.String,System.Object[])
  commentId: M:Serilog.ILogger.Warning(System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_String_System_Object___
  name: Warning(string, params object[])
  nameWithType: ILogger.Warning(string, params object[])
  fullName: Serilog.ILogger.Warning(string, params object[])
  nameWithType.vb: ILogger.Warning(String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Warning(String, ParamArray Object())
  name.vb: Warning(String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Warning(System.String,System.Object[])
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning(System.String,System.Object[])
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.ILogger.Warning(System.Exception,System.String)
  commentId: M:Serilog.ILogger.Warning(System.Exception,System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_Exception_System_String_
  name: Warning(Exception, string)
  nameWithType: ILogger.Warning(Exception, string)
  fullName: Serilog.ILogger.Warning(System.Exception, string)
  nameWithType.vb: ILogger.Warning(Exception, String)
  fullName.vb: Serilog.ILogger.Warning(System.Exception, String)
  name.vb: Warning(Exception, String)
  spec.csharp:
  - uid: Serilog.ILogger.Warning(System.Exception,System.String)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning(System.Exception,System.String)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Warning``1(System.Exception,System.String,{T})
  commentId: M:Serilog.ILogger.Warning``1(System.Exception,System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Warning``1(System.Exception,System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_Exception_System_String___0_
  name: Warning<T>(Exception, string, T)
  nameWithType: ILogger.Warning<T>(Exception, string, T)
  fullName: Serilog.ILogger.Warning<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Warning(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Warning(Of T)(System.Exception, String, T)
  name.vb: Warning(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``1(System.Exception,System.String,``0)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``1(System.Exception,System.String,``0)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Warning``1(System.Exception,System.String,``0)
  commentId: M:Serilog.ILogger.Warning``1(System.Exception,System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_Exception_System_String___0_
  name: Warning<T>(Exception, string, T)
  nameWithType: ILogger.Warning<T>(Exception, string, T)
  fullName: Serilog.ILogger.Warning<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Warning(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Warning(Of T)(System.Exception, String, T)
  name.vb: Warning(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``1(System.Exception,System.String,``0)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``1(System.Exception,System.String,``0)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Warning``2(System.Exception,System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Warning``2(System.Exception,System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Warning``2(System.Exception,System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_Exception_System_String___0___1_
  name: Warning<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Warning<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Warning<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Warning(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Warning(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Warning(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``2(System.Exception,System.String,``0,``1)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``2(System.Exception,System.String,``0,``1)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Warning``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.ILogger.Warning``2(System.Exception,System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_Exception_System_String___0___1_
  name: Warning<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Warning<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Warning<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Warning(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Warning(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Warning(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``2(System.Exception,System.String,``0,``1)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``2(System.Exception,System.String,``0,``1)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Warning``3(System.Exception,System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Warning``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Warning``3(System.Exception,System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_Exception_System_String___0___1___2_
  name: Warning<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Warning<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Warning<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Warning(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Warning(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Warning(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``3(System.Exception,System.String,``0,``1,``2)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``3(System.Exception,System.String,``0,``1,``2)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Warning``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Warning``3(System.Exception,System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_Exception_System_String___0___1___2_
  name: Warning<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Warning<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Warning<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Warning(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Warning(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Warning(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Warning``3(System.Exception,System.String,``0,``1,``2)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning``3(System.Exception,System.String,``0,``1,``2)
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Warning(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.ILogger.Warning(System.Exception,System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_Exception_System_String_System_Object___
  name: Warning(Exception, string, params object[])
  nameWithType: ILogger.Warning(Exception, string, params object[])
  fullName: Serilog.ILogger.Warning(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Warning(Exception, String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Warning(System.Exception, String, ParamArray Object())
  name.vb: Warning(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Warning(System.Exception,System.String,System.Object[])
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Warning(System.Exception,System.String,System.Object[])
    name: Warning
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Warning_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.Events.LogEventLevel.Error
  commentId: F:Serilog.Events.LogEventLevel.Error
  isExternal: true
  href: Serilog.Events.LogEventLevel.html#Serilog_Events_LogEventLevel_Error
  name: Error
  nameWithType: LogEventLevel.Error
  fullName: Serilog.Events.LogEventLevel.Error
- uid: Serilog.Core.Logger.Error*
  commentId: Overload:Serilog.Core.Logger.Error
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_Error_System_String_
  name: Error
  nameWithType: Logger.Error
  fullName: Serilog.Core.Logger.Error
- uid: Serilog.ILogger.Error(System.String)
  commentId: M:Serilog.ILogger.Error(System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Error_System_String_
  name: Error(string)
  nameWithType: ILogger.Error(string)
  fullName: Serilog.ILogger.Error(string)
  nameWithType.vb: ILogger.Error(String)
  fullName.vb: Serilog.ILogger.Error(String)
  name.vb: Error(String)
  spec.csharp:
  - uid: Serilog.ILogger.Error(System.String)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error(System.String)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Error``1(System.String,{T})
  commentId: M:Serilog.ILogger.Error``1(System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Error``1(System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_String___0_
  name: Error<T>(string, T)
  nameWithType: ILogger.Error<T>(string, T)
  fullName: Serilog.ILogger.Error<T>(string, T)
  nameWithType.vb: ILogger.Error(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Error(Of T)(String, T)
  name.vb: Error(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Error``1(System.String,``0)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``1(System.String,``0)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Error``1(System.String,``0)
  commentId: M:Serilog.ILogger.Error``1(System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_String___0_
  name: Error<T>(string, T)
  nameWithType: ILogger.Error<T>(string, T)
  fullName: Serilog.ILogger.Error<T>(string, T)
  nameWithType.vb: ILogger.Error(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Error(Of T)(String, T)
  name.vb: Error(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Error``1(System.String,``0)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``1(System.String,``0)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Error``2(System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Error``2(System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Error``2(System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_String___0___1_
  name: Error<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Error<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Error<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Error(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Error(Of T0, T1)(String, T0, T1)
  name.vb: Error(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Error``2(System.String,``0,``1)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``2(System.String,``0,``1)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Error``2(System.String,``0,``1)
  commentId: M:Serilog.ILogger.Error``2(System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_String___0___1_
  name: Error<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Error<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Error<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Error(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Error(Of T0, T1)(String, T0, T1)
  name.vb: Error(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Error``2(System.String,``0,``1)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``2(System.String,``0,``1)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Error``3(System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Error``3(System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Error``3(System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_String___0___1___2_
  name: Error<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Error<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Error<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Error(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Error(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Error(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Error``3(System.String,``0,``1,``2)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``3(System.String,``0,``1,``2)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Error``3(System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Error``3(System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_String___0___1___2_
  name: Error<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Error<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Error<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Error(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Error(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Error(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Error``3(System.String,``0,``1,``2)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``3(System.String,``0,``1,``2)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Error(System.String,System.Object[])
  commentId: M:Serilog.ILogger.Error(System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Error_System_String_System_Object___
  name: Error(string, params object[])
  nameWithType: ILogger.Error(string, params object[])
  fullName: Serilog.ILogger.Error(string, params object[])
  nameWithType.vb: ILogger.Error(String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Error(String, ParamArray Object())
  name.vb: Error(String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Error(System.String,System.Object[])
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error(System.String,System.Object[])
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.ILogger.Error(System.Exception,System.String)
  commentId: M:Serilog.ILogger.Error(System.Exception,System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Error_System_Exception_System_String_
  name: Error(Exception, string)
  nameWithType: ILogger.Error(Exception, string)
  fullName: Serilog.ILogger.Error(System.Exception, string)
  nameWithType.vb: ILogger.Error(Exception, String)
  fullName.vb: Serilog.ILogger.Error(System.Exception, String)
  name.vb: Error(Exception, String)
  spec.csharp:
  - uid: Serilog.ILogger.Error(System.Exception,System.String)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error(System.Exception,System.String)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Error``1(System.Exception,System.String,{T})
  commentId: M:Serilog.ILogger.Error``1(System.Exception,System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Error``1(System.Exception,System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_Exception_System_String___0_
  name: Error<T>(Exception, string, T)
  nameWithType: ILogger.Error<T>(Exception, string, T)
  fullName: Serilog.ILogger.Error<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Error(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Error(Of T)(System.Exception, String, T)
  name.vb: Error(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Error``1(System.Exception,System.String,``0)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``1(System.Exception,System.String,``0)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Error``1(System.Exception,System.String,``0)
  commentId: M:Serilog.ILogger.Error``1(System.Exception,System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_Exception_System_String___0_
  name: Error<T>(Exception, string, T)
  nameWithType: ILogger.Error<T>(Exception, string, T)
  fullName: Serilog.ILogger.Error<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Error(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Error(Of T)(System.Exception, String, T)
  name.vb: Error(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Error``1(System.Exception,System.String,``0)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``1(System.Exception,System.String,``0)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Error``2(System.Exception,System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Error``2(System.Exception,System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Error``2(System.Exception,System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_Exception_System_String___0___1_
  name: Error<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Error<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Error<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Error(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Error(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Error(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Error``2(System.Exception,System.String,``0,``1)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``2(System.Exception,System.String,``0,``1)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Error``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.ILogger.Error``2(System.Exception,System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_Exception_System_String___0___1_
  name: Error<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Error<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Error<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Error(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Error(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Error(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Error``2(System.Exception,System.String,``0,``1)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``2(System.Exception,System.String,``0,``1)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Error``3(System.Exception,System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Error``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Error``3(System.Exception,System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_Exception_System_String___0___1___2_
  name: Error<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Error<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Error<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Error(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Error(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Error(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Error``3(System.Exception,System.String,``0,``1,``2)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``3(System.Exception,System.String,``0,``1,``2)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Error``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Error``3(System.Exception,System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_Exception_System_String___0___1___2_
  name: Error<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Error<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Error<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Error(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Error(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Error(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Error``3(System.Exception,System.String,``0,``1,``2)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error``3(System.Exception,System.String,``0,``1,``2)
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Error(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.ILogger.Error(System.Exception,System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Error_System_Exception_System_String_System_Object___
  name: Error(Exception, string, params object[])
  nameWithType: ILogger.Error(Exception, string, params object[])
  fullName: Serilog.ILogger.Error(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Error(Exception, String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Error(System.Exception, String, ParamArray Object())
  name.vb: Error(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Error(System.Exception,System.String,System.Object[])
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Error(System.Exception,System.String,System.Object[])
    name: Error
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Error_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.Events.LogEventLevel.Fatal
  commentId: F:Serilog.Events.LogEventLevel.Fatal
  isExternal: true
  href: Serilog.Events.LogEventLevel.html#Serilog_Events_LogEventLevel_Fatal
  name: Fatal
  nameWithType: LogEventLevel.Fatal
  fullName: Serilog.Events.LogEventLevel.Fatal
- uid: Serilog.Core.Logger.Fatal*
  commentId: Overload:Serilog.Core.Logger.Fatal
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_Fatal_System_String_
  name: Fatal
  nameWithType: Logger.Fatal
  fullName: Serilog.Core.Logger.Fatal
- uid: Serilog.ILogger.Fatal(System.String)
  commentId: M:Serilog.ILogger.Fatal(System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_String_
  name: Fatal(string)
  nameWithType: ILogger.Fatal(string)
  fullName: Serilog.ILogger.Fatal(string)
  nameWithType.vb: ILogger.Fatal(String)
  fullName.vb: Serilog.ILogger.Fatal(String)
  name.vb: Fatal(String)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal(System.String)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal(System.String)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Fatal``1(System.String,{T})
  commentId: M:Serilog.ILogger.Fatal``1(System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Fatal``1(System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_String___0_
  name: Fatal<T>(string, T)
  nameWithType: ILogger.Fatal<T>(string, T)
  fullName: Serilog.ILogger.Fatal<T>(string, T)
  nameWithType.vb: ILogger.Fatal(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Fatal(Of T)(String, T)
  name.vb: Fatal(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``1(System.String,``0)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``1(System.String,``0)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Fatal``1(System.String,``0)
  commentId: M:Serilog.ILogger.Fatal``1(System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_String___0_
  name: Fatal<T>(string, T)
  nameWithType: ILogger.Fatal<T>(string, T)
  fullName: Serilog.ILogger.Fatal<T>(string, T)
  nameWithType.vb: ILogger.Fatal(Of T)(String, T)
  fullName.vb: Serilog.ILogger.Fatal(Of T)(String, T)
  name.vb: Fatal(Of T)(String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``1(System.String,``0)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``1(System.String,``0)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Fatal``2(System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Fatal``2(System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Fatal``2(System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_String___0___1_
  name: Fatal<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Fatal<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Fatal<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Fatal(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Fatal(Of T0, T1)(String, T0, T1)
  name.vb: Fatal(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``2(System.String,``0,``1)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``2(System.String,``0,``1)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Fatal``2(System.String,``0,``1)
  commentId: M:Serilog.ILogger.Fatal``2(System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_String___0___1_
  name: Fatal<T0, T1>(string, T0, T1)
  nameWithType: ILogger.Fatal<T0, T1>(string, T0, T1)
  fullName: Serilog.ILogger.Fatal<T0, T1>(string, T0, T1)
  nameWithType.vb: ILogger.Fatal(Of T0, T1)(String, T0, T1)
  fullName.vb: Serilog.ILogger.Fatal(Of T0, T1)(String, T0, T1)
  name.vb: Fatal(Of T0, T1)(String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``2(System.String,``0,``1)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``2(System.String,``0,``1)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Fatal``3(System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Fatal``3(System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Fatal``3(System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_String___0___1___2_
  name: Fatal<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Fatal<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Fatal<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Fatal(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Fatal(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Fatal(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``3(System.String,``0,``1,``2)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``3(System.String,``0,``1,``2)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Fatal``3(System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Fatal``3(System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_String___0___1___2_
  name: Fatal<T0, T1, T2>(string, T0, T1, T2)
  nameWithType: ILogger.Fatal<T0, T1, T2>(string, T0, T1, T2)
  fullName: Serilog.ILogger.Fatal<T0, T1, T2>(string, T0, T1, T2)
  nameWithType.vb: ILogger.Fatal(Of T0, T1, T2)(String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Fatal(Of T0, T1, T2)(String, T0, T1, T2)
  name.vb: Fatal(Of T0, T1, T2)(String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``3(System.String,``0,``1,``2)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``3(System.String,``0,``1,``2)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Fatal(System.String,System.Object[])
  commentId: M:Serilog.ILogger.Fatal(System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_String_System_Object___
  name: Fatal(string, params object[])
  nameWithType: ILogger.Fatal(string, params object[])
  fullName: Serilog.ILogger.Fatal(string, params object[])
  nameWithType.vb: ILogger.Fatal(String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Fatal(String, ParamArray Object())
  name.vb: Fatal(String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Fatal(System.String,System.Object[])
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal(System.String,System.Object[])
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.ILogger.Fatal(System.Exception,System.String)
  commentId: M:Serilog.ILogger.Fatal(System.Exception,System.String)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_Exception_System_String_
  name: Fatal(Exception, string)
  nameWithType: ILogger.Fatal(Exception, string)
  fullName: Serilog.ILogger.Fatal(System.Exception, string)
  nameWithType.vb: ILogger.Fatal(Exception, String)
  fullName.vb: Serilog.ILogger.Fatal(System.Exception, String)
  name.vb: Fatal(Exception, String)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal(System.Exception,System.String)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal(System.Exception,System.String)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Serilog.ILogger.Fatal``1(System.Exception,System.String,{T})
  commentId: M:Serilog.ILogger.Fatal``1(System.Exception,System.String,``0)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Fatal``1(System.Exception,System.String,``0)
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_Exception_System_String___0_
  name: Fatal<T>(Exception, string, T)
  nameWithType: ILogger.Fatal<T>(Exception, string, T)
  fullName: Serilog.ILogger.Fatal<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Fatal(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Fatal(Of T)(System.Exception, String, T)
  name.vb: Fatal(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``1(System.Exception,System.String,``0)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``1(System.Exception,System.String,``0)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Fatal``1(System.Exception,System.String,``0)
  commentId: M:Serilog.ILogger.Fatal``1(System.Exception,System.String,``0)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_Exception_System_String___0_
  name: Fatal<T>(Exception, string, T)
  nameWithType: ILogger.Fatal<T>(Exception, string, T)
  fullName: Serilog.ILogger.Fatal<T>(System.Exception, string, T)
  nameWithType.vb: ILogger.Fatal(Of T)(Exception, String, T)
  fullName.vb: Serilog.ILogger.Fatal(Of T)(System.Exception, String, T)
  name.vb: Fatal(Of T)(Exception, String, T)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``1(System.Exception,System.String,``0)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_Exception_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``1(System.Exception,System.String,``0)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__1_System_Exception_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Serilog.ILogger.Fatal``2(System.Exception,System.String,{T0},{T1})
  commentId: M:Serilog.ILogger.Fatal``2(System.Exception,System.String,``0,``1)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Fatal``2(System.Exception,System.String,``0,``1)
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_Exception_System_String___0___1_
  name: Fatal<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Fatal<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Fatal<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Fatal(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Fatal(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Fatal(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``2(System.Exception,System.String,``0,``1)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``2(System.Exception,System.String,``0,``1)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Fatal``2(System.Exception,System.String,``0,``1)
  commentId: M:Serilog.ILogger.Fatal``2(System.Exception,System.String,``0,``1)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_Exception_System_String___0___1_
  name: Fatal<T0, T1>(Exception, string, T0, T1)
  nameWithType: ILogger.Fatal<T0, T1>(Exception, string, T0, T1)
  fullName: Serilog.ILogger.Fatal<T0, T1>(System.Exception, string, T0, T1)
  nameWithType.vb: ILogger.Fatal(Of T0, T1)(Exception, String, T0, T1)
  fullName.vb: Serilog.ILogger.Fatal(Of T0, T1)(System.Exception, String, T0, T1)
  name.vb: Fatal(Of T0, T1)(Exception, String, T0, T1)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``2(System.Exception,System.String,``0,``1)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_Exception_System_String___0___1_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``2(System.Exception,System.String,``0,``1)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__2_System_Exception_System_String___0___1_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: Serilog.ILogger.Fatal``3(System.Exception,System.String,{T0},{T1},{T2})
  commentId: M:Serilog.ILogger.Fatal``3(System.Exception,System.String,``0,``1,``2)
  parent: Serilog.ILogger
  definition: Serilog.ILogger.Fatal``3(System.Exception,System.String,``0,``1,``2)
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_Exception_System_String___0___1___2_
  name: Fatal<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Fatal<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Fatal<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Fatal(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Fatal(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Fatal(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``3(System.Exception,System.String,``0,``1,``2)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``3(System.Exception,System.String,``0,``1,``2)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Fatal``3(System.Exception,System.String,``0,``1,``2)
  commentId: M:Serilog.ILogger.Fatal``3(System.Exception,System.String,``0,``1,``2)
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_Exception_System_String___0___1___2_
  name: Fatal<T0, T1, T2>(Exception, string, T0, T1, T2)
  nameWithType: ILogger.Fatal<T0, T1, T2>(Exception, string, T0, T1, T2)
  fullName: Serilog.ILogger.Fatal<T0, T1, T2>(System.Exception, string, T0, T1, T2)
  nameWithType.vb: ILogger.Fatal(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  fullName.vb: Serilog.ILogger.Fatal(Of T0, T1, T2)(System.Exception, String, T0, T1, T2)
  name.vb: Fatal(Of T0, T1, T2)(Exception, String, T0, T1, T2)
  spec.csharp:
  - uid: Serilog.ILogger.Fatal``3(System.Exception,System.String,``0,``1,``2)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_Exception_System_String___0___1___2_
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal``3(System.Exception,System.String,``0,``1,``2)
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal__3_System_Exception_System_String___0___1___2_
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Serilog.ILogger.Fatal(System.Exception,System.String,System.Object[])
  commentId: M:Serilog.ILogger.Fatal(System.Exception,System.String,System.Object[])
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_Exception_System_String_System_Object___
  name: Fatal(Exception, string, params object[])
  nameWithType: ILogger.Fatal(Exception, string, params object[])
  fullName: Serilog.ILogger.Fatal(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Fatal(Exception, String, ParamArray Object())
  fullName.vb: Serilog.ILogger.Fatal(System.Exception, String, ParamArray Object())
  name.vb: Fatal(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Serilog.ILogger.Fatal(System.Exception,System.String,System.Object[])
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.Fatal(System.Exception,System.String,System.Object[])
    name: Fatal
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_Fatal_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Serilog.Core.Logger.BindMessageTemplate*
  commentId: Overload:Serilog.Core.Logger.BindMessageTemplate
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_BindMessageTemplate_System_String_System_Object___Serilog_Events_MessageTemplate__System_Collections_Generic_IEnumerable_Serilog_Events_LogEventProperty___
  name: BindMessageTemplate
  nameWithType: Logger.BindMessageTemplate
  fullName: Serilog.Core.Logger.BindMessageTemplate
- uid: Serilog.ILogger.BindMessageTemplate(System.String,System.Object[],Serilog.Events.MessageTemplate@,System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}@)
  commentId: M:Serilog.ILogger.BindMessageTemplate(System.String,System.Object[],Serilog.Events.MessageTemplate@,System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}@)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_BindMessageTemplate_System_String_System_Object___Serilog_Events_MessageTemplate__System_Collections_Generic_IEnumerable_Serilog_Events_LogEventProperty___
  name: BindMessageTemplate(string, object[], out MessageTemplate, out IEnumerable<LogEventProperty>)
  nameWithType: ILogger.BindMessageTemplate(string, object[], out MessageTemplate, out IEnumerable<LogEventProperty>)
  fullName: Serilog.ILogger.BindMessageTemplate(string, object[], out Serilog.Events.MessageTemplate, out System.Collections.Generic.IEnumerable<Serilog.Events.LogEventProperty>)
  nameWithType.vb: ILogger.BindMessageTemplate(String, Object(), MessageTemplate, IEnumerable(Of LogEventProperty))
  fullName.vb: Serilog.ILogger.BindMessageTemplate(String, Object(), Serilog.Events.MessageTemplate, System.Collections.Generic.IEnumerable(Of Serilog.Events.LogEventProperty))
  name.vb: BindMessageTemplate(String, Object(), MessageTemplate, IEnumerable(Of LogEventProperty))
  spec.csharp:
  - uid: Serilog.ILogger.BindMessageTemplate(System.String,System.Object[],Serilog.Events.MessageTemplate@,System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}@)
    name: BindMessageTemplate
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_BindMessageTemplate_System_String_System_Object___Serilog_Events_MessageTemplate__System_Collections_Generic_IEnumerable_Serilog_Events_LogEventProperty___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Serilog.Events.MessageTemplate
    name: MessageTemplate
    isExternal: true
    href: Serilog.Events.MessageTemplate.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Serilog.Events.LogEventProperty
    name: LogEventProperty
    isExternal: true
    href: Serilog.Events.LogEventProperty.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.BindMessageTemplate(System.String,System.Object[],Serilog.Events.MessageTemplate@,System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}@)
    name: BindMessageTemplate
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_BindMessageTemplate_System_String_System_Object___Serilog_Events_MessageTemplate__System_Collections_Generic_IEnumerable_Serilog_Events_LogEventProperty___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Serilog.Events.MessageTemplate
    name: MessageTemplate
    isExternal: true
    href: Serilog.Events.MessageTemplate.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Serilog.Events.LogEventProperty
    name: LogEventProperty
    isExternal: true
    href: Serilog.Events.LogEventProperty.html
  - name: )
  - name: )
- uid: Serilog.Events.MessageTemplate
  commentId: T:Serilog.Events.MessageTemplate
  parent: Serilog.Events
  isExternal: true
  href: Serilog.Events.MessageTemplate.html
  name: MessageTemplate
  nameWithType: MessageTemplate
  fullName: Serilog.Events.MessageTemplate
- uid: System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}
  commentId: T:System.Collections.Generic.IEnumerable{Serilog.Events.LogEventProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<LogEventProperty>
  nameWithType: IEnumerable<LogEventProperty>
  fullName: System.Collections.Generic.IEnumerable<Serilog.Events.LogEventProperty>
  nameWithType.vb: IEnumerable(Of LogEventProperty)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Serilog.Events.LogEventProperty)
  name.vb: IEnumerable(Of LogEventProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Serilog.Events.LogEventProperty
    name: LogEventProperty
    isExternal: true
    href: Serilog.Events.LogEventProperty.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Serilog.Events.LogEventProperty
    name: LogEventProperty
    isExternal: true
    href: Serilog.Events.LogEventProperty.html
  - name: )
- uid: Serilog.Core.Logger.BindProperty*
  commentId: Overload:Serilog.Core.Logger.BindProperty
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_BindProperty_System_String_System_Object_System_Boolean_Serilog_Events_LogEventProperty__
  name: BindProperty
  nameWithType: Logger.BindProperty
  fullName: Serilog.Core.Logger.BindProperty
- uid: Serilog.ILogger.BindProperty(System.String,System.Object,System.Boolean,Serilog.Events.LogEventProperty@)
  commentId: M:Serilog.ILogger.BindProperty(System.String,System.Object,System.Boolean,Serilog.Events.LogEventProperty@)
  parent: Serilog.ILogger
  isExternal: true
  href: Serilog.ILogger.html#Serilog_ILogger_BindProperty_System_String_System_Object_System_Boolean_Serilog_Events_LogEventProperty__
  name: BindProperty(string, object, bool, out LogEventProperty)
  nameWithType: ILogger.BindProperty(string, object, bool, out LogEventProperty)
  fullName: Serilog.ILogger.BindProperty(string, object, bool, out Serilog.Events.LogEventProperty)
  nameWithType.vb: ILogger.BindProperty(String, Object, Boolean, LogEventProperty)
  fullName.vb: Serilog.ILogger.BindProperty(String, Object, Boolean, Serilog.Events.LogEventProperty)
  name.vb: BindProperty(String, Object, Boolean, LogEventProperty)
  spec.csharp:
  - uid: Serilog.ILogger.BindProperty(System.String,System.Object,System.Boolean,Serilog.Events.LogEventProperty@)
    name: BindProperty
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_BindProperty_System_String_System_Object_System_Boolean_Serilog_Events_LogEventProperty__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Serilog.Events.LogEventProperty
    name: LogEventProperty
    isExternal: true
    href: Serilog.Events.LogEventProperty.html
  - name: )
  spec.vb:
  - uid: Serilog.ILogger.BindProperty(System.String,System.Object,System.Boolean,Serilog.Events.LogEventProperty@)
    name: BindProperty
    isExternal: true
    href: Serilog.ILogger.html#Serilog_ILogger_BindProperty_System_String_System_Object_System_Boolean_Serilog_Events_LogEventProperty__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Serilog.Events.LogEventProperty
    name: LogEventProperty
    isExternal: true
    href: Serilog.Events.LogEventProperty.html
  - name: )
- uid: Serilog.Events.LogEventProperty
  commentId: T:Serilog.Events.LogEventProperty
  parent: Serilog.Events
  isExternal: true
  href: Serilog.Events.LogEventProperty.html
  name: LogEventProperty
  nameWithType: LogEventProperty
  fullName: Serilog.Events.LogEventProperty
- uid: Serilog.Core.Logger.Dispose*
  commentId: Overload:Serilog.Core.Logger.Dispose
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_Dispose
  name: Dispose
  nameWithType: Logger.Dispose
  fullName: Serilog.Core.Logger.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Serilog.Core.Logger.None*
  commentId: Overload:Serilog.Core.Logger.None
  isExternal: true
  href: Serilog.Core.Logger.html#Serilog_Core_Logger_None
  name: None
  nameWithType: Logger.None
  fullName: Serilog.Core.Logger.None
