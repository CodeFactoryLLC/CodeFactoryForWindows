### YamlMime:ManagedReference
items:
- uid: Serilog.Context.LogContext
  commentId: T:Serilog.Context.LogContext
  id: LogContext
  parent: Serilog.Context
  children:
  - Serilog.Context.LogContext.Clone
  - Serilog.Context.LogContext.Push(Serilog.Core.ILogEventEnricher)
  - Serilog.Context.LogContext.Push(Serilog.Core.ILogEventEnricher[])
  - Serilog.Context.LogContext.PushProperty(System.String,System.Object,System.Boolean)
  - Serilog.Context.LogContext.Reset
  - Serilog.Context.LogContext.Suspend
  langs:
  - csharp
  - vb
  name: LogContext
  nameWithType: LogContext
  fullName: Serilog.Context.LogContext
  type: Class
  assemblies:
  - Serilog
  namespace: Serilog.Context
  summary: >-
    Holds ambient properties that can be attached to log events. To

    configure, use the <xref href="Serilog.Configuration.LoggerEnrichmentConfiguration.FromLogContext" data-throw-if-not-resolved="false"></xref> method.
  remarks: >-
    The scope of the context is the current logical thread, using AsyncLocal
                (and so is preserved across async/await calls).
  example:
  - >-
    Configuration:

    <pre><code class="lang-csharp">var log = new LoggerConfiguration()
        .Enrich.FromLogContext()
        ...</code></pre>
    Usage:

    <pre><code class="lang-csharp">using (LogContext.PushProperty("MessageId", message.Id))

    {
        Log.Information("The MessageId property will be attached to this event");
    }</code></pre>
  syntax:
    content: public static class LogContext
    content.vb: Public Module LogContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Serilog.Context.LogContext.PushProperty(System.String,System.Object,System.Boolean)
  commentId: M:Serilog.Context.LogContext.PushProperty(System.String,System.Object,System.Boolean)
  id: PushProperty(System.String,System.Object,System.Boolean)
  parent: Serilog.Context.LogContext
  langs:
  - csharp
  - vb
  name: PushProperty(string, object?, bool)
  nameWithType: LogContext.PushProperty(string, object?, bool)
  fullName: Serilog.Context.LogContext.PushProperty(string, object?, bool)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Context
  summary: >-
    Push a property onto the context, returning an <xref href="System.IDisposable" data-throw-if-not-resolved="false"></xref>

    that must later be used to remove the property, along with any others that

    may have been pushed on top of it and not yet popped. The property must

    be popped from the same thread/logical call context.
  example: []
  syntax:
    content: public static IDisposable PushProperty(string name, object? value, bool destructureObjects = false)
    parameters:
    - id: name
      type: System.String
      description: The name of the property.
    - id: value
      type: System.Object
      description: The value of the property.
    - id: destructureObjects
      type: System.Boolean
      description: >-
        If true, and the value is a non-primitive, non-array type,
                    then the value will be converted to a structure; otherwise, unknown types will
                    be converted to scalars, which are generally stored as strings.
    return:
      type: System.IDisposable
      description: A handle to later remove the property from the context.
    content.vb: Public Shared Function PushProperty(name As String, value As Object, destructureObjects As Boolean = False) As IDisposable
  overload: Serilog.Context.LogContext.PushProperty*
  nameWithType.vb: LogContext.PushProperty(String, Object, Boolean)
  fullName.vb: Serilog.Context.LogContext.PushProperty(String, Object, Boolean)
  name.vb: PushProperty(String, Object, Boolean)
- uid: Serilog.Context.LogContext.Push(Serilog.Core.ILogEventEnricher)
  commentId: M:Serilog.Context.LogContext.Push(Serilog.Core.ILogEventEnricher)
  id: Push(Serilog.Core.ILogEventEnricher)
  parent: Serilog.Context.LogContext
  langs:
  - csharp
  - vb
  name: Push(ILogEventEnricher)
  nameWithType: LogContext.Push(ILogEventEnricher)
  fullName: Serilog.Context.LogContext.Push(Serilog.Core.ILogEventEnricher)
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Context
  summary: >-
    Push an enricher onto the context, returning an <xref href="System.IDisposable" data-throw-if-not-resolved="false"></xref>

    that must later be used to remove the property, along with any others that

    may have been pushed on top of it and not yet popped. The property must

    be popped from the same thread/logical call context.
  example: []
  syntax:
    content: public static IDisposable Push(ILogEventEnricher enricher)
    parameters:
    - id: enricher
      type: Serilog.Core.ILogEventEnricher
      description: An enricher to push onto the log context
    return:
      type: System.IDisposable
      description: A token that must be disposed, in order, to pop properties back off the stack.
    content.vb: Public Shared Function Push(enricher As ILogEventEnricher) As IDisposable
  overload: Serilog.Context.LogContext.Push*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code class="paramref">enricher</code> is <pre><code class="lang-csharp">null</code></pre>
- uid: Serilog.Context.LogContext.Push(Serilog.Core.ILogEventEnricher[])
  commentId: M:Serilog.Context.LogContext.Push(Serilog.Core.ILogEventEnricher[])
  id: Push(Serilog.Core.ILogEventEnricher[])
  parent: Serilog.Context.LogContext
  langs:
  - csharp
  - vb
  name: Push(params ILogEventEnricher[])
  nameWithType: LogContext.Push(params ILogEventEnricher[])
  fullName: Serilog.Context.LogContext.Push(params Serilog.Core.ILogEventEnricher[])
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Context
  summary: >-
    Push multiple enrichers onto the context, returning an <xref href="System.IDisposable" data-throw-if-not-resolved="false"></xref>

    that must later be used to remove the property, along with any others that

    may have been pushed on top of it and not yet popped. The property must

    be popped from the same thread/logical call context.
  example: []
  syntax:
    content: public static IDisposable Push(params ILogEventEnricher[] enrichers)
    parameters:
    - id: enrichers
      type: Serilog.Core.ILogEventEnricher[]
      description: Enrichers to push onto the log context
    return:
      type: System.IDisposable
      description: A token that must be disposed, in order, to pop properties back off the stack.
    content.vb: Public Shared Function Push(ParamArray enrichers As ILogEventEnricher()) As IDisposable
  overload: Serilog.Context.LogContext.Push*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code class="paramref">enrichers</code> is <pre><code class="lang-csharp">null</code></pre>
  seealso:
  - linkId: Serilog.Core.Enrichers.PropertyEnricher
    commentId: T:Serilog.Core.Enrichers.PropertyEnricher
  nameWithType.vb: LogContext.Push(ParamArray ILogEventEnricher())
  fullName.vb: Serilog.Context.LogContext.Push(ParamArray Serilog.Core.ILogEventEnricher())
  name.vb: Push(ParamArray ILogEventEnricher())
- uid: Serilog.Context.LogContext.Clone
  commentId: M:Serilog.Context.LogContext.Clone
  id: Clone
  parent: Serilog.Context.LogContext
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: LogContext.Clone()
  fullName: Serilog.Context.LogContext.Clone()
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Context
  summary: >-
    Obtain an enricher that represents the current contents of the <xref href="Serilog.Context.LogContext" data-throw-if-not-resolved="false"></xref>. This

    can be pushed back onto the context in a different location/thread when required.
  example: []
  syntax:
    content: public static ILogEventEnricher Clone()
    return:
      type: Serilog.Core.ILogEventEnricher
      description: An enricher that represents the current contents of the <xref href="Serilog.Context.LogContext" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Clone() As ILogEventEnricher
  overload: Serilog.Context.LogContext.Clone*
- uid: Serilog.Context.LogContext.Suspend
  commentId: M:Serilog.Context.LogContext.Suspend
  id: Suspend
  parent: Serilog.Context.LogContext
  langs:
  - csharp
  - vb
  name: Suspend()
  nameWithType: LogContext.Suspend()
  fullName: Serilog.Context.LogContext.Suspend()
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Context
  summary: >-
    Remove all enrichers from the <xref href="Serilog.Context.LogContext" data-throw-if-not-resolved="false"></xref>, returning an <xref href="System.IDisposable" data-throw-if-not-resolved="false"></xref>

    that must later be used to restore enrichers that were on the stack before <xref href="Serilog.Context.LogContext.Suspend" data-throw-if-not-resolved="false"></xref> was called.
  example: []
  syntax:
    content: public static IDisposable Suspend()
    return:
      type: System.IDisposable
      description: A token that must be disposed, in order, to restore properties back to the stack.
    content.vb: Public Shared Function Suspend() As IDisposable
  overload: Serilog.Context.LogContext.Suspend*
- uid: Serilog.Context.LogContext.Reset
  commentId: M:Serilog.Context.LogContext.Reset
  id: Reset
  parent: Serilog.Context.LogContext
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: LogContext.Reset()
  fullName: Serilog.Context.LogContext.Reset()
  type: Method
  assemblies:
  - Serilog
  namespace: Serilog.Context
  summary: Remove all enrichers from <xref href="Serilog.Context.LogContext" data-throw-if-not-resolved="false"></xref> for the current async scope.
  example: []
  syntax:
    content: public static void Reset()
    content.vb: Public Shared Sub Reset()
  overload: Serilog.Context.LogContext.Reset*
references:
- uid: Serilog.Configuration.LoggerEnrichmentConfiguration.FromLogContext
  commentId: M:Serilog.Configuration.LoggerEnrichmentConfiguration.FromLogContext
  isExternal: true
  href: Serilog.Configuration.LoggerEnrichmentConfiguration.html#Serilog_Configuration_LoggerEnrichmentConfiguration_FromLogContext
  name: FromLogContext()
  nameWithType: LoggerEnrichmentConfiguration.FromLogContext()
  fullName: Serilog.Configuration.LoggerEnrichmentConfiguration.FromLogContext()
  spec.csharp:
  - uid: Serilog.Configuration.LoggerEnrichmentConfiguration.FromLogContext
    name: FromLogContext
    isExternal: true
    href: Serilog.Configuration.LoggerEnrichmentConfiguration.html#Serilog_Configuration_LoggerEnrichmentConfiguration_FromLogContext
  - name: (
  - name: )
  spec.vb:
  - uid: Serilog.Configuration.LoggerEnrichmentConfiguration.FromLogContext
    name: FromLogContext
    isExternal: true
    href: Serilog.Configuration.LoggerEnrichmentConfiguration.html#Serilog_Configuration_LoggerEnrichmentConfiguration_FromLogContext
  - name: (
  - name: )
- uid: Serilog.Context
  commentId: N:Serilog.Context
  isExternal: true
  href: Serilog.html
  name: Serilog.Context
  nameWithType: Serilog.Context
  fullName: Serilog.Context
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Context
    name: Context
    isExternal: true
    href: Serilog.Context.html
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Context
    name: Context
    isExternal: true
    href: Serilog.Context.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Serilog.Context.LogContext.PushProperty*
  commentId: Overload:Serilog.Context.LogContext.PushProperty
  isExternal: true
  href: Serilog.Context.LogContext.html#Serilog_Context_LogContext_PushProperty_System_String_System_Object_System_Boolean_
  name: PushProperty
  nameWithType: LogContext.PushProperty
  fullName: Serilog.Context.LogContext.PushProperty
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Serilog.Context.LogContext.Push*
  commentId: Overload:Serilog.Context.LogContext.Push
  isExternal: true
  href: Serilog.Context.LogContext.html#Serilog_Context_LogContext_Push_Serilog_Core_ILogEventEnricher_
  name: Push
  nameWithType: LogContext.Push
  fullName: Serilog.Context.LogContext.Push
- uid: Serilog.Core.ILogEventEnricher
  commentId: T:Serilog.Core.ILogEventEnricher
  parent: Serilog.Core
  isExternal: true
  href: Serilog.Core.ILogEventEnricher.html
  name: ILogEventEnricher
  nameWithType: ILogEventEnricher
  fullName: Serilog.Core.ILogEventEnricher
- uid: Serilog.Core
  commentId: N:Serilog.Core
  isExternal: true
  href: Serilog.html
  name: Serilog.Core
  nameWithType: Serilog.Core
  fullName: Serilog.Core
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Core
    name: Core
    isExternal: true
    href: Serilog.Core.html
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
    href: Serilog.html
  - name: .
  - uid: Serilog.Core
    name: Core
    isExternal: true
    href: Serilog.Core.html
- uid: Serilog.Core.Enrichers.PropertyEnricher
  commentId: T:Serilog.Core.Enrichers.PropertyEnricher
  isExternal: true
  href: Serilog.Core.Enrichers.PropertyEnricher.html
  name: PropertyEnricher
  nameWithType: PropertyEnricher
  fullName: Serilog.Core.Enrichers.PropertyEnricher
- uid: Serilog.Core.ILogEventEnricher[]
  isExternal: true
  href: Serilog.Core.ILogEventEnricher.html
  name: ILogEventEnricher[]
  nameWithType: ILogEventEnricher[]
  fullName: Serilog.Core.ILogEventEnricher[]
  nameWithType.vb: ILogEventEnricher()
  fullName.vb: Serilog.Core.ILogEventEnricher()
  name.vb: ILogEventEnricher()
  spec.csharp:
  - uid: Serilog.Core.ILogEventEnricher
    name: ILogEventEnricher
    isExternal: true
    href: Serilog.Core.ILogEventEnricher.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Serilog.Core.ILogEventEnricher
    name: ILogEventEnricher
    isExternal: true
    href: Serilog.Core.ILogEventEnricher.html
  - name: (
  - name: )
- uid: Serilog.Context.LogContext
  commentId: T:Serilog.Context.LogContext
  isExternal: true
  href: Serilog.Context.LogContext.html
  name: LogContext
  nameWithType: LogContext
  fullName: Serilog.Context.LogContext
- uid: Serilog.Context.LogContext.Clone*
  commentId: Overload:Serilog.Context.LogContext.Clone
  isExternal: true
  href: Serilog.Context.LogContext.html#Serilog_Context_LogContext_Clone
  name: Clone
  nameWithType: LogContext.Clone
  fullName: Serilog.Context.LogContext.Clone
- uid: Serilog.Context.LogContext.Suspend
  commentId: M:Serilog.Context.LogContext.Suspend
  isExternal: true
  href: Serilog.Context.LogContext.html#Serilog_Context_LogContext_Suspend
  name: Suspend()
  nameWithType: LogContext.Suspend()
  fullName: Serilog.Context.LogContext.Suspend()
  spec.csharp:
  - uid: Serilog.Context.LogContext.Suspend
    name: Suspend
    isExternal: true
    href: Serilog.Context.LogContext.html#Serilog_Context_LogContext_Suspend
  - name: (
  - name: )
  spec.vb:
  - uid: Serilog.Context.LogContext.Suspend
    name: Suspend
    isExternal: true
    href: Serilog.Context.LogContext.html#Serilog_Context_LogContext_Suspend
  - name: (
  - name: )
- uid: Serilog.Context.LogContext.Suspend*
  commentId: Overload:Serilog.Context.LogContext.Suspend
  isExternal: true
  href: Serilog.Context.LogContext.html#Serilog_Context_LogContext_Suspend
  name: Suspend
  nameWithType: LogContext.Suspend
  fullName: Serilog.Context.LogContext.Suspend
- uid: Serilog.Context.LogContext.Reset*
  commentId: Overload:Serilog.Context.LogContext.Reset
  isExternal: true
  href: Serilog.Context.LogContext.html#Serilog_Context_LogContext_Reset
  name: Reset
  nameWithType: LogContext.Reset
  fullName: Serilog.Context.LogContext.Reset
