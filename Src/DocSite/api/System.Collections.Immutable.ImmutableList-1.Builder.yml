### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableList`1.Builder
  commentId: T:System.Collections.Immutable.ImmutableList`1.Builder
  id: ImmutableList`1.Builder
  parent: System.Collections.Immutable
  children:
  - System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)
  - System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)
  - System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.Clear
  - System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)
  - System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})
  - System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])
  - System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.Count
  - System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator
  - System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)
  - System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)
  - System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.ItemRef(System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)
  - System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)
  - System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.Reverse
  - System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableList`1.Builder.Sort
  - System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  - System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable
  - System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})
  langs:
  - csharp
  - vb
  name: ImmutableList<T>.Builder
  nameWithType: ImmutableList<T>.Builder
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Represents a list that mutates with little or no memory allocations and that can produce or build on immutable list instances very efficiently.  

     NuGet package: System.Collections.Immutable (about immutable collections and how to install)
  example: []
  syntax:
    content: 'public sealed class ImmutableList<T>.Builder : IList<T>, ICollection<T>, IList, ICollection, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
    content.vb: Public NotInheritable Class ImmutableList(Of T).Builder Implements IList(Of T), ICollection(Of T), IList, ICollection, IReadOnlyList(Of T), IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{{T}}
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableArray.ToImmutableArray``1
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Func{{T},{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}})
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}},System.Collections.Generic.IEqualityComparer{{TKey}},System.Collections.Generic.IEqualityComparer{{TValue}})
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEqualityComparer{{T}})
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableList.ToImmutableList``1
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}})
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}},System.Collections.Generic.IComparer{{TKey}},System.Collections.Generic.IEqualityComparer{{TValue}})
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1
  - System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IComparer{{T}})
  - System.Collections.Immutable.ImmutableList`1.Builder.System.Collections.Immutable.ImmutableList.ToImmutableList``1
  nameWithType.vb: ImmutableList(Of T).Builder
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder
  name.vb: ImmutableList(Of T).Builder
- uid: System.Collections.Immutable.ImmutableList`1.Builder.ItemRef(System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.ItemRef(System.Int32)
  id: ItemRef(System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: ItemRef(int)
  nameWithType: ImmutableList<T>.Builder.ItemRef(int)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.ItemRef(int)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets a read-only reference to the value for a given <code class="paramref">index</code> into the list.
  example: []
  syntax:
    content: public ref readonly T ItemRef(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the desired element.
    return:
      type: '{T}'
      description: A read-only reference to the value at the specified <code class="paramref">index</code>.
    content.vb: Public Function ItemRef(index As Integer) As T
  overload: System.Collections.Immutable.ImmutableList`1.Builder.ItemRef*
  nameWithType.vb: ImmutableList(Of T).Builder.ItemRef(Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.ItemRef(Integer)
  name.vb: ItemRef(Integer)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: IndexOf(T)
  nameWithType: ImmutableList<T>.Builder.IndexOf(T)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.IndexOf(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list.
  example: []
  syntax:
    content: public int IndexOf(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the immutable list. The value can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for reference types.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <code class="paramref">item</code> within the range of elements in the immutable list, if found; otherwise, -1.
    content.vb: Public Function IndexOf(item As T) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.IndexOf*
  implements:
  - System.Collections.Generic.IList{{T}}.IndexOf({T})
  nameWithType.vb: ImmutableList(Of T).Builder.IndexOf(T)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.IndexOf(T)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Insert(int, T)
  nameWithType: ImmutableList<T>.Builder.Insert(int, T)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Insert(int, T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Inserts an item to the immutable list at the specified index.
  example: []
  syntax:
    content: public void Insert(int index, T item)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which <code class="paramref">item</code> should be inserted.
    - id: item
      type: '{T}'
      description: The object to insert into the immutable list.
    content.vb: Public Sub Insert(index As Integer, item As T)
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Insert*
  implements:
  - System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  nameWithType.vb: ImmutableList(Of T).Builder.Insert(Integer, T)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Insert(Integer, T)
  name.vb: Insert(Integer, T)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: ImmutableList<T>.Builder.RemoveAt(int)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.RemoveAt(int)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Removes the item at the specified index of the immutable list.
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove from the list.
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt*
  implements:
  - System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  - System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: ImmutableList(Of T).Builder.RemoveAt(Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)
  id: Add(`0)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: ImmutableList<T>.Builder.Add(T)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Add(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Adds an item to the immutable list.
  example: []
  syntax:
    content: public void Add(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to add to the list.
    content.vb: Public Sub Add(item As T)
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Add*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  nameWithType.vb: ImmutableList(Of T).Builder.Add(T)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Add(T)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Clear
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Clear
  id: Clear
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ImmutableList<T>.Builder.Clear()
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Clear()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Removes all items from the immutable list.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Clear*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  nameWithType.vb: ImmutableList(Of T).Builder.Clear()
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Clear()
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: ImmutableList<T>.Builder.Contains(T)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Contains(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Determines whether the immutable list contains a specific value.
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the list.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if item is found in the list; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Contains(item As T) As Boolean
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: ImmutableList(Of T).Builder.Contains(T)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Contains(T)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: ImmutableList<T>.Builder.Remove(T)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Remove(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Removes the first occurrence of a specific object from the immutable list.
  example: []
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to remove from the list.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if item was successfully removed from the list; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. This method also returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if item is not found in the list.
    content.vb: Public Function Remove(item As T) As Boolean
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Remove*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: ImmutableList(Of T).Builder.Remove(T)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Remove(T)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ImmutableList<T>.Builder.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.GetEnumerator()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public ImmutableList<T>.Enumerator GetEnumerator()
    return:
      type: System.Collections.Immutable.ImmutableList`1.Enumerator
      description: An enumerator that can be used to iterate through the list.
    content.vb: Public Function GetEnumerator() As ImmutableList(Of T).Enumerator
  overload: System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator*
  nameWithType.vb: ImmutableList(Of T).Builder.GetEnumerator()
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.GetEnumerator()
- uid: System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})
  id: ForEach(System.Action{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: ForEach(Action<T>)
  nameWithType: ImmutableList<T>.Builder.ForEach(Action<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.ForEach(System.Action<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Performs the specified action on each element of the list.
  example: []
  syntax:
    content: public void ForEach(Action<T> action)
    parameters:
    - id: action
      type: System.Action{{T}}
      description: The delegate to perform on each element of the list.
    content.vb: Public Sub ForEach(action As Action(Of T))
  overload: System.Collections.Immutable.ImmutableList`1.Builder.ForEach*
  nameWithType.vb: ImmutableList(Of T).Builder.ForEach(Action(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.ForEach(System.Action(Of T))
  name.vb: ForEach(Action(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])
  id: CopyTo(`0[])
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: CopyTo(T[])
  nameWithType: ImmutableList<T>.Builder.CopyTo(T[])
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.CopyTo(T[])
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Copies the entire immutable list to a compatible one-dimensional array, starting at the beginning of the target array.
  example: []
  syntax:
    content: public void CopyTo(T[] array)
    parameters:
    - id: array
      type: '{T}[]'
      description: The one-dimensional array that is the destination of the elements copied from the immutable list. The array must have zero-based indexing.
    content.vb: Public Sub CopyTo(array As T())
  overload: System.Collections.Immutable.ImmutableList`1.Builder.CopyTo*
  nameWithType.vb: ImmutableList(Of T).Builder.CopyTo(T())
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.CopyTo(T())
  name.vb: CopyTo(T())
- uid: System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: CopyTo(T[], int)
  nameWithType: ImmutableList<T>.Builder.CopyTo(T[], int)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.CopyTo(T[], int)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
      description: The one-dimensional array that is the destination of the elements copied from the immutable list. The array must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in array at which copying begins.
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: System.Collections.Immutable.ImmutableList`1.Builder.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: ImmutableList(Of T).Builder.CopyTo(T(), Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  id: CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: CopyTo(int, T[], int, int)
  nameWithType: ImmutableList<T>.Builder.CopyTo(int, T[], int, int)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.CopyTo(int, T[], int, int)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.
  example: []
  syntax:
    content: public void CopyTo(int index, T[] array, int arrayIndex, int count)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index in the source immutable list at which copying begins.
    - id: array
      type: '{T}[]'
      description: The one-dimensional array that is the destination of the elements copied from the immutable list. The array must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in <code class="paramref">array</code> at which copying begins.
    - id: count
      type: System.Int32
      description: The number of elements to copy.
    content.vb: Public Sub CopyTo(index As Integer, array As T(), arrayIndex As Integer, count As Integer)
  overload: System.Collections.Immutable.ImmutableList`1.Builder.CopyTo*
  nameWithType.vb: ImmutableList(Of T).Builder.CopyTo(Integer, T(), Integer, Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.CopyTo(Integer, T(), Integer, Integer)
  name.vb: CopyTo(Integer, T(), Integer, Integer)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)
  id: GetRange(System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: GetRange(int, int)
  nameWithType: ImmutableList<T>.Builder.GetRange(int, int)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.GetRange(int, int)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a shallow copy of a range of elements in the source immutable list.
  example: []
  syntax:
    content: public ImmutableList<T> GetRange(int index, int count)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which the range starts.
    - id: count
      type: System.Int32
      description: The number of elements in the range.
    return:
      type: System.Collections.Immutable.ImmutableList`1
      description: A shallow copy of a range of elements in the source immutable list.
    content.vb: Public Function GetRange(index As Integer, count As Integer) As ImmutableList(Of T)
  overload: System.Collections.Immutable.ImmutableList`1.Builder.GetRange*
  nameWithType.vb: ImmutableList(Of T).Builder.GetRange(Integer, Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.GetRange(Integer, Integer)
  name.vb: GetRange(Integer, Integer)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})
  id: ConvertAll``1(System.Func{`0,``0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: ConvertAll<TOutput>(Func<T, TOutput>)
  nameWithType: ImmutableList<T>.Builder.ConvertAll<TOutput>(Func<T, TOutput>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.ConvertAll<TOutput>(System.Func<T, TOutput>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable list from the list represented by this builder by using the converter function.
  example: []
  syntax:
    content: public ImmutableList<TOutput> ConvertAll<TOutput>(Func<T, TOutput> converter)
    parameters:
    - id: converter
      type: System.Func{{T},{TOutput}}
      description: The converter function.
    typeParameters:
    - id: TOutput
      description: The type of the output of the delegate converter function.
    return:
      type: System.Collections.Immutable.ImmutableList{{TOutput}}
      description: A new immutable list from the list represented by this builder.
    content.vb: Public Function ConvertAll(Of TOutput)(converter As Func(Of T, TOutput)) As ImmutableList(Of TOutput)
  overload: System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll*
  nameWithType.vb: ImmutableList(Of T).Builder.ConvertAll(Of TOutput)(Func(Of T, TOutput))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.ConvertAll(Of TOutput)(System.Func(Of T, TOutput))
  name.vb: ConvertAll(Of TOutput)(Func(Of T, TOutput))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})
  id: Exists(System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Exists(Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.Exists(Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Exists(System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Determines whether the immutable list contains elements that match the conditions defined by the specified predicate.
  example: []
  syntax:
    content: public bool Exists(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the elements to search for.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the immutable list contains one or more elements that match the conditions defined by the specified predicate; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Exists(match As Predicate(Of T)) As Boolean
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Exists*
  nameWithType.vb: ImmutableList(Of T).Builder.Exists(Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Exists(System.Predicate(Of T))
  name.vb: Exists(Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})
  id: Find(System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Find(Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.Find(Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Find(System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire immutable list.
  example: []
  syntax:
    content: public T? Find(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the element to search for.
    return:
      type: '{T}'
      description: The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <code class="paramref">T</code>.
    content.vb: Public Function Find(match As Predicate(Of T)) As T
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Find*
  nameWithType.vb: ImmutableList(Of T).Builder.Find(Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})
  id: FindAll(System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: FindAll(Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.FindAll(Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindAll(System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Retrieves all the elements that match the conditions defined by the specified predicate.
  example: []
  syntax:
    content: public ImmutableList<T> FindAll(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the elements to search for.
    return:
      type: System.Collections.Immutable.ImmutableList`1
      description: An immutable list containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty immutable list.
    content.vb: Public Function FindAll(match As Predicate(Of T)) As ImmutableList(Of T)
  overload: System.Collections.Immutable.ImmutableList`1.Builder.FindAll*
  nameWithType.vb: ImmutableList(Of T).Builder.FindAll(Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindAll(System.Predicate(Of T))
  name.vb: FindAll(Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})
  id: FindIndex(System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: FindIndex(Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.FindIndex(Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindIndex(System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire immutable list.
  example: []
  syntax:
    content: public int FindIndex(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the element to search for.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of an element that matches the conditions defined by <code class="paramref">match</code>, if found; otherwise, -1.
    content.vb: Public Function FindIndex(match As Predicate(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.FindIndex*
  nameWithType.vb: ImmutableList(Of T).Builder.FindIndex(Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})
  id: FindIndex(System.Int32,System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: FindIndex(int, Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.FindIndex(int, Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindIndex(int, System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.
  example: []
  syntax:
    content: public int FindIndex(int startIndex, Predicate<T> match)
    parameters:
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the search.
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the element to search for.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of an element that matches the conditions defined by <code class="paramref">match</code>, if found; otherwise, -1.
    content.vb: Public Function FindIndex(startIndex As Integer, match As Predicate(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.FindIndex*
  nameWithType.vb: ImmutableList(Of T).Builder.FindIndex(Integer, Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindIndex(Integer, System.Predicate(Of T))
  name.vb: FindIndex(Integer, Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  id: FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: FindIndex(int, int, Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.FindIndex(int, int, Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindIndex(int, int, System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.
  example: []
  syntax:
    content: public int FindIndex(int startIndex, int count, Predicate<T> match)
    parameters:
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the search.
    - id: count
      type: System.Int32
      description: The number of elements in the section to search.
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the element to search for.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of an element that matches the conditions defined by <code class="paramref">match</code>, if found; otherwise, -1.
    content.vb: Public Function FindIndex(startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.FindIndex*
  nameWithType.vb: ImmutableList(Of T).Builder.FindIndex(Integer, Integer, Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindIndex(Integer, Integer, System.Predicate(Of T))
  name.vb: FindIndex(Integer, Integer, Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})
  id: FindLast(System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: FindLast(Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.FindLast(Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindLast(System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire immutable list.
  example: []
  syntax:
    content: public T? FindLast(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the element to search for.
    return:
      type: '{T}'
      description: The last element that matches the conditions defined by the specified predicate, found; otherwise, the default value for type <code class="paramref">T</code>.
    content.vb: Public Function FindLast(match As Predicate(Of T)) As T
  overload: System.Collections.Immutable.ImmutableList`1.Builder.FindLast*
  nameWithType.vb: ImmutableList(Of T).Builder.FindLast(Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindLast(System.Predicate(Of T))
  name.vb: FindLast(Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})
  id: FindLastIndex(System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: FindLastIndex(Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.FindLastIndex(Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindLastIndex(System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire immutable list.
  example: []
  syntax:
    content: public int FindLastIndex(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the element to search for.
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of an element that matches the conditions defined by <code class="paramref">match</code>, if found; otherwise, -1.
    content.vb: Public Function FindLastIndex(match As Predicate(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex*
  nameWithType.vb: ImmutableList(Of T).Builder.FindLastIndex(Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindLastIndex(System.Predicate(Of T))
  name.vb: FindLastIndex(Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})
  id: FindLastIndex(System.Int32,System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: FindLastIndex(int, Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.FindLastIndex(int, Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindLastIndex(int, System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.
  example: []
  syntax:
    content: public int FindLastIndex(int startIndex, Predicate<T> match)
    parameters:
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the backward search.
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the element to search for.
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of an element that matches the conditions defined by <code class="paramref">match</code>, if found; otherwise, -1.
    content.vb: Public Function FindLastIndex(startIndex As Integer, match As Predicate(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex*
  nameWithType.vb: ImmutableList(Of T).Builder.FindLastIndex(Integer, Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindLastIndex(Integer, System.Predicate(Of T))
  name.vb: FindLastIndex(Integer, Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  id: FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: FindLastIndex(int, int, Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.FindLastIndex(int, int, Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindLastIndex(int, int, System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.
  example: []
  syntax:
    content: public int FindLastIndex(int startIndex, int count, Predicate<T> match)
    parameters:
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the backward search.
    - id: count
      type: System.Int32
      description: The number of elements in the section to search.
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the element to search for.
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of an element that matches the conditions defined by <code class="paramref">match</code>, if found; otherwise, -1.
    content.vb: Public Function FindLastIndex(startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex*
  nameWithType.vb: ImmutableList(Of T).Builder.FindLastIndex(Integer, Integer, Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindLastIndex(Integer, Integer, System.Predicate(Of T))
  name.vb: FindLastIndex(Integer, Integer, Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)
  id: IndexOf(`0,System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: IndexOf(T, int)
  nameWithType: ImmutableList<T>.Builder.IndexOf(T, int)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.IndexOf(T, int)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.
  example: []
  syntax:
    content: public int IndexOf(T item, int index)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the immutable list. The value can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for reference types.
    - id: index
      type: System.Int32
      description: The zero-based starting index of the search. 0 (zero) is valid in an empty list.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from <code class="paramref">index</code> to the last element, if found; otherwise, -1.
    content.vb: Public Function IndexOf(item As T, index As Integer) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.IndexOf*
  nameWithType.vb: ImmutableList(Of T).Builder.IndexOf(T, Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.IndexOf(T, Integer)
  name.vb: IndexOf(T, Integer)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)
  id: IndexOf(`0,System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: IndexOf(T, int, int)
  nameWithType: ImmutableList<T>.Builder.IndexOf(T, int, int)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.IndexOf(T, int, int)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.
  example: []
  syntax:
    content: public int IndexOf(T item, int index, int count)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the immutable list. The value can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for reference types.
    - id: index
      type: System.Int32
      description: The zero-based starting index of the search. 0 (zero) is valid in an empty list.
    - id: count
      type: System.Int32
      description: The number of elements in the section to search.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <code class="paramref">index</code> and contains <code class="paramref">count</code> number of elements, if found; otherwise, -1.
    content.vb: Public Function IndexOf(item As T, index As Integer, count As Integer) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.IndexOf*
  nameWithType.vb: ImmutableList(Of T).Builder.IndexOf(T, Integer, Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.IndexOf(T, Integer, Integer)
  name.vb: IndexOf(T, Integer, Integer)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  id: IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: IndexOf(T, int, int, IEqualityComparer<T>?)
  nameWithType: ImmutableList<T>.Builder.IndexOf(T, int, int, IEqualityComparer<T>?)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.IndexOf(T, int, int, System.Collections.Generic.IEqualityComparer<T>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <xref href="System.Collections.Immutable.ImmutableList%601.Builder" data-throw-if-not-resolved="false"></xref> that starts at the specified index and contains the specified number of elements.
  example: []
  syntax:
    content: public int IndexOf(T item, int index, int count, IEqualityComparer<T>? equalityComparer)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the immutable list. The value can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for reference types.
    - id: index
      type: System.Int32
      description: The zero-based starting index of the search. 0 (zero) is valid in an empty list.
    - id: count
      type: System.Int32
      description: The number of elements to search.
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The value comparer to use for comparing elements for equality.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <code class="paramref">index</code> and contains <code class="paramref">count</code> number of elements, if found; otherwise, -1
    content.vb: Public Function IndexOf(item As T, index As Integer, count As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.IndexOf*
  nameWithType.vb: ImmutableList(Of T).Builder.IndexOf(T, Integer, Integer, IEqualityComparer(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.IndexOf(T, Integer, Integer, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: IndexOf(T, Integer, Integer, IEqualityComparer(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)
  id: LastIndexOf(`0)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: LastIndexOf(T)
  nameWithType: ImmutableList<T>.Builder.LastIndexOf(T)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.LastIndexOf(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.
  example: []
  syntax:
    content: public int LastIndexOf(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the immutable list. The value can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for reference types.
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <code class="paramref">item</code> within the entire immutable list, if found; otherwise, -1.
    content.vb: Public Function LastIndexOf(item As T) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf*
  nameWithType.vb: ImmutableList(Of T).Builder.LastIndexOf(T)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.LastIndexOf(T)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)
  id: LastIndexOf(`0,System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: LastIndexOf(T, int)
  nameWithType: ImmutableList<T>.Builder.LastIndexOf(T, int)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.LastIndexOf(T, int)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.
  example: []
  syntax:
    content: public int LastIndexOf(T item, int startIndex)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the immutable list. The value can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for reference types.
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the backward search.
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <code class="paramref">item</code> within the range of elements in the immutable list that extends from the first element to <code class="paramref">index</code>, if found; otherwise, -1.
    content.vb: Public Function LastIndexOf(item As T, startIndex As Integer) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf*
  nameWithType.vb: ImmutableList(Of T).Builder.LastIndexOf(T, Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.LastIndexOf(T, Integer)
  name.vb: LastIndexOf(T, Integer)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)
  id: LastIndexOf(`0,System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: LastIndexOf(T, int, int)
  nameWithType: ImmutableList<T>.Builder.LastIndexOf(T, int, int)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.LastIndexOf(T, int, int)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.
  example: []
  syntax:
    content: public int LastIndexOf(T item, int startIndex, int count)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the immutable list. The value can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for reference types.
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the backward search.
    - id: count
      type: System.Int32
      description: The number of elements in the section to search.
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <code class="paramref">item</code> within the range of elements in the immutable list that contains <code class="paramref">count</code> number of elements and ends at <code class="paramref">index</code>, if found; otherwise, -1.
    content.vb: Public Function LastIndexOf(item As T, startIndex As Integer, count As Integer) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf*
  nameWithType.vb: ImmutableList(Of T).Builder.LastIndexOf(T, Integer, Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.LastIndexOf(T, Integer, Integer)
  name.vb: LastIndexOf(T, Integer, Integer)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  id: LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: LastIndexOf(T, int, int, IEqualityComparer<T>?)
  nameWithType: ImmutableList<T>.Builder.LastIndexOf(T, int, int, IEqualityComparer<T>?)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.LastIndexOf(T, int, int, System.Collections.Generic.IEqualityComparer<T>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.
  example: []
  syntax:
    content: public int LastIndexOf(T item, int startIndex, int count, IEqualityComparer<T>? equalityComparer)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the immutable list. The value can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for reference types.
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the search. 0 (zero) is valid in an empty list.
    - id: count
      type: System.Int32
      description: The number of elements to search.
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The value comparer to use for comparing elements for equality.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <code class="paramref">index</code> and contains <code class="paramref">count</code> number of elements, if found; otherwise, -1
    content.vb: Public Function LastIndexOf(item As T, startIndex As Integer, count As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf*
  nameWithType.vb: ImmutableList(Of T).Builder.LastIndexOf(T, Integer, Integer, IEqualityComparer(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.LastIndexOf(T, Integer, Integer, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: LastIndexOf(T, Integer, Integer, IEqualityComparer(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})
  id: TrueForAll(System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: TrueForAll(Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.TrueForAll(Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.TrueForAll(System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Determines whether every element in the immutable list matches the conditions defined by the specified predicate.
  example: []
  syntax:
    content: public bool TrueForAll(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions to check against the elements.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if every element in the immutable list matches the conditions defined by the specified predicate; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. If the list has no elements, the return value is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
    content.vb: Public Function TrueForAll(match As Predicate(Of T)) As Boolean
  overload: System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll*
  nameWithType.vb: ImmutableList(Of T).Builder.TrueForAll(Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.TrueForAll(System.Predicate(Of T))
  name.vb: TrueForAll(Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<T>)
  nameWithType: ImmutableList<T>.Builder.AddRange(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.AddRange(System.Collections.Generic.IEnumerable<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Adds a series of elements to the end of this list.
  example: []
  syntax:
    content: public void AddRange(IEnumerable<T> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The elements to add to the end of the list.
    content.vb: Public Sub AddRange(items As IEnumerable(Of T))
  overload: System.Collections.Immutable.ImmutableList`1.Builder.AddRange*
  nameWithType.vb: ImmutableList(Of T).Builder.AddRange(IEnumerable(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  id: InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: InsertRange(int, IEnumerable<T>)
  nameWithType: ImmutableList<T>.Builder.InsertRange(int, IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.InsertRange(int, System.Collections.Generic.IEnumerable<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Inserts the elements of a collection into the immutable list at the specified index.
  example: []
  syntax:
    content: public void InsertRange(int index, IEnumerable<T> items)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which the new elements should be inserted.
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection whose elements should be inserted into the immutable list. The collection itself cannot be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, but it can contain elements that are null, if type <code>T</code> is a reference type.
    content.vb: Public Sub InsertRange(index As Integer, items As IEnumerable(Of T))
  overload: System.Collections.Immutable.ImmutableList`1.Builder.InsertRange*
  nameWithType.vb: ImmutableList(Of T).Builder.InsertRange(Integer, IEnumerable(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.InsertRange(Integer, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Integer, IEnumerable(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})
  id: RemoveAll(System.Predicate{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: RemoveAll(Predicate<T>)
  nameWithType: ImmutableList<T>.Builder.RemoveAll(Predicate<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.RemoveAll(System.Predicate<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Removes all the elements that match the conditions defined by the specified predicate.
  example: []
  syntax:
    content: public int RemoveAll(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
      description: The delegate that defines the conditions of the elements to remove.
    return:
      type: System.Int32
      description: The number of elements removed from the immutable list.
    content.vb: Public Function RemoveAll(match As Predicate(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll*
  nameWithType.vb: ImmutableList(Of T).Builder.RemoveAll(Predicate(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Reverse
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse
  id: Reverse
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Reverse()
  nameWithType: ImmutableList<T>.Builder.Reverse()
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Reverse()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Reverses the order of the elements in the entire immutable list.
  example: []
  syntax:
    content: public void Reverse()
    content.vb: Public Sub Reverse()
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Reverse*
  nameWithType.vb: ImmutableList(Of T).Builder.Reverse()
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Reverse()
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)
  id: Reverse(System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Reverse(int, int)
  nameWithType: ImmutableList<T>.Builder.Reverse(int, int)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Reverse(int, int)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Reverses the order of the elements in the specified range of the immutable list.
  example: []
  syntax:
    content: public void Reverse(int index, int count)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based starting index of the range to reverse.
    - id: count
      type: System.Int32
      description: The number of elements in the range to reverse.
    content.vb: Public Sub Reverse(index As Integer, count As Integer)
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Reverse*
  nameWithType.vb: ImmutableList(Of T).Builder.Reverse(Integer, Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Reverse(Integer, Integer)
  name.vb: Reverse(Integer, Integer)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Sort
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Sort
  id: Sort
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Sort()
  nameWithType: ImmutableList<T>.Builder.Sort()
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Sort()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Sorts the elements in the entire immutable list by using the default comparer.
  example: []
  syntax:
    content: public void Sort()
    content.vb: Public Sub Sort()
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Sort*
  nameWithType.vb: ImmutableList(Of T).Builder.Sort()
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Sort()
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})
  id: Sort(System.Comparison{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Sort(Comparison<T>)
  nameWithType: ImmutableList<T>.Builder.Sort(Comparison<T>)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Sort(System.Comparison<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Sorts the elements in the entire immutable list by using the specified comparison object.
  example: []
  syntax:
    content: public void Sort(Comparison<T> comparison)
    parameters:
    - id: comparison
      type: System.Comparison{{T}}
      description: The object to use when comparing elements.
    content.vb: Public Sub Sort(comparison As Comparison(Of T))
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">comparison</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: ImmutableList(Of T).Builder.Sort(Comparison(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})
  id: Sort(System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Sort(IComparer<T>?)
  nameWithType: ImmutableList<T>.Builder.Sort(IComparer<T>?)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Sort(System.Collections.Generic.IComparer<T>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Sorts the elements in the entire immutable list by using the specified comparer.
  example: []
  syntax:
    content: public void Sort(IComparer<T>? comparer)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The implementation to use when comparing elements, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use the default comparer (<xref href="System.Collections.Generic.Comparer%601.Default" data-throw-if-not-resolved="false"></xref>).
    content.vb: Public Sub Sort(comparer As IComparer(Of T))
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Sort*
  nameWithType.vb: ImmutableList(Of T).Builder.Sort(IComparer(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  id: Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Sort(int, int, IComparer<T>?)
  nameWithType: ImmutableList<T>.Builder.Sort(int, int, IComparer<T>?)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Sort(int, int, System.Collections.Generic.IComparer<T>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Sorts the elements in a range of elements in the immutable list  by using the specified comparer.
  example: []
  syntax:
    content: public void Sort(int index, int count, IComparer<T>? comparer)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based starting index of the range to sort.
    - id: count
      type: System.Int32
      description: The length of the range to sort.
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The implementation to use when comparing elements, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use the default comparer (<xref href="System.Collections.Generic.Comparer%601.Default" data-throw-if-not-resolved="false"></xref>).
    content.vb: Public Sub Sort(index As Integer, count As Integer, comparer As IComparer(Of T))
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Sort*
  nameWithType.vb: ImmutableList(Of T).Builder.Sort(Integer, Integer, IComparer(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Sort(Integer, Integer, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Integer, Integer, IComparer(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)
  id: BinarySearch(`0)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: BinarySearch(T)
  nameWithType: ImmutableList<T>.Builder.BinarySearch(T)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.BinarySearch(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches the entire <xref href="System.Collections.Immutable.ImmutableList%601.Builder" data-throw-if-not-resolved="false"></xref> for an element using the default comparer and returns the zero-based index of the element.
  example: []
  syntax:
    content: public int BinarySearch(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate. The value can be null for reference types.
    return:
      type: System.Int32
      description: The zero-based index of item in the <xref href="System.Collections.Immutable.ImmutableList%601.Builder" data-throw-if-not-resolved="false"></xref>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <code class="paramref">item</code>.
    content.vb: Public Function BinarySearch(item As T) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The default comparer <xref href="System.Collections.Generic.Comparer%601.Default" data-throw-if-not-resolved="false"></xref> cannot find an implementation of the <xref href="System.IComparable%601" data-throw-if-not-resolved="false"></xref> generic interface or the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface for type T.
  nameWithType.vb: ImmutableList(Of T).Builder.BinarySearch(T)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.BinarySearch(T)
- uid: System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  id: BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: BinarySearch(T, IComparer<T>?)
  nameWithType: ImmutableList<T>.Builder.BinarySearch(T, IComparer<T>?)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.BinarySearch(T, System.Collections.Generic.IComparer<T>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches the entire <xref href="System.Collections.Immutable.ImmutableList%601.Builder" data-throw-if-not-resolved="false"></xref> for an element using the specified comparer and returns the zero-based index of the element.
  example: []
  syntax:
    content: public int BinarySearch(T item, IComparer<T>? comparer)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate. This value can be null for reference types.
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The implementation to use when comparing elements, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the default comparer.
    return:
      type: System.Int32
      description: The zero-based index of item in the <xref href="System.Collections.Immutable.ImmutableList%601.Builder" data-throw-if-not-resolved="false"></xref>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <code class="paramref">item</code>.
    content.vb: Public Function BinarySearch(item As T, comparer As IComparer(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code class="paramref">comparer</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, and the default comparer <xref href="System.Collections.Generic.Comparer%601.Default" data-throw-if-not-resolved="false"></xref> cannot find an implementation of the <xref href="System.IComparable%601" data-throw-if-not-resolved="false"></xref> generic interface or the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface for type T.
  nameWithType.vb: ImmutableList(Of T).Builder.BinarySearch(T, IComparer(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  id: BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: BinarySearch(int, int, T, IComparer<T>?)
  nameWithType: ImmutableList<T>.Builder.BinarySearch(int, int, T, IComparer<T>?)
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.BinarySearch(int, int, T, System.Collections.Generic.IComparer<T>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Searches the specified range of the <xref href="System.Collections.Immutable.ImmutableList%601.Builder" data-throw-if-not-resolved="false"></xref> for an element using the specified comparer and returns the zero-based index of the element.
  example: []
  syntax:
    content: public int BinarySearch(int index, int count, T item, IComparer<T>? comparer)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based starting index of the range to search.
    - id: count
      type: System.Int32
      description: The length of the range to search.
    - id: item
      type: '{T}'
      description: The object to locate. This value can be null for reference types.
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The implementation to use when comparing elements, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for the default comparer.
    return:
      type: System.Int32
      description: The zero-based index of item in the <xref href="System.Collections.Immutable.ImmutableList%601.Builder" data-throw-if-not-resolved="false"></xref>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <code class="paramref">item</code>.
    content.vb: Public Function BinarySearch(index As Integer, count As Integer, item As T, comparer As IComparer(Of T)) As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "    <code class=\"paramref\">index</code> is less than 0.\r\n-or-\r\n\r\n<code class=\"paramref\">count</code> is less than 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">index</code> and <code class="paramref">count</code> do not denote a valid range in the <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref>.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code class="paramref">comparer</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, and the default comparer <xref href="System.Collections.Generic.Comparer%601.Default" data-throw-if-not-resolved="false"></xref> cannot find an implementation of the <xref href="System.IComparable%601" data-throw-if-not-resolved="false"></xref> generic interface or the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface for type T.
  nameWithType.vb: ImmutableList(Of T).Builder.BinarySearch(Integer, Integer, T, IComparer(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.BinarySearch(Integer, Integer, T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(Integer, Integer, T, IComparer(Of T))
- uid: System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable
  commentId: M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable
  id: ToImmutable
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: ToImmutable()
  nameWithType: ImmutableList<T>.Builder.ToImmutable()
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.ToImmutable()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an immutable list based on the contents of this instance.
  example: []
  syntax:
    content: public ImmutableList<T> ToImmutable()
    return:
      type: System.Collections.Immutable.ImmutableList`1
      description: An immutable list.
    content.vb: Public Function ToImmutable() As ImmutableList(Of T)
  overload: System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable*
  nameWithType.vb: ImmutableList(Of T).Builder.ToImmutable()
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.ToImmutable()
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Count
  commentId: P:System.Collections.Immutable.ImmutableList`1.Builder.Count
  id: Count
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ImmutableList<T>.Builder.Count
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Count
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets the number of elements in this immutable list.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements in this list.
    content.vb: Public ReadOnly Property Count As Integer
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Count*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  - System.Collections.ICollection.Count
  - System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  nameWithType.vb: ImmutableList(Of T).Builder.Count
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Count
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)
  commentId: P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Immutable.ImmutableList`1.Builder
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: ImmutableList<T>.Builder.this[int]
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.this[int]
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets or sets the value for a given index in the list.
  example: []
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the item to get or set.
    return:
      type: '{T}'
      description: The value at the specified index.
    content.vb: Public Default Property this[](index As Integer) As T
  overload: System.Collections.Immutable.ImmutableList`1.Builder.Item*
  implements:
  - System.Collections.Generic.IList{{T}}.Item(System.Int32)
  - System.Collections.Generic.IReadOnlyList{{T}}.Item(System.Int32)
  nameWithType.vb: ImmutableList(Of T).Builder.this[](Integer)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.this[](Integer)
  name.vb: this[](Integer)
references:
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.icollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableArray.ToImmutableArray``1
  commentId: M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableArray
  definition: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableArray.html#System_Collections_Immutable_ImmutableArray_ToImmutableArray__1_System_Collections_Generic_IEnumerable___0__
  name: ToImmutableArray<T>(IEnumerable<T>)
  nameWithType: ImmutableArray.ToImmutableArray<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableArray.ToImmutableArray<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ImmutableArray.ToImmutableArray(Of T)(IEnumerable(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableArray.ToImmutableArray(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ToImmutableArray(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{`0})
    name: ToImmutableArray
    isExternal: true
    href: System.Collections.Immutable.ImmutableArray.html#System_Collections_Immutable_ImmutableArray_ToImmutableArray__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{`0})
    name: ToImmutableArray
    isExternal: true
    href: System.Collections.Immutable.ImmutableArray.html#System_Collections_Immutable_ImmutableArray_ToImmutableArray__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Func{{T},{TKey}})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  definition: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: ToImmutableDictionary<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>)
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey))
  name.vb: ToImmutableDictionary(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  definition: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Collections_Generic_IEqualityComparer___1__
  name: ToImmutableDictionary<T, TKey>(IEnumerable<T>, Func<T, TKey>, IEqualityComparer<TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<T, TKey>(IEnumerable<T>, Func<T, TKey>, IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey), IEqualityComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToImmutableDictionary(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Collections_Generic_IEqualityComparer___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Collections_Generic_IEqualityComparer___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Collections.Immutable.ImmutableDictionary
  definition: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  name: ToImmutableDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<T, TKey, TValue>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>, System.Func<T, TValue>)
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of T, TKey, TValue)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey), System.Func(Of T, TValue))
  name.vb: ToImmutableDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}},System.Collections.Generic.IEqualityComparer{{TKey}})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  definition: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__
  name: ToImmutableDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, IEqualityComparer<TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<T, TKey, TValue>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>, System.Func<T, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue), IEqualityComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of T, TKey, TValue)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey), System.Func(Of T, TValue), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToImmutableDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}},System.Collections.Generic.IEqualityComparer{{TKey}},System.Collections.Generic.IEqualityComparer{{TValue}})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Collections.Immutable.ImmutableDictionary
  definition: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__System_Collections_Generic_IEqualityComparer___2__
  name: ToImmutableDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<T, TKey, TValue>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>, System.Func<T, TValue>, System.Collections.Generic.IEqualityComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of T, TKey, TValue)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey), System.Func(Of T, TValue), System.Collections.Generic.IEqualityComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: ToImmutableDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__System_Collections_Generic_IEqualityComparer___2__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__System_Collections_Generic_IEqualityComparer___2__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1
  commentId: M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  definition: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__
  name: ToImmutableHashSet<T>(IEnumerable<T>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ImmutableHashSet.ToImmutableHashSet(Of T)(IEnumerable(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ToImmutableHashSet(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{`0})
    name: ToImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{`0})
    name: ToImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEqualityComparer{{T}})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  definition: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  name: ToImmutableHashSet<T>(IEnumerable<T>, IEqualityComparer<T>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<T>(IEnumerable<T>, IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  nameWithType.vb: ImmutableHashSet.ToImmutableHashSet(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: ToImmutableHashSet(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
    name: ToImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
    name: ToImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableList.ToImmutableList``1
  commentId: M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  definition: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Generic_IEnumerable___0__
  name: ToImmutableList<T>(IEnumerable<T>)
  nameWithType: ImmutableList.ToImmutableList<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableList.ToImmutableList<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ImmutableList.ToImmutableList(Of T)(IEnumerable(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableList.ToImmutableList(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ToImmutableList(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{`0})
    name: ToImmutableList
    isExternal: true
    href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{`0})
    name: ToImmutableList
    isExternal: true
    href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  definition: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  name: ToImmutableSortedDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<T, TKey, TValue>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>, System.Func<T, TValue>)
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of T, TKey, TValue)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey), System.Func(Of T, TValue))
  name.vb: ToImmutableSortedDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}},System.Collections.Generic.IComparer{{TKey}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  definition: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__
  name: ToImmutableSortedDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, IComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<T, TKey, TValue>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>, System.Func<T, TValue>, System.Collections.Generic.IComparer<TKey>)
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue), IComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of T, TKey, TValue)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey), System.Func(Of T, TValue), System.Collections.Generic.IComparer(Of TKey))
  name.vb: ToImmutableSortedDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2},System.Collections.Generic.IComparer{``1})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2},System.Collections.Generic.IComparer{``1})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TValue}},System.Collections.Generic.IComparer{{TKey}},System.Collections.Generic.IEqualityComparer{{TValue}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  definition: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__System_Collections_Generic_IEqualityComparer___2__
  name: ToImmutableSortedDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<T, TKey, TValue>(IEnumerable<T>, Func<T, TKey>, Func<T, TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<T, TKey, TValue>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>, System.Func<T, TValue>, System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue), IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of T, TKey, TValue)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey), System.Func(Of T, TValue), System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: ToImmutableSortedDictionary(Of T, TKey, TValue)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TValue), IComparer(Of TKey), IEqualityComparer(Of TValue))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__System_Collections_Generic_IEqualityComparer___2__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1},System.Func{`0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__System_Collections_Generic_IEqualityComparer___2__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1
  commentId: M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  definition: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__
  name: ToImmutableSortedSet<T>(IEnumerable<T>)
  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ImmutableSortedSet.ToImmutableSortedSet(Of T)(IEnumerable(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ToImmutableSortedSet(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{`0})
    name: ToImmutableSortedSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{`0})
    name: ToImmutableSortedSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IComparer{{T}})
  commentId: M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  definition: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  name: ToImmutableSortedSet<T>(IEnumerable<T>, IComparer<T>)
  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<T>(IEnumerable<T>, IComparer<T>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: ImmutableSortedSet.ToImmutableSortedSet(Of T)(IEnumerable(Of T), IComparer(Of T))
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IComparer(Of T))
  name.vb: ToImmutableSortedSet(Of T)(IEnumerable(Of T), IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})
    name: ToImmutableSortedSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})
    name: ToImmutableSortedSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.System.Collections.Immutable.ImmutableList.ToImmutableList``1
  commentId: M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Immutable.ImmutableList{``0}.Builder)
  parent: System.Collections.Immutable.ImmutableList
  definition: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Immutable.ImmutableList{``0}.Builder)
  href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Immutable_ImmutableList___0__Builder_
  name: ToImmutableList<T>(Builder)
  nameWithType: ImmutableList.ToImmutableList<T>(ImmutableList<T>.Builder)
  fullName: System.Collections.Immutable.ImmutableList.ToImmutableList<T>(System.Collections.Immutable.ImmutableList<T>.Builder)
  nameWithType.vb: ImmutableList.ToImmutableList(Of T)(ImmutableList(Of T).Builder)
  fullName.vb: System.Collections.Immutable.ImmutableList.ToImmutableList(Of T)(System.Collections.Immutable.ImmutableList(Of T).Builder)
  name.vb: ToImmutableList(Of T)(Builder)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Immutable.ImmutableList{`0}.Builder)
    name: ToImmutableList
    isExternal: true
    href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Immutable_ImmutableList___0__Builder_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Immutable.ImmutableList`1.Builder
    name: Builder
    isExternal: true
    href: System.Collections.Immutable.ImmutableList-1.Builder.html
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Immutable.ImmutableList{`0}.Builder)
    name: ToImmutableList
    isExternal: true
    href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Immutable_ImmutableList___0__Builder_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Immutable.ImmutableList`1.Builder
    name: Builder
    isExternal: true
    href: System.Collections.Immutable.ImmutableList-1.Builder.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: System.Collections.Immutable.ImmutableArray.html#System_Collections_Immutable_ImmutableArray_ToImmutableArray__1_System_Collections_Generic_IEnumerable___0__
  name: ToImmutableArray<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableArray.ToImmutableArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  nameWithType.vb: ImmutableArray.ToImmutableArray(Of TSource)(IEnumerable(Of TSource))
  fullName.vb: System.Collections.Immutable.ImmutableArray.ToImmutableArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToImmutableArray(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
    name: ToImmutableArray
    isExternal: true
    href: System.Collections.Immutable.ImmutableArray.html#System_Collections_Immutable_ImmutableArray_ToImmutableArray__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
    name: ToImmutableArray
    isExternal: true
    href: System.Collections.Immutable.ImmutableArray.html#System_Collections_Immutable_ImmutableArray_ToImmutableArray__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableArray
  commentId: T:System.Collections.Immutable.ImmutableArray
  parent: System.Collections.Immutable
  isExternal: true
  href: System.Collections.Immutable.ImmutableArray.html
  name: ImmutableArray
  nameWithType: ImmutableArray
  fullName: System.Collections.Immutable.ImmutableArray
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToImmutableDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableDictionary
  commentId: T:System.Collections.Immutable.ImmutableDictionary
  parent: System.Collections.Immutable
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html
  name: ImmutableDictionary
  nameWithType: ImmutableDictionary
  fullName: System.Collections.Immutable.ImmutableDictionary
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Collections_Generic_IEqualityComparer___1__
  name: ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToImmutableDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Collections_Generic_IEqualityComparer___1__
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Collections_Generic_IEqualityComparer___1__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  name: ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>)
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue))
  name.vb: ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__
  name: ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IEqualityComparer<TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IEqualityComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__System_Collections_Generic_IEqualityComparer___2__
  name: ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IEqualityComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue), System.Collections.Generic.IEqualityComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__System_Collections_Generic_IEqualityComparer___2__
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
    name: ToImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__System_Collections_Generic_IEqualityComparer___2__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  nameWithType.vb: ImmutableHashSet.ToImmutableHashSet(Of TSource)(IEnumerable(Of TSource))
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToImmutableHashSet(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
    name: ToImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
    name: ToImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableHashSet
  commentId: T:System.Collections.Immutable.ImmutableHashSet
  parent: System.Collections.Immutable
  isExternal: true
  href: System.Collections.Immutable.ImmutableHashSet.html
  name: ImmutableHashSet
  nameWithType: ImmutableHashSet
  fullName: System.Collections.Immutable.ImmutableHashSet
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  nameWithType.vb: ImmutableHashSet.ToImmutableHashSet(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName.vb: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: ToImmutableHashSet(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: ToImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TSource
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: ToImmutableHashSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableHashSet.html#System_Collections_Immutable_ImmutableHashSet_ToImmutableHashSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Generic_IEnumerable___0__
  name: ToImmutableList<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableList.ToImmutableList<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  nameWithType.vb: ImmutableList.ToImmutableList(Of TSource)(IEnumerable(Of TSource))
  fullName.vb: System.Collections.Immutable.ImmutableList.ToImmutableList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToImmutableList(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
    name: ToImmutableList
    isExternal: true
    href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
    name: ToImmutableList
    isExternal: true
    href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableList
  commentId: T:System.Collections.Immutable.ImmutableList
  parent: System.Collections.Immutable
  isExternal: true
  href: System.Collections.Immutable.ImmutableList.html
  name: ImmutableList
  nameWithType: ImmutableList
  fullName: System.Collections.Immutable.ImmutableList
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  name: ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>)
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue))
  name.vb: ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableSortedDictionary
  commentId: T:System.Collections.Immutable.ImmutableSortedDictionary
  parent: System.Collections.Immutable
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedDictionary.html
  name: ImmutableSortedDictionary
  nameWithType: ImmutableSortedDictionary
  fullName: System.Collections.Immutable.ImmutableSortedDictionary
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__
  name: ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IComparer<TKey>)
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue), System.Collections.Generic.IComparer(Of TKey))
  name.vb: ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: TKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__System_Collections_Generic_IEqualityComparer___2__
  name: ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  nameWithType.vb: ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue), System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IComparer(Of TKey), IEqualityComparer(Of TValue))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__System_Collections_Generic_IEqualityComparer___2__
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: TKey
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
    name: ToImmutableSortedDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedDictionary.html#System_Collections_Immutable_ImmutableSortedDictionary_ToImmutableSortedDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IComparer___1__System_Collections_Generic_IEqualityComparer___2__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__
  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  nameWithType.vb: ImmutableSortedSet.ToImmutableSortedSet(Of TSource)(IEnumerable(Of TSource))
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToImmutableSortedSet(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
    name: ToImmutableSortedSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
    name: ToImmutableSortedSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableSortedSet
  commentId: T:System.Collections.Immutable.ImmutableSortedSet
  parent: System.Collections.Immutable
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedSet.html
  name: ImmutableSortedSet
  nameWithType: ImmutableSortedSet
  fullName: System.Collections.Immutable.ImmutableSortedSet
- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  isExternal: true
  href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)
  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IComparer<TSource>)
  nameWithType.vb: ImmutableSortedSet.ToImmutableSortedSet(Of TSource)(IEnumerable(Of TSource), IComparer(Of TSource))
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IComparer(Of TSource))
  name.vb: ToImmutableSortedSet(Of TSource)(IEnumerable(Of TSource), IComparer(Of TSource))
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
    name: ToImmutableSortedSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: TSource
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
    name: ToImmutableSortedSet
    isExternal: true
    href: System.Collections.Immutable.ImmutableSortedSet.html#System_Collections_Immutable_ImmutableSortedSet_ToImmutableSortedSet__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: )
- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Immutable.ImmutableList{``0}.Builder)
  commentId: M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Immutable.ImmutableList{``0}.Builder)
  isExternal: true
  href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Immutable_ImmutableList___0__Builder_
  name: ToImmutableList<TSource>(Builder)
  nameWithType: ImmutableList.ToImmutableList<TSource>(ImmutableList<TSource>.Builder)
  fullName: System.Collections.Immutable.ImmutableList.ToImmutableList<TSource>(System.Collections.Immutable.ImmutableList<TSource>.Builder)
  nameWithType.vb: ImmutableList.ToImmutableList(Of TSource)(ImmutableList(Of TSource).Builder)
  fullName.vb: System.Collections.Immutable.ImmutableList.ToImmutableList(Of TSource)(System.Collections.Immutable.ImmutableList(Of TSource).Builder)
  name.vb: ToImmutableList(Of TSource)(Builder)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Immutable.ImmutableList{``0}.Builder)
    name: ToImmutableList
    isExternal: true
    href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Immutable_ImmutableList___0__Builder_
  - name: <
  - name: TSource
  - name: '>'
  - name: (
  - uid: System.Collections.Immutable.ImmutableList{``0}.Builder
    name: Builder
    isExternal: true
    href: System.Collections.Immutable.ImmutableList-1.Builder.html
  - name: )
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Immutable.ImmutableList{``0}.Builder)
    name: ToImmutableList
    isExternal: true
    href: System.Collections.Immutable.ImmutableList.html#System_Collections_Immutable_ImmutableList_ToImmutableList__1_System_Collections_Immutable_ImmutableList___0__Builder_
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
  - name: (
  - uid: System.Collections.Immutable.ImmutableList{``0}.Builder
    name: Builder
    isExternal: true
    href: System.Collections.Immutable.ImmutableList-1.Builder.html
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.ItemRef*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.ItemRef
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_ItemRef_System_Int32_
  name: ItemRef
  nameWithType: ImmutableList<T>.Builder.ItemRef
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.ItemRef
  nameWithType.vb: ImmutableList(Of T).Builder.ItemRef
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.ItemRef
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Immutable.ImmutableList`1.Builder.IndexOf*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_IndexOf__0_
  name: IndexOf
  nameWithType: ImmutableList<T>.Builder.IndexOf
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.IndexOf
  nameWithType.vb: ImmutableList(Of T).Builder.IndexOf
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.IndexOf
- uid: System.Collections.Generic.IList{{T}}.IndexOf({T})
  commentId: M:System.Collections.Generic.IList{`0}.IndexOf(`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Insert*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Insert
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Insert_System_Int32__0_
  name: Insert
  nameWithType: ImmutableList<T>.Builder.Insert
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Insert
  nameWithType.vb: ImmutableList(Of T).Builder.Insert
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Insert
- uid: System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  commentId: M:System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: ImmutableList<T>.Builder.RemoveAt
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.RemoveAt
  nameWithType.vb: ImmutableList(Of T).Builder.RemoveAt
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.RemoveAt
- uid: System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.IList.RemoveAt(System.Int32)
  commentId: M:System.Collections.IList.RemoveAt(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist.removeat
  name: RemoveAt(int)
  nameWithType: IList.RemoveAt(int)
  fullName: System.Collections.IList.RemoveAt(int)
  nameWithType.vb: IList.RemoveAt(Integer)
  fullName.vb: System.Collections.IList.RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ilist.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Add*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Add
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Add__0_
  name: Add
  nameWithType: ImmutableList<T>.Builder.Add
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Add
  nameWithType.vb: ImmutableList(Of T).Builder.Add
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Add
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Clear*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Clear
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Clear
  name: Clear
  nameWithType: ImmutableList<T>.Builder.Clear
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Clear
  nameWithType.vb: ImmutableList(Of T).Builder.Clear
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Clear
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Contains*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Contains
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Contains__0_
  name: Contains
  nameWithType: ImmutableList<T>.Builder.Contains
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Contains
  nameWithType.vb: ImmutableList(Of T).Builder.Contains
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Remove*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Remove
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Remove__0_
  name: Remove
  nameWithType: ImmutableList<T>.Builder.Remove
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Remove
  nameWithType.vb: ImmutableList(Of T).Builder.Remove
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_GetEnumerator
  name: GetEnumerator
  nameWithType: ImmutableList<T>.Builder.GetEnumerator
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.GetEnumerator
  nameWithType.vb: ImmutableList(Of T).Builder.GetEnumerator
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.GetEnumerator
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator
  commentId: T:System.Collections.Immutable.ImmutableList`1.Enumerator
  parent: System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  name: ImmutableList<T>.Enumerator
  nameWithType: ImmutableList<T>.Enumerator
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator
  nameWithType.vb: ImmutableList(Of T).Enumerator
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Enumerator
  name.vb: ImmutableList(Of T).Enumerator
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: System.Collections.Immutable.ImmutableList`1.Enumerator
    name: Enumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1.enumerator
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: System.Collections.Immutable.ImmutableList`1.Enumerator
    name: Enumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1.enumerator
- uid: System.Collections.Immutable.ImmutableList`1.Builder.ForEach*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.ForEach
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_ForEach_System_Action__0__
  name: ForEach
  nameWithType: ImmutableList<T>.Builder.ForEach
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.ForEach
  nameWithType.vb: ImmutableList(Of T).Builder.ForEach
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.ForEach
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.CopyTo*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_CopyTo__0___
  name: CopyTo
  nameWithType: ImmutableList<T>.Builder.CopyTo
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.CopyTo
  nameWithType.vb: ImmutableList(Of T).Builder.CopyTo
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.CopyTo
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.GetRange*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.GetRange
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_GetRange_System_Int32_System_Int32_
  name: GetRange
  nameWithType: ImmutableList<T>.Builder.GetRange
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.GetRange
  nameWithType.vb: ImmutableList(Of T).Builder.GetRange
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.GetRange
- uid: System.Collections.Immutable.ImmutableList`1
  commentId: T:System.Collections.Immutable.ImmutableList`1
  parent: System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  name: ImmutableList<T>
  nameWithType: ImmutableList<T>
  fullName: System.Collections.Immutable.ImmutableList<T>
  nameWithType.vb: ImmutableList(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T)
  name.vb: ImmutableList(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_ConvertAll__1_System_Func__0___0__
  name: ConvertAll
  nameWithType: ImmutableList<T>.Builder.ConvertAll
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.ConvertAll
  nameWithType.vb: ImmutableList(Of T).Builder.ConvertAll
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.ConvertAll
- uid: System.Func{{T},{TOutput}}
  commentId: T:System.Func{`0,``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TOutput>
  nameWithType: Func<T, TOutput>
  fullName: System.Func<T, TOutput>
  nameWithType.vb: Func(Of T, TOutput)
  fullName.vb: System.Func(Of T, TOutput)
  name.vb: Func(Of T, TOutput)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TOutput
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TOutput
  - name: )
- uid: System.Collections.Immutable.ImmutableList{{TOutput}}
  commentId: T:System.Collections.Immutable.ImmutableList{``0}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableList`1
  href: System.Collections.Immutable.ImmutableList-1.html
  name: ImmutableList<TOutput>
  nameWithType: ImmutableList<TOutput>
  fullName: System.Collections.Immutable.ImmutableList<TOutput>
  nameWithType.vb: ImmutableList(Of TOutput)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of TOutput)
  name.vb: ImmutableList(Of TOutput)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: System.Collections.Immutable.ImmutableList-1.html
  - name: <
  - name: TOutput
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: System.Collections.Immutable.ImmutableList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TOutput
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Exists*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Exists
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Exists_System_Predicate__0__
  name: Exists
  nameWithType: ImmutableList<T>.Builder.Exists
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Exists
  nameWithType.vb: ImmutableList(Of T).Builder.Exists
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Exists
- uid: System.Predicate{{T}}
  commentId: T:System.Predicate{`0}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Find*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Find
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Find_System_Predicate__0__
  name: Find
  nameWithType: ImmutableList<T>.Builder.Find
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Find
  nameWithType.vb: ImmutableList(Of T).Builder.Find
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Find
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindAll*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.FindAll
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_FindAll_System_Predicate__0__
  name: FindAll
  nameWithType: ImmutableList<T>.Builder.FindAll
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindAll
  nameWithType.vb: ImmutableList(Of T).Builder.FindAll
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindAll
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindIndex*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_FindIndex_System_Predicate__0__
  name: FindIndex
  nameWithType: ImmutableList<T>.Builder.FindIndex
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindIndex
  nameWithType.vb: ImmutableList(Of T).Builder.FindIndex
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindIndex
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindLast*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.FindLast
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_FindLast_System_Predicate__0__
  name: FindLast
  nameWithType: ImmutableList<T>.Builder.FindLast
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindLast
  nameWithType.vb: ImmutableList(Of T).Builder.FindLast
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindLast
- uid: System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_FindLastIndex_System_Predicate__0__
  name: FindLastIndex
  nameWithType: ImmutableList<T>.Builder.FindLastIndex
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.FindLastIndex
  nameWithType.vb: ImmutableList(Of T).Builder.FindLastIndex
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.FindLastIndex
- uid: System.Collections.Immutable.ImmutableList`1.Builder
  commentId: T:System.Collections.Immutable.ImmutableList`1.Builder
  parent: System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  name: ImmutableList<T>.Builder
  nameWithType: ImmutableList<T>.Builder
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder
  nameWithType.vb: ImmutableList(Of T).Builder
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder
  name.vb: ImmutableList(Of T).Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: System.Collections.Immutable.ImmutableList`1.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1.builder
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: System.Collections.Immutable.ImmutableList`1.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1.builder
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_LastIndexOf__0_
  name: LastIndexOf
  nameWithType: ImmutableList<T>.Builder.LastIndexOf
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.LastIndexOf
  nameWithType.vb: ImmutableList(Of T).Builder.LastIndexOf
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.LastIndexOf
- uid: System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_TrueForAll_System_Predicate__0__
  name: TrueForAll
  nameWithType: ImmutableList<T>.Builder.TrueForAll
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.TrueForAll
  nameWithType.vb: ImmutableList(Of T).Builder.TrueForAll
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.TrueForAll
- uid: System.Collections.Immutable.ImmutableList`1.Builder.AddRange*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.AddRange
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_AddRange_System_Collections_Generic_IEnumerable__0__
  name: AddRange
  nameWithType: ImmutableList<T>.Builder.AddRange
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.AddRange
  nameWithType.vb: ImmutableList(Of T).Builder.AddRange
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.AddRange
- uid: System.Collections.Immutable.ImmutableList`1.Builder.InsertRange*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_InsertRange_System_Int32_System_Collections_Generic_IEnumerable__0__
  name: InsertRange
  nameWithType: ImmutableList<T>.Builder.InsertRange
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.InsertRange
  nameWithType.vb: ImmutableList(Of T).Builder.InsertRange
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.InsertRange
- uid: System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_RemoveAll_System_Predicate__0__
  name: RemoveAll
  nameWithType: ImmutableList<T>.Builder.RemoveAll
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.RemoveAll
  nameWithType.vb: ImmutableList(Of T).Builder.RemoveAll
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.RemoveAll
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Reverse*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Reverse
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Reverse
  name: Reverse
  nameWithType: ImmutableList<T>.Builder.Reverse
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Reverse
  nameWithType.vb: ImmutableList(Of T).Builder.Reverse
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Reverse
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Sort*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Sort
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Sort
  name: Sort
  nameWithType: ImmutableList<T>.Builder.Sort
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Sort
  nameWithType.vb: ImmutableList(Of T).Builder.Sort
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Sort
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Comparison{{T}}
  commentId: T:System.Comparison{`0}
  parent: System
  definition: System.Comparison`1
  href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  nameWithType.vb: Comparison(Of T)
  fullName.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Comparison`1
  commentId: T:System.Comparison`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  nameWithType.vb: Comparison(Of T)
  fullName.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.Comparer`1.Default
  commentId: P:System.Collections.Generic.Comparer`1.Default
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.comparer-1.default
  name: Default
  nameWithType: Comparer<T>.Default
  fullName: System.Collections.Generic.Comparer<T>.Default
  nameWithType.vb: Comparer(Of T).Default
  fullName.vb: System.Collections.Generic.Comparer(Of T).Default
- uid: System.Collections.Generic.IComparer{{T}}
  commentId: T:System.Collections.Generic.IComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IComparable
  commentId: T:System.IComparable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_BinarySearch__0_
  name: BinarySearch
  nameWithType: ImmutableList<T>.Builder.BinarySearch
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.BinarySearch
  nameWithType.vb: ImmutableList(Of T).Builder.BinarySearch
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.BinarySearch
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_ToImmutable
  name: ToImmutable
  nameWithType: ImmutableList<T>.Builder.ToImmutable
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.ToImmutable
  nameWithType.vb: ImmutableList(Of T).Builder.ToImmutable
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.ToImmutable
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Count*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Count
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Count
  name: Count
  nameWithType: ImmutableList<T>.Builder.Count
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.Count
  nameWithType.vb: ImmutableList(Of T).Builder.Count
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.Count
- uid: System.Collections.Generic.ICollection{{T}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.icollection.count
  name: Count
  nameWithType: ICollection.Count
  fullName: System.Collections.ICollection.Count
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{`0}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{{T}}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: System.Collections.Immutable.ImmutableList`1.Builder.Item*
  commentId: Overload:System.Collections.Immutable.ImmutableList`1.Builder.Item
  isExternal: true
  href: System.Collections.Immutable.ImmutableList-1.Builder.html#System_Collections_Immutable_ImmutableList_1_Builder_Item_System_Int32_
  name: this
  nameWithType: ImmutableList<T>.Builder.this
  fullName: System.Collections.Immutable.ImmutableList<T>.Builder.this
  nameWithType.vb: ImmutableList(Of T).Builder.this[]
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T).Builder.this[]
  name.vb: this[]
- uid: System.Collections.Generic.IList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IReadOnlyList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IReadOnlyList{{T}}
  definition: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IReadOnlyList<T>.this[int]
  fullName: System.Collections.Generic.IReadOnlyList<T>.this[int]
  nameWithType.vb: IReadOnlyList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList{`0}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IReadOnlyList<T>.this[int]
  fullName: System.Collections.Generic.IReadOnlyList<T>.this[int]
  nameWithType.vb: IReadOnlyList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
