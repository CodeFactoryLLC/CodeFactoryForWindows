### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
  id: NamedSyntax
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  children:
  - CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.#ctor(System.String,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Create(System.String,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Name
  - CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Syntax
  langs:
  - csharp
  - vb
  name: NamedSyntax
  nameWithType: NamedSyntax
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
  type: Class
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/NamedSyntax.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Data class that provides syntax by a target name. Used in blocks and builders when more then one set of syntax needs to be provided.
  example: []
  syntax:
    content: public class NamedSyntax
    content.vb: Public Class NamedSyntax
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.#ctor(System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
  langs:
  - csharp
  - vb
  name: NamedSyntax(string, string)
  nameWithType: NamedSyntax.NamedSyntax(string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.NamedSyntax(string, string)
  type: Constructor
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/NamedSyntax.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Creates a new instance of <xref href="CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public NamedSyntax(string name, string syntax)
    parameters:
    - id: name
      type: System.String
      description: The name to be used to identify the syntax.
    - id: syntax
      type: System.String
      description: syntax used to be used in blocks or builders.
    content.vb: Public Sub New(name As String, syntax As String)
  overload: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.#ctor*
  nameWithType.vb: NamedSyntax.New(String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.New(String, String)
  name.vb: New(String, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Create(System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Create(System.String,System.String)
  id: Create(System.String,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
  langs:
  - csharp
  - vb
  name: Create(string, string)
  nameWithType: NamedSyntax.Create(string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Create(string, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/NamedSyntax.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Creates a new instance of <xref href="CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static NamedSyntax Create(string name, string syntax)
    parameters:
    - id: name
      type: System.String
      description: The name to be used to identify the syntax.
    - id: syntax
      type: System.String
      description: syntax used to be used in blocks or builders.
    return:
      type: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    content.vb: Public Shared Function Create(name As String, syntax As String) As NamedSyntax
  overload: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Create*
  nameWithType.vb: NamedSyntax.Create(String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Create(String, String)
  name.vb: Create(String, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Name
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Name
  id: Name
  parent: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NamedSyntax.Name
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Name
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/NamedSyntax.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: The name to be used to identify the syntax.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Name*
- uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Syntax
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Syntax
  id: Syntax
  parent: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
  langs:
  - csharp
  - vb
  name: Syntax
  nameWithType: NamedSyntax.Syntax
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Syntax
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/NamedSyntax.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: syntax used to be used in blocks or builders.
  example: []
  syntax:
    content: public string Syntax { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Syntax As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Syntax*
references:
- uid: CodeFactory.WinVs.Models.CSharp.Builder
  commentId: N:CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp.Builder
  nameWithType: CodeFactory.WinVs.Models.CSharp.Builder
  fullName: CodeFactory.WinVs.Models.CSharp.Builder
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.Builder
    name: Builder
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.Builder
    name: Builder
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  name: NamedSyntax
  nameWithType: NamedSyntax
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
- uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.#ctor*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.#ctor
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html#CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax__ctor_System_String_System_String_
  name: NamedSyntax
  nameWithType: NamedSyntax.NamedSyntax
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.NamedSyntax
  nameWithType.vb: NamedSyntax.New
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Create*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Create
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html#CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax_Create_System_String_System_String_
  name: Create
  nameWithType: NamedSyntax.Create
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Create
- uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Name*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Name
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html#CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax_Name
  name: Name
  nameWithType: NamedSyntax.Name
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Name
- uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Syntax*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Syntax
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html#CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax_Syntax
  name: Syntax
  nameWithType: NamedSyntax.Syntax
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.Syntax
