### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security
  commentId: T:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security
  id: Security
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  children:
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Internal
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Private
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.PrivateProtected
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Protected
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.ProtectedInternal
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Public
  langs:
  - csharp
  - vb
  name: Security
  nameWithType: Security
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security
  type: Class
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Security.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Data class that defines the syntax for security scope within the C# language.
  example: []
  syntax:
    content: public static class Security
    content.vb: Public Module Security
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Internal
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Internal
  id: Internal
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security
  langs:
  - csharp
  - vb
  name: Internal
  nameWithType: Security.Internal
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Internal
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Security.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Security scope that allows access to types and members only within files in the same assembly.
  example: []
  syntax:
    content: public const string Internal = "internal"
    return:
      type: System.String
    content.vb: Public Const Internal As String = "internal"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Private
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Private
  id: Private
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security
  langs:
  - csharp
  - vb
  name: Private
  nameWithType: Security.Private
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Private
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Security.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Security scope that allows access only within the scope of the body of a class or structure.
  example: []
  syntax:
    content: public const string Private = "private"
    return:
      type: System.String
    content.vb: Public Const Private As String = "private"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.PrivateProtected
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.PrivateProtected
  id: PrivateProtected
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security
  langs:
  - csharp
  - vb
  name: PrivateProtected
  nameWithType: Security.PrivateProtected
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.PrivateProtected
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Security.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: 'Security scope that allows access only within the containing class or types that derive from the containing class. (Note: Only in version 7.2 or later of the C# language)'
  example: []
  syntax:
    content: public const string PrivateProtected = "private protected"
    return:
      type: System.String
    content.vb: Public Const PrivateProtected As String = "private protected"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Protected
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Protected
  id: Protected
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security
  langs:
  - csharp
  - vb
  name: Protected
  nameWithType: Security.Protected
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Protected
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Security.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Security scope that allows access with the target class and any classes that derived from that class.
  example: []
  syntax:
    content: public const string Protected = "protected"
    return:
      type: System.String
    content.vb: Public Const Protected As String = "protected"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.ProtectedInternal
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.ProtectedInternal
  id: ProtectedInternal
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security
  langs:
  - csharp
  - vb
  name: ProtectedInternal
  nameWithType: Security.ProtectedInternal
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.ProtectedInternal
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Security.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Security scope limited access to the current assembly or types derived from the containing class.
  example: []
  syntax:
    content: public const string ProtectedInternal = "protected internal"
    return:
      type: System.String
    content.vb: Public Const ProtectedInternal As String = "protected internal"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Public
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Public
  id: Public
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security
  langs:
  - csharp
  - vb
  name: Public
  nameWithType: Security.Public
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Security.Public
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Security.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Security scope that allows access to types and members and is the least restrictive security type.
  example: []
  syntax:
    content: public const string Public = "public"
    return:
      type: System.String
    content.vb: Public Const Public As String = "public"
references:
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  commentId: N:CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  nameWithType: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
    name: FormattedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
    name: FormattedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
