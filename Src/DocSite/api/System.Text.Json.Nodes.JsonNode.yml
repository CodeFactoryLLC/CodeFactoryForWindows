### YamlMime:ManagedReference
items:
- uid: System.Text.Json.Nodes.JsonNode
  commentId: T:System.Text.Json.Nodes.JsonNode
  id: JsonNode
  parent: System.Text.Json.Nodes
  children:
  - System.Text.Json.Nodes.JsonNode.AsArray
  - System.Text.Json.Nodes.JsonNode.AsObject
  - System.Text.Json.Nodes.JsonNode.AsValue
  - System.Text.Json.Nodes.JsonNode.GetPath
  - System.Text.Json.Nodes.JsonNode.GetValue``1
  - System.Text.Json.Nodes.JsonNode.Item(System.Int32)
  - System.Text.Json.Nodes.JsonNode.Item(System.String)
  - System.Text.Json.Nodes.JsonNode.Options
  - System.Text.Json.Nodes.JsonNode.Parent
  - System.Text.Json.Nodes.JsonNode.Parse(System.IO.Stream,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  - System.Text.Json.Nodes.JsonNode.Parse(System.ReadOnlySpan{System.Byte},System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  - System.Text.Json.Nodes.JsonNode.Parse(System.String,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  - System.Text.Json.Nodes.JsonNode.Parse(System.Text.Json.Utf8JsonReader@,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions})
  - System.Text.Json.Nodes.JsonNode.Root
  - System.Text.Json.Nodes.JsonNode.ToJsonString(System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.Nodes.JsonNode.ToString
  - System.Text.Json.Nodes.JsonNode.WriteTo(System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Boolean
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Byte
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Char
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.DateTime
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.DateTimeOffset
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Decimal
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Double
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Guid
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int16
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int32
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int64
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Boolean}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Byte}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Char}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.DateTimeOffset}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.DateTime}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Decimal}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Double}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Guid}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int16}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int32}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int64}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.SByte}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Single}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt16}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt32}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt64}
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.SByte
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Single
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.String
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt16
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt32
  - System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt64
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Boolean)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Byte)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Char)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.DateTime)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.DateTimeOffset)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Decimal)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Double)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Guid)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Int16)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Int32)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Int64)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Boolean})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Byte})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Char})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.DateTimeOffset})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.DateTime})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Decimal})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Double})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Guid})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Int16})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Int32})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Int64})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.SByte})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Single})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.UInt16})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.UInt32})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.UInt64})~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.SByte)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.Single)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.String)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.UInt16)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.UInt32)~System.Text.Json.Nodes.JsonNode
  - System.Text.Json.Nodes.JsonNode.op_Implicit(System.UInt64)~System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: JsonNode
  nameWithType: JsonNode
  fullName: System.Text.Json.Nodes.JsonNode
  type: Class
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: The base class that represents a single node within a mutable JSON document.
  example: []
  syntax:
    content: public abstract class JsonNode
    content.vb: Public MustInherit Class JsonNode
  inheritance:
  - System.Object
  derivedClasses:
  - System.Text.Json.Nodes.JsonArray
  - System.Text.Json.Nodes.JsonObject
  - System.Text.Json.Nodes.JsonValue
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Text.Json.Nodes.JsonNode.System.Text.Json.JsonSerializer.Deserialize(System.Type,System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.Nodes.JsonNode.System.Text.Json.JsonSerializer.Deserialize(System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  - System.Text.Json.Nodes.JsonNode.System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonSerializerOptions)
  - System.Text.Json.Nodes.JsonNode.System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}})
- uid: System.Text.Json.Nodes.JsonNode.AsArray
  commentId: M:System.Text.Json.Nodes.JsonNode.AsArray
  id: AsArray
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: AsArray()
  nameWithType: JsonNode.AsArray()
  fullName: System.Text.Json.Nodes.JsonNode.AsArray()
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Casts to the derived <xref href="System.Text.Json.Nodes.JsonArray" data-throw-if-not-resolved="false"></xref> type.
  example: []
  syntax:
    content: public JsonArray AsArray()
    return:
      type: System.Text.Json.Nodes.JsonArray
      description: A <xref href="System.Text.Json.Nodes.JsonArray" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AsArray() As JsonArray
  overload: System.Text.Json.Nodes.JsonNode.AsArray*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The node is not a <xref href="System.Text.Json.Nodes.JsonArray" data-throw-if-not-resolved="false"></xref>.
- uid: System.Text.Json.Nodes.JsonNode.AsObject
  commentId: M:System.Text.Json.Nodes.JsonNode.AsObject
  id: AsObject
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: AsObject()
  nameWithType: JsonNode.AsObject()
  fullName: System.Text.Json.Nodes.JsonNode.AsObject()
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Casts to the derived <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref> type.
  example: []
  syntax:
    content: public JsonObject AsObject()
    return:
      type: System.Text.Json.Nodes.JsonObject
      description: A <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AsObject() As JsonObject
  overload: System.Text.Json.Nodes.JsonNode.AsObject*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The node is not a <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>.
- uid: System.Text.Json.Nodes.JsonNode.AsValue
  commentId: M:System.Text.Json.Nodes.JsonNode.AsValue
  id: AsValue
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: AsValue()
  nameWithType: JsonNode.AsValue()
  fullName: System.Text.Json.Nodes.JsonNode.AsValue()
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Casts to the derived <xref href="System.Text.Json.Nodes.JsonValue" data-throw-if-not-resolved="false"></xref> type.
  example: []
  syntax:
    content: public JsonValue AsValue()
    return:
      type: System.Text.Json.Nodes.JsonValue
      description: A <xref href="System.Text.Json.Nodes.JsonValue" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AsValue() As JsonValue
  overload: System.Text.Json.Nodes.JsonNode.AsValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The node is not a <xref href="System.Text.Json.Nodes.JsonValue" data-throw-if-not-resolved="false"></xref>.
- uid: System.Text.Json.Nodes.JsonNode.GetPath
  commentId: M:System.Text.Json.Nodes.JsonNode.GetPath
  id: GetPath
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: GetPath()
  nameWithType: JsonNode.GetPath()
  fullName: System.Text.Json.Nodes.JsonNode.GetPath()
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Gets the JSON path.
  example: []
  syntax:
    content: public string GetPath()
    return:
      type: System.String
      description: The JSON Path value.
    content.vb: Public Function GetPath() As String
  overload: System.Text.Json.Nodes.JsonNode.GetPath*
- uid: System.Text.Json.Nodes.JsonNode.GetValue``1
  commentId: M:System.Text.Json.Nodes.JsonNode.GetValue``1
  id: GetValue``1
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: GetValue<T>()
  nameWithType: JsonNode.GetValue<T>()
  fullName: System.Text.Json.Nodes.JsonNode.GetValue<T>()
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Gets the value for the current <xref href="System.Text.Json.Nodes.JsonValue" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual T GetValue<T>()
    typeParameters:
    - id: T
      description: The type of the value to obtain from the <xref href="System.Text.Json.Nodes.JsonValue" data-throw-if-not-resolved="false"></xref>.
    return:
      type: '{T}'
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonValue" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Overridable Function GetValue(Of T)() As T
  overload: System.Text.Json.Nodes.JsonNode.GetValue*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The current <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> cannot be represented as a {TValue}.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> is not a <xref href="System.Text.Json.Nodes.JsonValue" data-throw-if-not-resolved="false"></xref> or is not compatible with {TValue}.
  nameWithType.vb: JsonNode.GetValue(Of T)()
  fullName.vb: System.Text.Json.Nodes.JsonNode.GetValue(Of T)()
  name.vb: GetValue(Of T)()
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Boolean)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Boolean)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Boolean)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(bool)
  nameWithType: JsonNode.implicit operator JsonNode(bool)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(bool)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: A <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Boolean) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Boolean)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Boolean)
  name.vb: CType(Boolean)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Boolean})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Boolean})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.Boolean})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(bool?)
  nameWithType: JsonNode.implicit operator JsonNode?(bool?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(bool?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(bool? value)
    parameters:
    - id: value
      type: System.Nullable{System.Boolean}
      description: A <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Boolean?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Boolean?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Boolean?)
  name.vb: CType(Boolean?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Byte)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Byte)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Byte)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(byte)
  nameWithType: JsonNode.implicit operator JsonNode(byte)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(byte)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Byte) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Byte)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Byte)
  name.vb: CType(Byte)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Byte})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Byte})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.Byte})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(byte?)
  nameWithType: JsonNode.implicit operator JsonNode?(byte?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(byte?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(byte? value)
    parameters:
    - id: value
      type: System.Nullable{System.Byte}
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Byte?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Byte?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Byte?)
  name.vb: CType(Byte?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Char)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Char)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Char)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(char)
  nameWithType: JsonNode.implicit operator JsonNode(char)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(char)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Char" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(char value)
    parameters:
    - id: value
      type: System.Char
      description: A <xref href="System.Char" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Char) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Char)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Char)
  name.vb: CType(Char)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Char})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Char})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.Char})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(char?)
  nameWithType: JsonNode.implicit operator JsonNode?(char?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(char?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Char" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(char? value)
    parameters:
    - id: value
      type: System.Nullable{System.Char}
      description: A <xref href="System.Char" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Char?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Char?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Char?)
  name.vb: CType(Char?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.DateTime)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.DateTime)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.DateTime)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(DateTime)
  nameWithType: JsonNode.implicit operator JsonNode(DateTime)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(System.DateTime)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Date) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Date)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Date)
  name.vb: CType(Date)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.DateTime})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.DateTime})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.DateTime})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(DateTime?)
  nameWithType: JsonNode.implicit operator JsonNode?(DateTime?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(System.DateTime?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(DateTime? value)
    parameters:
    - id: value
      type: System.Nullable{System.DateTime}
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Date?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Date?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Date?)
  name.vb: CType(Date?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.DateTimeOffset)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.DateTimeOffset)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.DateTimeOffset)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(DateTimeOffset)
  nameWithType: JsonNode.implicit operator JsonNode(DateTimeOffset)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(System.DateTimeOffset)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(DateTimeOffset value)
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As DateTimeOffset) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(DateTimeOffset)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.DateTimeOffset)
  name.vb: CType(DateTimeOffset)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.DateTimeOffset})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.DateTimeOffset})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.DateTimeOffset})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(DateTimeOffset?)
  nameWithType: JsonNode.implicit operator JsonNode?(DateTimeOffset?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(System.DateTimeOffset?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(DateTimeOffset? value)
    parameters:
    - id: value
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As DateTimeOffset?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(DateTimeOffset?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.DateTimeOffset?)
  name.vb: CType(DateTimeOffset?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Decimal)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Decimal)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Decimal)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(decimal)
  nameWithType: JsonNode.implicit operator JsonNode(decimal)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(decimal)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: A <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Decimal) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Decimal)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Decimal)
  name.vb: CType(Decimal)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Decimal})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Decimal})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.Decimal})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(decimal?)
  nameWithType: JsonNode.implicit operator JsonNode?(decimal?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(decimal?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(decimal? value)
    parameters:
    - id: value
      type: System.Nullable{System.Decimal}
      description: A <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Decimal?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Decimal?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Decimal?)
  name.vb: CType(Decimal?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Double)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Double)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Double)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(double)
  nameWithType: JsonNode.implicit operator JsonNode(double)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(double)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Double" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(double value)
    parameters:
    - id: value
      type: System.Double
      description: A <xref href="System.Double" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Double) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Double)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Double)
  name.vb: CType(Double)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Double})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Double})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.Double})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(double?)
  nameWithType: JsonNode.implicit operator JsonNode?(double?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(double?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Double" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(double? value)
    parameters:
    - id: value
      type: System.Nullable{System.Double}
      description: A <xref href="System.Double" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Double?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Double?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Double?)
  name.vb: CType(Double?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Guid)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Guid)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Guid)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(Guid)
  nameWithType: JsonNode.implicit operator JsonNode(Guid)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(System.Guid)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(Guid value)
    parameters:
    - id: value
      type: System.Guid
      description: A <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Guid) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Guid)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Guid)
  name.vb: CType(Guid)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Guid})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Guid})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.Guid})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(Guid?)
  nameWithType: JsonNode.implicit operator JsonNode?(Guid?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(System.Guid?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(Guid? value)
    parameters:
    - id: value
      type: System.Nullable{System.Guid}
      description: A <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Guid?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Guid?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Guid?)
  name.vb: CType(Guid?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Int16)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Int16)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Int16)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(short)
  nameWithType: JsonNode.implicit operator JsonNode(short)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(short)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(short value)
    parameters:
    - id: value
      type: System.Int16
      description: A <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Short) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Short)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Short)
  name.vb: CType(Short)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Int16})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Int16})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.Int16})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(short?)
  nameWithType: JsonNode.implicit operator JsonNode?(short?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(short?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(short? value)
    parameters:
    - id: value
      type: System.Nullable{System.Int16}
      description: A <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Short?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Short?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Short?)
  name.vb: CType(Short?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Int32)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Int32)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Int32)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(int)
  nameWithType: JsonNode.implicit operator JsonNode(int)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(int)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(int value)
    parameters:
    - id: value
      type: System.Int32
      description: A <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Integer) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Integer)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Integer)
  name.vb: CType(Integer)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Int32})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Int32})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.Int32})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(int?)
  nameWithType: JsonNode.implicit operator JsonNode?(int?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(int?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(int? value)
    parameters:
    - id: value
      type: System.Nullable{System.Int32}
      description: A <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Integer?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Integer?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Integer?)
  name.vb: CType(Integer?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Int64)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Int64)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Int64)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(long)
  nameWithType: JsonNode.implicit operator JsonNode(long)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(long)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(long value)
    parameters:
    - id: value
      type: System.Int64
      description: A <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Long) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Long)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Long)
  name.vb: CType(Long)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Int64})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Int64})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.Int64})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(long?)
  nameWithType: JsonNode.implicit operator JsonNode?(long?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(long?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(long? value)
    parameters:
    - id: value
      type: System.Nullable{System.Int64}
      description: A <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Long?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Long?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Long?)
  name.vb: CType(Long?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.SByte)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.SByte)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.SByte)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(sbyte)
  nameWithType: JsonNode.implicit operator JsonNode(sbyte)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(sbyte)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator JsonNode(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: A <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As SByte) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(SByte)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(SByte)
  name.vb: CType(SByte)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.SByte})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.SByte})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.SByte})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(sbyte?)
  nameWithType: JsonNode.implicit operator JsonNode?(sbyte?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(sbyte?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator JsonNode?(sbyte? value)
    parameters:
    - id: value
      type: System.Nullable{System.SByte}
      description: A <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As SByte?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(SByte?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(SByte?)
  name.vb: CType(SByte?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Single)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Single)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Single)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(float)
  nameWithType: JsonNode.implicit operator JsonNode(float)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(float)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Single" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode(float value)
    parameters:
    - id: value
      type: System.Single
      description: A <xref href="System.Single" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Single) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Single)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Single)
  name.vb: CType(Single)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Single})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.Single})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.Single})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(float?)
  nameWithType: JsonNode.implicit operator JsonNode?(float?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(float?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.Single" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(float? value)
    parameters:
    - id: value
      type: System.Nullable{System.Single}
      description: A <xref href="System.Single" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As Single?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(Single?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(Single?)
  name.vb: CType(Single?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.String)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.String)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.String)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(string?)
  nameWithType: JsonNode.implicit operator JsonNode?(string?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(string?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.String" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator JsonNode?(string? value)
    parameters:
    - id: value
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: Public Shared Widening Operator CType(value As String) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  nameWithType.vb: JsonNode.CType(String)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(String)
  name.vb: CType(String)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.UInt16)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.UInt16)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.UInt16)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(ushort)
  nameWithType: JsonNode.implicit operator JsonNode(ushort)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(ushort)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator JsonNode(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: A <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As UShort) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(UShort)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(UShort)
  name.vb: CType(UShort)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.UInt16})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.UInt16})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.UInt16})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(ushort?)
  nameWithType: JsonNode.implicit operator JsonNode?(ushort?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(ushort?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator JsonNode?(ushort? value)
    parameters:
    - id: value
      type: System.Nullable{System.UInt16}
      description: A <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As UShort?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(UShort?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(UShort?)
  name.vb: CType(UShort?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.UInt32)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.UInt32)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.UInt32)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(uint)
  nameWithType: JsonNode.implicit operator JsonNode(uint)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(uint)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator JsonNode(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: A <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As UInteger) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(UInteger)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(UInteger)
  name.vb: CType(UInteger)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.UInt32})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.UInt32})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.UInt32})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(uint?)
  nameWithType: JsonNode.implicit operator JsonNode?(uint?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(uint?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator JsonNode?(uint? value)
    parameters:
    - id: value
      type: System.Nullable{System.UInt32}
      description: A <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As UInteger?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(UInteger?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(UInteger?)
  name.vb: CType(UInteger?)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.UInt64)~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.UInt64)~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.UInt64)~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode(ulong)
  nameWithType: JsonNode.implicit operator JsonNode(ulong)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode(ulong)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator JsonNode(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: A <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As ULong) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(ULong)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(ULong)
  name.vb: CType(ULong)
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.UInt64})~System.Text.Json.Nodes.JsonNode
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Implicit(System.Nullable{System.UInt64})~System.Text.Json.Nodes.JsonNode
  id: op_Implicit(System.Nullable{System.UInt64})~System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: implicit operator JsonNode?(ulong?)
  nameWithType: JsonNode.implicit operator JsonNode?(ulong?)
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator System.Text.Json.Nodes.JsonNode?(ulong?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an implicit conversion of a given <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator JsonNode?(ulong? value)
    parameters:
    - id: value
      type: System.Nullable{System.UInt64}
      description: A <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance converted from the <code class="paramref">value</code> parameter.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As ULong?) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.op_Implicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(ULong?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(ULong?)
  name.vb: CType(ULong?)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Boolean
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Boolean
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Boolean
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator bool(JsonNode)
  nameWithType: JsonNode.explicit operator bool(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator bool(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator bool(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Boolean
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Boolean
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Boolean}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Boolean}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Boolean}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator bool?(JsonNode?)
  nameWithType: JsonNode.explicit operator bool?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator bool?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator bool?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.Boolean}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Boolean?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Byte
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Byte
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Byte
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator byte(JsonNode)
  nameWithType: JsonNode.explicit operator byte(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator byte(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator byte(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Byte
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Byte
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Byte}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Byte}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Byte}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator byte?(JsonNode?)
  nameWithType: JsonNode.explicit operator byte?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator byte?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator byte?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.Byte}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Byte?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Char
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Char
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Char
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator char(JsonNode)
  nameWithType: JsonNode.explicit operator char(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator char(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Char" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator char(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Char" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Char
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Char
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Char}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Char}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Char}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator char?(JsonNode?)
  nameWithType: JsonNode.explicit operator char?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator char?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Char" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator char?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Char" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.Char}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Char?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.DateTime
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.DateTime
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.DateTime
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator DateTime(JsonNode)
  nameWithType: JsonNode.explicit operator DateTime(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator System.DateTime(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator DateTime(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.DateTime
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Date
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.DateTime}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.DateTime}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.DateTime}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator DateTime?(JsonNode?)
  nameWithType: JsonNode.explicit operator DateTime?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator System.DateTime?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator DateTime?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.DateTime}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Date?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.DateTimeOffset
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.DateTimeOffset
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.DateTimeOffset
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator DateTimeOffset(JsonNode)
  nameWithType: JsonNode.explicit operator DateTimeOffset(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator System.DateTimeOffset(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator DateTimeOffset(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.DateTimeOffset
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As DateTimeOffset
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.DateTimeOffset}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.DateTimeOffset}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.DateTimeOffset}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator DateTimeOffset?(JsonNode?)
  nameWithType: JsonNode.explicit operator DateTimeOffset?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator System.DateTimeOffset?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator DateTimeOffset?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As DateTimeOffset?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Decimal
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Decimal
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Decimal
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator decimal(JsonNode)
  nameWithType: JsonNode.explicit operator decimal(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator decimal(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator decimal(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Decimal
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Decimal
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Decimal}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Decimal}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Decimal}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator decimal?(JsonNode?)
  nameWithType: JsonNode.explicit operator decimal?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator decimal?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator decimal?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.Decimal}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Decimal?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Double
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Double
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Double
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator double(JsonNode)
  nameWithType: JsonNode.explicit operator double(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator double(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Double" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator double(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Double" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Double
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Double
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Double}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Double}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Double}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator double?(JsonNode?)
  nameWithType: JsonNode.explicit operator double?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator double?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Double" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator double?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Double" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.Double}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Double?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Guid
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Guid
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Guid
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator Guid(JsonNode)
  nameWithType: JsonNode.explicit operator Guid(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator System.Guid(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator Guid(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Guid
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Guid
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Guid}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Guid}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Guid}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator Guid?(JsonNode?)
  nameWithType: JsonNode.explicit operator Guid?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator System.Guid?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator Guid?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.Guid}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Guid?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int16
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int16
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int16
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator short(JsonNode)
  nameWithType: JsonNode.explicit operator short(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator short(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator short(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Int16
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Short
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int16}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int16}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int16}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator short?(JsonNode?)
  nameWithType: JsonNode.explicit operator short?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator short?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator short?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.Int16}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Short?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int32
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int32
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int32
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator int(JsonNode)
  nameWithType: JsonNode.explicit operator int(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator int(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator int(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Int32
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Integer
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int32}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int32}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int32}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator int?(JsonNode?)
  nameWithType: JsonNode.explicit operator int?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator int?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator int?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.Int32}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Integer?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int64
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int64
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Int64
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator long(JsonNode)
  nameWithType: JsonNode.explicit operator long(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator long(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator long(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Int64
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Long
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int64}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int64}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Int64}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator long?(JsonNode?)
  nameWithType: JsonNode.explicit operator long?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator long?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator long?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.Int64}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Long?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.SByte
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.SByte
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.SByte
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator sbyte(JsonNode)
  nameWithType: JsonNode.explicit operator sbyte(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator sbyte(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator sbyte(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.SByte
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As JsonNode) As SByte
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.SByte}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.SByte}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.SByte}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator sbyte?(JsonNode?)
  nameWithType: JsonNode.explicit operator sbyte?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator sbyte?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator sbyte?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.SByte}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As JsonNode) As SByte?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Single
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Single
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Single
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator float(JsonNode)
  nameWithType: JsonNode.explicit operator float(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator float(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Single" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator float(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Single" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Single
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Single
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Single}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Single}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.Single}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator float?(JsonNode?)
  nameWithType: JsonNode.explicit operator float?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator float?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.Single" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator float?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Single" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.Single}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As Single?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.String
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.String
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.String
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator string?(JsonNode?)
  nameWithType: JsonNode.explicit operator string?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator string?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.String" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator string?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.String
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Narrowing Operator CType(value As JsonNode) As String
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt16
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt16
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt16
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator ushort(JsonNode)
  nameWithType: JsonNode.explicit operator ushort(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator ushort(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator ushort(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.UInt16
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As JsonNode) As UShort
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt16}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt16}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt16}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator ushort?(JsonNode?)
  nameWithType: JsonNode.explicit operator ushort?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator ushort?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator ushort?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.UInt16}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As JsonNode) As UShort?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt32
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt32
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt32
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator uint(JsonNode)
  nameWithType: JsonNode.explicit operator uint(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator uint(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator uint(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.UInt32
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As JsonNode) As UInteger
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt32}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt32}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt32}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator uint?(JsonNode?)
  nameWithType: JsonNode.explicit operator uint?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator uint?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator uint?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.UInt32}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As JsonNode) As UInteger?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt64
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt64
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.UInt64
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator ulong(JsonNode)
  nameWithType: JsonNode.explicit operator ulong(JsonNode)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator ulong(System.Text.Json.Nodes.JsonNode)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator ulong(JsonNode value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.UInt64
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As JsonNode) As ULong
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt64}
  commentId: M:System.Text.Json.Nodes.JsonNode.op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt64}
  id: op_Explicit(System.Text.Json.Nodes.JsonNode)~System.Nullable{System.UInt64}
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: explicit operator ulong?(JsonNode?)
  nameWithType: JsonNode.explicit operator ulong?(JsonNode?)
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator ulong?(System.Text.Json.Nodes.JsonNode?)
  type: Operator
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Defines an explicit conversion of a given <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator ulong?(JsonNode? value)
    parameters:
    - id: value
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> to implicitly convert.
    return:
      type: System.Nullable{System.UInt64}
      description: A value converted from the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As JsonNode) As ULong?
  overload: System.Text.Json.Nodes.JsonNode.op_Explicit*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: JsonNode.CType(JsonNode)
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType(System.Text.Json.Nodes.JsonNode)
  name.vb: CType(JsonNode)
- uid: System.Text.Json.Nodes.JsonNode.Parse(System.Text.Json.Utf8JsonReader@,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions})
  commentId: M:System.Text.Json.Nodes.JsonNode.Parse(System.Text.Json.Utf8JsonReader@,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions})
  id: Parse(System.Text.Json.Utf8JsonReader@,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions})
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: Parse(ref Utf8JsonReader, JsonNodeOptions?)
  nameWithType: JsonNode.Parse(ref Utf8JsonReader, JsonNodeOptions?)
  fullName: System.Text.Json.Nodes.JsonNode.Parse(ref System.Text.Json.Utf8JsonReader, System.Text.Json.Nodes.JsonNodeOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Parses one JSON value (including objects or arrays) from the provided reader.
  example: []
  syntax:
    content: public static JsonNode? Parse(ref Utf8JsonReader reader, JsonNodeOptions? nodeOptions = null)
    parameters:
    - id: reader
      type: System.Text.Json.Utf8JsonReader
      description: The reader to read.
    - id: nodeOptions
      type: System.Nullable{System.Text.Json.Nodes.JsonNodeOptions}
      description: Options to control the behavior.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: The <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> from the reader.
    content.vb: Public Shared Function Parse(reader As Utf8JsonReader, nodeOptions As JsonNodeOptions? = Nothing) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.Parse*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">reader</code> is using unsupported options.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The current <code class="paramref">reader</code> token does not start or represent a value.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: A value could not be read from the reader.
  nameWithType.vb: JsonNode.Parse(Utf8JsonReader, JsonNodeOptions?)
  fullName.vb: System.Text.Json.Nodes.JsonNode.Parse(System.Text.Json.Utf8JsonReader, System.Text.Json.Nodes.JsonNodeOptions?)
  name.vb: Parse(Utf8JsonReader, JsonNodeOptions?)
- uid: System.Text.Json.Nodes.JsonNode.Parse(System.String,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  commentId: M:System.Text.Json.Nodes.JsonNode.Parse(System.String,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  id: Parse(System.String,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: Parse(string, JsonNodeOptions?, JsonDocumentOptions)
  nameWithType: JsonNode.Parse(string, JsonNodeOptions?, JsonDocumentOptions)
  fullName: System.Text.Json.Nodes.JsonNode.Parse(string, System.Text.Json.Nodes.JsonNodeOptions?, System.Text.Json.JsonDocumentOptions)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Parses text representing a single JSON value.
  example: []
  syntax:
    content: public static JsonNode? Parse(string json, JsonNodeOptions? nodeOptions = null, JsonDocumentOptions documentOptions = default)
    parameters:
    - id: json
      type: System.String
      description: JSON text to parse.
    - id: nodeOptions
      type: System.Nullable{System.Text.Json.Nodes.JsonNodeOptions}
      description: Options to control the node behavior after parsing.
    - id: documentOptions
      type: System.Text.Json.JsonDocumentOptions
      description: Options to control the document behavior during parsing.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representation of the JSON value.
    content.vb: Public Shared Function Parse(json As String, nodeOptions As JsonNodeOptions? = Nothing, documentOptions As JsonDocumentOptions = Nothing) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">json</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="paramref">json</code> does not represent a valid single JSON value.
  nameWithType.vb: JsonNode.Parse(String, JsonNodeOptions?, JsonDocumentOptions)
  fullName.vb: System.Text.Json.Nodes.JsonNode.Parse(String, System.Text.Json.Nodes.JsonNodeOptions?, System.Text.Json.JsonDocumentOptions)
  name.vb: Parse(String, JsonNodeOptions?, JsonDocumentOptions)
- uid: System.Text.Json.Nodes.JsonNode.Parse(System.ReadOnlySpan{System.Byte},System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  commentId: M:System.Text.Json.Nodes.JsonNode.Parse(System.ReadOnlySpan{System.Byte},System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  id: Parse(System.ReadOnlySpan{System.Byte},System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: Parse(ReadOnlySpan<byte>, JsonNodeOptions?, JsonDocumentOptions)
  nameWithType: JsonNode.Parse(ReadOnlySpan<byte>, JsonNodeOptions?, JsonDocumentOptions)
  fullName: System.Text.Json.Nodes.JsonNode.Parse(System.ReadOnlySpan<byte>, System.Text.Json.Nodes.JsonNodeOptions?, System.Text.Json.JsonDocumentOptions)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Parses text representing a single JSON value.
  example: []
  syntax:
    content: public static JsonNode? Parse(ReadOnlySpan<byte> utf8Json, JsonNodeOptions? nodeOptions = null, JsonDocumentOptions documentOptions = default)
    parameters:
    - id: utf8Json
      type: System.ReadOnlySpan{System.Byte}
      description: JSON text to parse.
    - id: nodeOptions
      type: System.Nullable{System.Text.Json.Nodes.JsonNodeOptions}
      description: Options to control the node behavior after parsing.
    - id: documentOptions
      type: System.Text.Json.JsonDocumentOptions
      description: Options to control the document behavior during parsing.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representation of the JSON value.
    content.vb: Public Shared Function Parse(utf8Json As ReadOnlySpan(Of Byte), nodeOptions As JsonNodeOptions? = Nothing, documentOptions As JsonDocumentOptions = Nothing) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.Parse*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="paramref">utf8Json</code> does not represent a valid single JSON value.
  nameWithType.vb: JsonNode.Parse(ReadOnlySpan(Of Byte), JsonNodeOptions?, JsonDocumentOptions)
  fullName.vb: System.Text.Json.Nodes.JsonNode.Parse(System.ReadOnlySpan(Of Byte), System.Text.Json.Nodes.JsonNodeOptions?, System.Text.Json.JsonDocumentOptions)
  name.vb: Parse(ReadOnlySpan(Of Byte), JsonNodeOptions?, JsonDocumentOptions)
- uid: System.Text.Json.Nodes.JsonNode.Parse(System.IO.Stream,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  commentId: M:System.Text.Json.Nodes.JsonNode.Parse(System.IO.Stream,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  id: Parse(System.IO.Stream,System.Nullable{System.Text.Json.Nodes.JsonNodeOptions},System.Text.Json.JsonDocumentOptions)
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: Parse(Stream, JsonNodeOptions?, JsonDocumentOptions)
  nameWithType: JsonNode.Parse(Stream, JsonNodeOptions?, JsonDocumentOptions)
  fullName: System.Text.Json.Nodes.JsonNode.Parse(System.IO.Stream, System.Text.Json.Nodes.JsonNodeOptions?, System.Text.Json.JsonDocumentOptions)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Parse a <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> as UTF-8-encoded data representing a single JSON value into a <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.  The Stream will be read to completion.
  example: []
  syntax:
    content: public static JsonNode? Parse(Stream utf8Json, JsonNodeOptions? nodeOptions = null, JsonDocumentOptions documentOptions = default)
    parameters:
    - id: utf8Json
      type: System.IO.Stream
      description: JSON text to parse.
    - id: nodeOptions
      type: System.Nullable{System.Text.Json.Nodes.JsonNodeOptions}
      description: Options to control the node behavior after parsing.
    - id: documentOptions
      type: System.Text.Json.JsonDocumentOptions
      description: Options to control the document behavior during parsing.
    return:
      type: System.Text.Json.Nodes.JsonNode
      description: A <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> representation of the JSON value.
    content.vb: Public Shared Function Parse(utf8Json As Stream, nodeOptions As JsonNodeOptions? = Nothing, documentOptions As JsonDocumentOptions = Nothing) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.Parse*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: <code class="paramref">utf8Json</code> does not represent a valid single JSON value.
- uid: System.Text.Json.Nodes.JsonNode.ToJsonString(System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.Nodes.JsonNode.ToJsonString(System.Text.Json.JsonSerializerOptions)
  id: ToJsonString(System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: ToJsonString(JsonSerializerOptions?)
  nameWithType: JsonNode.ToJsonString(JsonSerializerOptions?)
  fullName: System.Text.Json.Nodes.JsonNode.ToJsonString(System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Converts the current instance to string in JSON format.
  example: []
  syntax:
    content: public string ToJsonString(JsonSerializerOptions? options = null)
    parameters:
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the serialization behavior.
    return:
      type: System.String
      description: JSON representation of current instance.
    content.vb: Public Function ToJsonString(options As JsonSerializerOptions = Nothing) As String
  overload: System.Text.Json.Nodes.JsonNode.ToJsonString*
  nameWithType.vb: JsonNode.ToJsonString(JsonSerializerOptions)
  fullName.vb: System.Text.Json.Nodes.JsonNode.ToJsonString(System.Text.Json.JsonSerializerOptions)
  name.vb: ToJsonString(JsonSerializerOptions)
- uid: System.Text.Json.Nodes.JsonNode.ToString
  commentId: M:System.Text.Json.Nodes.JsonNode.ToString
  id: ToString
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: JsonNode.ToString()
  fullName: System.Text.Json.Nodes.JsonNode.ToString()
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Gets a string representation for the current value appropriate to the node type.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation for the current value appropriate to the node type.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: System.Text.Json.Nodes.JsonNode.ToString*
- uid: System.Text.Json.Nodes.JsonNode.WriteTo(System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.Nodes.JsonNode.WriteTo(System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions)
  id: WriteTo(System.Text.Json.Utf8JsonWriter,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: WriteTo(Utf8JsonWriter, JsonSerializerOptions?)
  nameWithType: JsonNode.WriteTo(Utf8JsonWriter, JsonSerializerOptions?)
  fullName: System.Text.Json.Nodes.JsonNode.WriteTo(System.Text.Json.Utf8JsonWriter, System.Text.Json.JsonSerializerOptions?)
  type: Method
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Write the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> into the provided <xref href="System.Text.Json.Utf8JsonWriter" data-throw-if-not-resolved="false"></xref> as JSON.
  example: []
  syntax:
    content: public abstract void WriteTo(Utf8JsonWriter writer, JsonSerializerOptions? options = null)
    parameters:
    - id: writer
      type: System.Text.Json.Utf8JsonWriter
      description: The <xref href="System.Text.Json.Utf8JsonWriter" data-throw-if-not-resolved="false"></xref>.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: Options to control the serialization behavior.
    content.vb: Public MustOverride Sub WriteTo(writer As Utf8JsonWriter, options As JsonSerializerOptions = Nothing)
  overload: System.Text.Json.Nodes.JsonNode.WriteTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code class="paramref">writer</code> parameter is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: JsonNode.WriteTo(Utf8JsonWriter, JsonSerializerOptions)
  fullName.vb: System.Text.Json.Nodes.JsonNode.WriteTo(System.Text.Json.Utf8JsonWriter, System.Text.Json.JsonSerializerOptions)
  name.vb: WriteTo(Utf8JsonWriter, JsonSerializerOptions)
- uid: System.Text.Json.Nodes.JsonNode.Options
  commentId: P:System.Text.Json.Nodes.JsonNode.Options
  id: Options
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: JsonNode.Options
  fullName: System.Text.Json.Nodes.JsonNode.Options
  type: Property
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Options to control the behavior.
  example: []
  syntax:
    content: public JsonNodeOptions? Options { get; }
    parameters: []
    return:
      type: System.Nullable{System.Text.Json.Nodes.JsonNodeOptions}
    content.vb: Public ReadOnly Property Options As JsonNodeOptions?
  overload: System.Text.Json.Nodes.JsonNode.Options*
- uid: System.Text.Json.Nodes.JsonNode.Parent
  commentId: P:System.Text.Json.Nodes.JsonNode.Parent
  id: Parent
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: JsonNode.Parent
  fullName: System.Text.Json.Nodes.JsonNode.Parent
  type: Property
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: >-
    Gets the parent <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
                  If there is no parent, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> is returned.
                  A parent can either be a <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref> or a <xref href="System.Text.Json.Nodes.JsonArray" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public JsonNode? Parent { get; }
    parameters: []
    return:
      type: System.Text.Json.Nodes.JsonNode
    content.vb: Public ReadOnly Property Parent As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.Parent*
- uid: System.Text.Json.Nodes.JsonNode.Root
  commentId: P:System.Text.Json.Nodes.JsonNode.Root
  id: Root
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: JsonNode.Root
  fullName: System.Text.Json.Nodes.JsonNode.Root
  type: Property
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: >-
    Gets the root <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
                  If the current <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> is a root, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> is returned.
  example: []
  syntax:
    content: public JsonNode Root { get; }
    parameters: []
    return:
      type: System.Text.Json.Nodes.JsonNode
    content.vb: Public ReadOnly Property Root As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.Root*
- uid: System.Text.Json.Nodes.JsonNode.Item(System.Int32)
  commentId: P:System.Text.Json.Nodes.JsonNode.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: JsonNode.this[int]
  fullName: System.Text.Json.Nodes.JsonNode.this[int]
  type: Property
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: Gets or sets the element at the specified index.
  example: []
  syntax:
    content: public JsonNode? this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: System.Text.Json.Nodes.JsonNode
    content.vb: Public Default Property this[](index As Integer) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">index</code> is less than 0 or <code class="paramref">index</code> is greater than the number of properties.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> is not a <xref href="System.Text.Json.Nodes.JsonArray" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: JsonNode.this[](Integer)
  fullName.vb: System.Text.Json.Nodes.JsonNode.this[](Integer)
  name.vb: this[](Integer)
- uid: System.Text.Json.Nodes.JsonNode.Item(System.String)
  commentId: P:System.Text.Json.Nodes.JsonNode.Item(System.String)
  id: Item(System.String)
  parent: System.Text.Json.Nodes.JsonNode
  langs:
  - csharp
  - vb
  name: this[string]
  nameWithType: JsonNode.this[string]
  fullName: System.Text.Json.Nodes.JsonNode.this[string]
  type: Property
  assemblies:
  - System.Text.Json
  namespace: System.Text.Json.Nodes
  summary: >-
    Gets or sets the element with the specified property name.
                  If the property is not found, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> is returned.
  example: []
  syntax:
    content: public JsonNode? this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property to return.
    return:
      type: System.Text.Json.Nodes.JsonNode
    content.vb: Public Default Property this[](propertyName As String) As JsonNode
  overload: System.Text.Json.Nodes.JsonNode.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">propertyName</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref> is not a <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: JsonNode.this[](String)
  fullName.vb: System.Text.Json.Nodes.JsonNode.this[](String)
  name.vb: this[](String)
references:
- uid: System.Text.Json.Nodes
  commentId: N:System.Text.Json.Nodes
  isExternal: true
  href: System.html
  name: System.Text.Json.Nodes
  nameWithType: System.Text.Json.Nodes
  fullName: System.Text.Json.Nodes
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
  - name: .
  - uid: System.Text.Json.Nodes
    name: Nodes
    isExternal: true
    href: System.Text.Json.Nodes.html
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
  - name: .
  - uid: System.Text.Json.Nodes
    name: Nodes
    isExternal: true
    href: System.Text.Json.Nodes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Text.Json.Nodes.JsonNode.System.Text.Json.JsonSerializer.Deserialize(System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  definition: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_JsonSerializerOptions_
  name: Deserialize(JsonNode, Type, JsonSerializerOptions)
  nameWithType: JsonSerializer.Deserialize(JsonNode, Type, JsonSerializerOptions)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode, System.Type, System.Text.Json.JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_JsonSerializerOptions_
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: System.Text.Json.JsonSerializerOptions.html
  - name: )
  spec.vb:
  - uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_JsonSerializerOptions_
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: System.Text.Json.JsonSerializerOptions.html
  - name: )
- uid: System.Text.Json.Nodes.JsonNode.System.Text.Json.JsonSerializer.Deserialize(System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  parent: System.Text.Json.JsonSerializer
  definition: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_Serialization_JsonSerializerContext_
  name: Deserialize(JsonNode, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Deserialize(JsonNode, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  spec.csharp:
  - uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_Serialization_JsonSerializerContext_
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Text.Json.Serialization.JsonSerializerContext
    name: JsonSerializerContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_Serialization_JsonSerializerContext_
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Text.Json.Serialization.JsonSerializerContext
    name: JsonSerializerContext
    isExternal: true
  - name: )
- uid: System.Text.Json.Nodes.JsonNode.System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.JsonSerializer
  definition: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_JsonSerializerOptions_
  name: Deserialize<TValue>(JsonNode, JsonSerializerOptions)
  nameWithType: JsonSerializer.Deserialize<TValue>(JsonNode, JsonSerializerOptions)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.Text.Json.Nodes.JsonNode, System.Text.Json.JsonSerializerOptions)
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(JsonNode, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.Nodes.JsonNode, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Of TValue)(JsonNode, JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_JsonSerializerOptions_
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: System.Text.Json.JsonSerializerOptions.html
  - name: )
  spec.vb:
  - uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_JsonSerializerOptions_
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: System.Text.Json.JsonSerializerOptions.html
  - name: )
- uid: System.Text.Json.Nodes.JsonNode.System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Serialization.Metadata.JsonTypeInfo{{TValue}})
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  parent: System.Text.Json.JsonSerializer
  definition: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_Serialization_Metadata_JsonTypeInfo___0__
  name: Deserialize<TValue>(JsonNode, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Deserialize<TValue>(JsonNode, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.Text.Json.Nodes.JsonNode, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(JsonNode, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.Nodes.JsonNode, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Deserialize(Of TValue)(JsonNode, JsonTypeInfo(Of TValue))
  spec.csharp:
  - uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_Serialization_Metadata_JsonTypeInfo___0__
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
    name: JsonTypeInfo
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_Serialization_Metadata_JsonTypeInfo___0__
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
    name: JsonTypeInfo
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_JsonSerializerOptions_
  name: Deserialize(JsonNode, Type, JsonSerializerOptions)
  nameWithType: JsonSerializer.Deserialize(JsonNode, Type, JsonSerializerOptions)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode, System.Type, System.Text.Json.JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_JsonSerializerOptions_
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: System.Text.Json.JsonSerializerOptions.html
  - name: )
  spec.vb:
  - uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_JsonSerializerOptions_
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: System.Text.Json.JsonSerializerOptions.html
  - name: )
- uid: System.Text.Json.JsonSerializer
  commentId: T:System.Text.Json.JsonSerializer
  parent: System.Text.Json
  isExternal: true
  href: System.Text.Json.JsonSerializer.html
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: System.Text.Json.JsonSerializer
- uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_Serialization_JsonSerializerContext_
  name: Deserialize(JsonNode, Type, JsonSerializerContext)
  nameWithType: JsonSerializer.Deserialize(JsonNode, Type, JsonSerializerContext)
  fullName: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode, System.Type, System.Text.Json.Serialization.JsonSerializerContext)
  spec.csharp:
  - uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_Serialization_JsonSerializerContext_
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Text.Json.Serialization.JsonSerializerContext
    name: JsonSerializerContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Nodes.JsonNode,System.Type,System.Text.Json.Serialization.JsonSerializerContext)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize_System_Text_Json_Nodes_JsonNode_System_Type_System_Text_Json_Serialization_JsonSerializerContext_
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Text.Json.Serialization.JsonSerializerContext
    name: JsonSerializerContext
    isExternal: true
  - name: )
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_JsonSerializerOptions_
  name: Deserialize<TValue>(JsonNode, JsonSerializerOptions)
  nameWithType: JsonSerializer.Deserialize<TValue>(JsonNode, JsonSerializerOptions)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.Text.Json.Nodes.JsonNode, System.Text.Json.JsonSerializerOptions)
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(JsonNode, JsonSerializerOptions)
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.Nodes.JsonNode, System.Text.Json.JsonSerializerOptions)
  name.vb: Deserialize(Of TValue)(JsonNode, JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_JsonSerializerOptions_
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: System.Text.Json.JsonSerializerOptions.html
  - name: )
  spec.vb:
  - uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.JsonSerializerOptions)
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_JsonSerializerOptions_
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
    href: System.Text.Json.JsonSerializerOptions.html
  - name: )
- uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  commentId: M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
  isExternal: true
  href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_Serialization_Metadata_JsonTypeInfo___0__
  name: Deserialize<TValue>(JsonNode, JsonTypeInfo<TValue>)
  nameWithType: JsonSerializer.Deserialize<TValue>(JsonNode, JsonTypeInfo<TValue>)
  fullName: System.Text.Json.JsonSerializer.Deserialize<TValue>(System.Text.Json.Nodes.JsonNode, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TValue>)
  nameWithType.vb: JsonSerializer.Deserialize(Of TValue)(JsonNode, JsonTypeInfo(Of TValue))
  fullName.vb: System.Text.Json.JsonSerializer.Deserialize(Of TValue)(System.Text.Json.Nodes.JsonNode, System.Text.Json.Serialization.Metadata.JsonTypeInfo(Of TValue))
  name.vb: Deserialize(Of TValue)(JsonNode, JsonTypeInfo(Of TValue))
  spec.csharp:
  - uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_Serialization_Metadata_JsonTypeInfo___0__
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
    name: JsonTypeInfo
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Nodes.JsonNode,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0})
    name: Deserialize
    isExternal: true
    href: System.Text.Json.JsonSerializer.html#System_Text_Json_JsonSerializer_Deserialize__1_System_Text_Json_Nodes_JsonNode_System_Text_Json_Serialization_Metadata_JsonTypeInfo___0__
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.Text.Json.Nodes.JsonNode
    name: JsonNode
    isExternal: true
    href: System.Text.Json.Nodes.JsonNode.html
  - name: ','
  - name: " "
  - uid: System.Text.Json.Serialization.Metadata.JsonTypeInfo`1
    name: JsonTypeInfo
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: System.html
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: System.Text.html
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: System.Text.Json.html
- uid: System.Text.Json.Nodes.JsonArray
  commentId: T:System.Text.Json.Nodes.JsonArray
  parent: System.Text.Json.Nodes
  isExternal: true
  href: System.Text.Json.Nodes.JsonArray.html
  name: JsonArray
  nameWithType: JsonArray
  fullName: System.Text.Json.Nodes.JsonArray
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Text.Json.Nodes.JsonNode.AsArray*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.AsArray
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_AsArray
  name: AsArray
  nameWithType: JsonNode.AsArray
  fullName: System.Text.Json.Nodes.JsonNode.AsArray
- uid: System.Text.Json.Nodes.JsonObject
  commentId: T:System.Text.Json.Nodes.JsonObject
  parent: System.Text.Json.Nodes
  isExternal: true
  href: System.Text.Json.Nodes.JsonObject.html
  name: JsonObject
  nameWithType: JsonObject
  fullName: System.Text.Json.Nodes.JsonObject
- uid: System.Text.Json.Nodes.JsonNode.AsObject*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.AsObject
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_AsObject
  name: AsObject
  nameWithType: JsonNode.AsObject
  fullName: System.Text.Json.Nodes.JsonNode.AsObject
- uid: System.Text.Json.Nodes.JsonValue
  commentId: T:System.Text.Json.Nodes.JsonValue
  parent: System.Text.Json.Nodes
  isExternal: true
  href: System.Text.Json.Nodes.JsonValue.html
  name: JsonValue
  nameWithType: JsonValue
  fullName: System.Text.Json.Nodes.JsonValue
- uid: System.Text.Json.Nodes.JsonNode.AsValue*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.AsValue
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_AsValue
  name: AsValue
  nameWithType: JsonNode.AsValue
  fullName: System.Text.Json.Nodes.JsonNode.AsValue
- uid: System.Text.Json.Nodes.JsonNode.GetPath*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.GetPath
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_GetPath
  name: GetPath
  nameWithType: JsonNode.GetPath
  fullName: System.Text.Json.Nodes.JsonNode.GetPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Text.Json.Nodes.JsonNode
  commentId: T:System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html
  name: JsonNode
  nameWithType: JsonNode
  fullName: System.Text.Json.Nodes.JsonNode
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.formatexception
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.Text.Json.Nodes.JsonNode.GetValue*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.GetValue
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_GetValue__1
  name: GetValue
  nameWithType: JsonNode.GetValue
  fullName: System.Text.Json.Nodes.JsonNode.GetValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Text.Json.Nodes.JsonNode.op_Implicit*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.op_Implicit
  name: implicit operator
  nameWithType: JsonNode.implicit operator
  fullName: System.Text.Json.Nodes.JsonNode.implicit operator
  nameWithType.vb: JsonNode.CType
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.Nullable{System.Byte}
  commentId: T:System.Nullable{System.Byte}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.Nullable{System.Char}
  commentId: T:System.Nullable{System.Char}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset?
  nameWithType: DateTimeOffset?
  fullName: System.DateTimeOffset?
  spec.csharp:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
  spec.vb:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal?
  nameWithType: decimal?
  fullName: decimal?
  nameWithType.vb: Decimal?
  fullName.vb: Decimal?
  name.vb: Decimal?
  spec.csharp:
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid?
  nameWithType: Guid?
  fullName: System.Guid?
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: System.Nullable{System.Int16}
  commentId: T:System.Nullable{System.Int16}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte
  nameWithType: sbyte
  fullName: sbyte
  nameWithType.vb: SByte
  fullName.vb: SByte
  name.vb: SByte
- uid: System.Nullable{System.SByte}
  commentId: T:System.Nullable{System.SByte}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: System.Nullable{System.UInt16}
  commentId: T:System.Nullable{System.UInt16}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.Nullable{System.UInt32}
  commentId: T:System.Nullable{System.UInt32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.nullable
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: System.Text.Json.Nodes.JsonNode.op_Explicit*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.op_Explicit
  name: explicit operator
  nameWithType: JsonNode.explicit operator
  fullName: System.Text.Json.Nodes.JsonNode.explicit operator
  nameWithType.vb: JsonNode.CType
  fullName.vb: System.Text.Json.Nodes.JsonNode.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Text.Json.JsonException
  commentId: T:System.Text.Json.JsonException
  isExternal: true
  href: System.Text.Json.JsonException.html
  name: JsonException
  nameWithType: JsonException
  fullName: System.Text.Json.JsonException
- uid: System.Text.Json.Nodes.JsonNode.Parse*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.Parse
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_Parse_System_Text_Json_Utf8JsonReader__System_Nullable_System_Text_Json_Nodes_JsonNodeOptions__
  name: Parse
  nameWithType: JsonNode.Parse
  fullName: System.Text.Json.Nodes.JsonNode.Parse
- uid: System.Text.Json.Utf8JsonReader
  commentId: T:System.Text.Json.Utf8JsonReader
  parent: System.Text.Json
  isExternal: true
  href: System.Text.Json.Utf8JsonReader.html
  name: Utf8JsonReader
  nameWithType: Utf8JsonReader
  fullName: System.Text.Json.Utf8JsonReader
- uid: System.Nullable{System.Text.Json.Nodes.JsonNodeOptions}
  commentId: T:System.Nullable{System.Text.Json.Nodes.JsonNodeOptions}
  parent: System
  definition: System.Nullable`1
  href: System.Text.Json.Nodes.JsonNodeOptions.html
  name: JsonNodeOptions?
  nameWithType: JsonNodeOptions?
  fullName: System.Text.Json.Nodes.JsonNodeOptions?
  spec.csharp:
  - uid: System.Text.Json.Nodes.JsonNodeOptions
    name: JsonNodeOptions
    isExternal: true
    href: System.Text.Json.Nodes.JsonNodeOptions.html
  - name: '?'
  spec.vb:
  - uid: System.Text.Json.Nodes.JsonNodeOptions
    name: JsonNodeOptions
    isExternal: true
    href: System.Text.Json.Nodes.JsonNodeOptions.html
  - name: '?'
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Text.Json.JsonDocumentOptions
  commentId: T:System.Text.Json.JsonDocumentOptions
  parent: System.Text.Json
  isExternal: true
  href: System.Text.Json.JsonDocumentOptions.html
  name: JsonDocumentOptions
  nameWithType: JsonDocumentOptions
  fullName: System.Text.Json.JsonDocumentOptions
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System.Text.Json.Nodes.JsonNode.ToJsonString*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.ToJsonString
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_ToJsonString_System_Text_Json_JsonSerializerOptions_
  name: ToJsonString
  nameWithType: JsonNode.ToJsonString
  fullName: System.Text.Json.Nodes.JsonNode.ToJsonString
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  href: System.Text.Json.JsonSerializerOptions.html
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Text.Json.Nodes.JsonNode.ToString*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.ToString
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_ToString
  name: ToString
  nameWithType: JsonNode.ToString
  fullName: System.Text.Json.Nodes.JsonNode.ToString
- uid: System.Text.Json.Utf8JsonWriter
  commentId: T:System.Text.Json.Utf8JsonWriter
  parent: System.Text.Json
  isExternal: true
  href: System.Text.Json.Utf8JsonWriter.html
  name: Utf8JsonWriter
  nameWithType: Utf8JsonWriter
  fullName: System.Text.Json.Utf8JsonWriter
- uid: System.Text.Json.Nodes.JsonNode.WriteTo*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.WriteTo
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_WriteTo_System_Text_Json_Utf8JsonWriter_System_Text_Json_JsonSerializerOptions_
  name: WriteTo
  nameWithType: JsonNode.WriteTo
  fullName: System.Text.Json.Nodes.JsonNode.WriteTo
- uid: System.Text.Json.Nodes.JsonNode.Options*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.Options
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_Options
  name: Options
  nameWithType: JsonNode.Options
  fullName: System.Text.Json.Nodes.JsonNode.Options
- uid: System.Text.Json.Nodes.JsonNode.Parent*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.Parent
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_Parent
  name: Parent
  nameWithType: JsonNode.Parent
  fullName: System.Text.Json.Nodes.JsonNode.Parent
- uid: System.Text.Json.Nodes.JsonNode.Root*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.Root
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_Root
  name: Root
  nameWithType: JsonNode.Root
  fullName: System.Text.Json.Nodes.JsonNode.Root
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Text.Json.Nodes.JsonNode.Item*
  commentId: Overload:System.Text.Json.Nodes.JsonNode.Item
  isExternal: true
  href: System.Text.Json.Nodes.JsonNode.html#System_Text_Json_Nodes_JsonNode_Item_System_Int32_
  name: this
  nameWithType: JsonNode.this
  fullName: System.Text.Json.Nodes.JsonNode.this
  nameWithType.vb: JsonNode.this[]
  fullName.vb: System.Text.Json.Nodes.JsonNode.this[]
  name.vb: this[]
