### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  id: ISourceManager
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  children:
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddByInjectionLocationAsync(System.String,CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsAttribute)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsEvent)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsField)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsMethod)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsProperty)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsType)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddBeforeAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddBeforeAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToBeginningAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToEndAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddBeforeAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddBeforeAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddAfterAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddBeforeAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberCommentOut(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsMember)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddBeforeAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddBeforeAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsClass)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsClass,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddBeforeAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsEnum)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsEnum,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddBeforeAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsInterface)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsInterface,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsStructure)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsStructure,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddBeforeAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddBeforeAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.Source
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToBeginningAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToEndAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddAfterAsync(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddBeforeAsync(System.String)
  langs:
  - csharp
  - vb
  name: ISourceManager
  nameWithType: ISourceManager
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  type: Interface
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Contract that manages the update to the source tracked by the manager implementation
  example: []
  syntax:
    content: 'public interface ISourceManager : IBuildManagement'
    content.vb: Public Interface ISourceManager Inherits IBuildManagement
  inheritedMembers:
  - CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateMappedNamespaces(System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace})
  - CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateNamespaceManager(CodeFactory.WinVs.Models.CSharp.NamespaceManager)
  - CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.LoadNamespaceManager
  - CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UsingStatementAddAsync(System.String,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.VsActions
  - CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.NamespaceManager
  - CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.MappedNamespaces
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddByInjectionLocationAsync(System.String,CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddByInjectionLocationAsync(System.String,CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation)
  id: AddByInjectionLocationAsync(System.String,CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: AddByInjectionLocationAsync(string, InjectionLocation)
  nameWithType: ISourceManager.AddByInjectionLocationAsync(string, InjectionLocation)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddByInjectionLocationAsync(string, CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax to the target injection location provided.
  example: []
  syntax:
    content: Task AddByInjectionLocationAsync(string syntax, InjectionLocation location)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    - id: location
      type: CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation
      description: The location within the source code file to inject at.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddByInjectionLocationAsync(syntax As String, location As InjectionLocation) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddByInjectionLocationAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.AddByInjectionLocationAsync(String, InjectionLocation)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddByInjectionLocationAsync(String, CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation)
  name.vb: AddByInjectionLocationAsync(String, InjectionLocation)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToBeginningAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToBeginningAsync(System.String)
  id: SourceAddToBeginningAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: SourceAddToBeginningAsync(string)
  nameWithType: ISourceManager.SourceAddToBeginningAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToBeginningAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax to the beginning of the source file.
  example: []
  syntax:
    content: Task SourceAddToBeginningAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SourceAddToBeginningAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToBeginningAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.SourceAddToBeginningAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToBeginningAsync(String)
  name.vb: SourceAddToBeginningAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToEndAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToEndAsync(System.String)
  id: SourceAddToEndAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: SourceAddToEndAsync(string)
  nameWithType: ISourceManager.SourceAddToEndAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToEndAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax to the end of the source file.
  example: []
  syntax:
    content: Task SourceAddToEndAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SourceAddToEndAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToEndAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.SourceAddToEndAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToEndAsync(String)
  name.vb: SourceAddToEndAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddBeforeAsync(System.String)
  id: ContainerAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: ContainerAddBeforeAsync(string)
  nameWithType: ISourceManager.ContainerAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax before the containers definition.
  example: []
  syntax:
    content: Task ContainerAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ContainerAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.ContainerAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddBeforeAsync(String)
  name.vb: ContainerAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddAfterAsync(System.String)
  id: ContainerAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: ContainerAddAfterAsync(string)
  nameWithType: ISourceManager.ContainerAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax after containers definition.
  example: []
  syntax:
    content: Task ContainerAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ContainerAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.ContainerAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddAfterAsync(String)
  name.vb: ContainerAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToBeginningAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToBeginningAsync(System.String)
  id: ContainerAddToBeginningAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: ContainerAddToBeginningAsync(string)
  nameWithType: ISourceManager.ContainerAddToBeginningAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToBeginningAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax to the beginning of the containers definition.
  example: []
  syntax:
    content: Task ContainerAddToBeginningAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ContainerAddToBeginningAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToBeginningAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.ContainerAddToBeginningAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToBeginningAsync(String)
  name.vb: ContainerAddToBeginningAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToEndAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToEndAsync(System.String)
  id: ContainerAddToEndAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: ContainerAddToEndAsync(string)
  nameWithType: ISourceManager.ContainerAddToEndAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToEndAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax to the end of the containers definition.
  example: []
  syntax:
    content: Task ContainerAddToEndAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ContainerAddToEndAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToEndAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.ContainerAddToEndAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToEndAsync(String)
  name.vb: ContainerAddToEndAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddBeforeAsync(System.String)
  id: UsingStatementsAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: UsingStatementsAddBeforeAsync(string)
  nameWithType: ISourceManager.UsingStatementsAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax before the first using statement definition.
  example: []
  syntax:
    content: Task UsingStatementsAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function UsingStatementsAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.UsingStatementsAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddBeforeAsync(String)
  name.vb: UsingStatementsAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddAfterAsync(System.String)
  id: UsingStatementsAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: UsingStatementsAddAfterAsync(string)
  nameWithType: ISourceManager.UsingStatementsAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax before the first using statement definition.
  example: []
  syntax:
    content: Task UsingStatementsAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function UsingStatementsAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.UsingStatementsAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddAfterAsync(String)
  name.vb: UsingStatementsAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddBeforeAsync(System.String)
  id: FieldsAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: FieldsAddBeforeAsync(string)
  nameWithType: ISourceManager.FieldsAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax before the field definitions.
  example: []
  syntax:
    content: Task FieldsAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function FieldsAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.FieldsAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddBeforeAsync(String)
  name.vb: FieldsAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddAfterAsync(System.String)
  id: FieldsAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: FieldsAddAfterAsync(string)
  nameWithType: ISourceManager.FieldsAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Adds the provided syntax after the field definitions.
  example: []
  syntax:
    content: Task FieldsAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function FieldsAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.FieldsAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddAfterAsync(String)
  name.vb: FieldsAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddBeforeAsync(System.String)
  id: ConstructorsAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: ConstructorsAddBeforeAsync(string)
  nameWithType: ISourceManager.ConstructorsAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax before the constructor definitions.
  example: []
  syntax:
    content: Task ConstructorsAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ConstructorsAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.ConstructorsAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddBeforeAsync(String)
  name.vb: ConstructorsAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddAfterAsync(System.String)
  id: ConstructorsAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: ConstructorsAddAfterAsync(string)
  nameWithType: ISourceManager.ConstructorsAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax after the constructor definitions.
  example: []
  syntax:
    content: Task ConstructorsAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ConstructorsAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.ConstructorsAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddAfterAsync(String)
  name.vb: ConstructorsAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddBeforeAsync(System.String)
  id: PropertiesAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: PropertiesAddBeforeAsync(string)
  nameWithType: ISourceManager.PropertiesAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax before the property definitions.
  example: []
  syntax:
    content: Task PropertiesAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function PropertiesAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.PropertiesAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddBeforeAsync(String)
  name.vb: PropertiesAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddAfterAsync(System.String)
  id: PropertiesAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: PropertiesAddAfterAsync(string)
  nameWithType: ISourceManager.PropertiesAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax after the property definitions.
  example: []
  syntax:
    content: Task PropertiesAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function PropertiesAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.PropertiesAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddAfterAsync(String)
  name.vb: PropertiesAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddBeforeAsync(System.String)
  id: EventsAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: EventsAddBeforeAsync(string)
  nameWithType: ISourceManager.EventsAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax before the event definitions.
  example: []
  syntax:
    content: Task EventsAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function EventsAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.EventsAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddBeforeAsync(String)
  name.vb: EventsAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddAfterAsync(System.String)
  id: EventsAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: EventsAddAfterAsync(string)
  nameWithType: ISourceManager.EventsAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax after the event definitions.
  example: []
  syntax:
    content: Task EventsAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function EventsAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.EventsAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddAfterAsync(String)
  name.vb: EventsAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddBeforeAsync(System.String)
  id: MethodsAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: MethodsAddBeforeAsync(string)
  nameWithType: ISourceManager.MethodsAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax before the method definitions.
  example: []
  syntax:
    content: Task MethodsAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MethodsAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.MethodsAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddBeforeAsync(String)
  name.vb: MethodsAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddAfterAsync(System.String)
  id: MethodsAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: MethodsAddAfterAsync(string)
  nameWithType: ISourceManager.MethodsAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax after the method definitions.
  example: []
  syntax:
    content: Task MethodsAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MethodsAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.MethodsAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddAfterAsync(String)
  name.vb: MethodsAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddBeforeAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddBeforeAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  id: MemberAddBeforeAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: MemberAddBeforeAsync(CsMember, string)
  nameWithType: ISourceManager.MemberAddBeforeAsync(CsMember, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddBeforeAsync(CodeFactory.WinVs.Models.CSharp.CsMember, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the syntax before the target member.
  example: []
  syntax:
    content: Task MemberAddBeforeAsync(CsMember member, string syntax)
    parameters:
    - id: member
      type: CodeFactory.WinVs.Models.CSharp.CsMember
      description: Target member.
    - id: syntax
      type: System.String
      description: The syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MemberAddBeforeAsync(member As CsMember, syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.MemberAddBeforeAsync(CsMember, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddBeforeAsync(CodeFactory.WinVs.Models.CSharp.CsMember, String)
  name.vb: MemberAddBeforeAsync(CsMember, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddAfterAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddAfterAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  id: MemberAddAfterAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: MemberAddAfterAsync(CsMember, string)
  nameWithType: ISourceManager.MemberAddAfterAsync(CsMember, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddAfterAsync(CodeFactory.WinVs.Models.CSharp.CsMember, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the syntax after the target member.
  example: []
  syntax:
    content: Task MemberAddAfterAsync(CsMember member, string syntax)
    parameters:
    - id: member
      type: CodeFactory.WinVs.Models.CSharp.CsMember
      description: Target member.
    - id: syntax
      type: System.String
      description: The syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MemberAddAfterAsync(member As CsMember, syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.MemberAddAfterAsync(CsMember, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddAfterAsync(CodeFactory.WinVs.Models.CSharp.CsMember, String)
  name.vb: MemberAddAfterAsync(CsMember, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberCommentOut(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberCommentOut(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  id: MemberCommentOut(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: MemberCommentOut(CsMember, string)
  nameWithType: ISourceManager.MemberCommentOut(CsMember, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberCommentOut(CodeFactory.WinVs.Models.CSharp.CsMember, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Comments out member from the source container.
  example: []
  syntax:
    content: Task MemberCommentOut(CsMember member, string commentSyntax = "//")
    parameters:
    - id: member
      type: CodeFactory.WinVs.Models.CSharp.CsMember
      description: Target member.
    - id: commentSyntax
      type: System.String
      description: Optional parameters sets the syntax to use when commenting out the member. This will default to use '//'
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MemberCommentOut(member As CsMember, commentSyntax As String = "//") As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberCommentOut*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.MemberCommentOut(CsMember, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberCommentOut(CodeFactory.WinVs.Models.CSharp.CsMember, String)
  name.vb: MemberCommentOut(CsMember, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  id: MemberReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsMember,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: MemberReplaceAsync(CsMember, string)
  nameWithType: ISourceManager.MemberReplaceAsync(CsMember, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsMember, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Syntax replaces the target member.
  example: []
  syntax:
    content: Task MemberReplaceAsync(CsMember member, string syntax)
    parameters:
    - id: member
      type: CodeFactory.WinVs.Models.CSharp.CsMember
      description: Target member.
    - id: syntax
      type: System.String
      description: The syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MemberReplaceAsync(member As CsMember, syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberReplaceAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.MemberReplaceAsync(CsMember, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsMember, String)
  name.vb: MemberReplaceAsync(CsMember, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsMember)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsMember)
  id: MemberRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsMember)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: MemberRemoveAsync(CsMember)
  nameWithType: ISourceManager.MemberRemoveAsync(CsMember)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsMember)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Removes the target member.
  example: []
  syntax:
    content: Task MemberRemoveAsync(CsMember member)
    parameters:
    - id: member
      type: CodeFactory.WinVs.Models.CSharp.CsMember
      description: Target member.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function MemberRemoveAsync(member As CsMember) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberRemoveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddBeforeAsync(System.String)
  id: NestedEnumAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedEnumAddBeforeAsync(string)
  nameWithType: ISourceManager.NestedEnumAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax before the nested enumeration definitions.
  example: []
  syntax:
    content: Task NestedEnumAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedEnumAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedEnumAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddBeforeAsync(String)
  name.vb: NestedEnumAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddAfterAsync(System.String)
  id: NestedEnumAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedEnumAddAfterAsync(string)
  nameWithType: ISourceManager.NestedEnumAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax after the nested enumeration definitions.
  example: []
  syntax:
    content: Task NestedEnumAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedEnumAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedEnumAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddAfterAsync(String)
  name.vb: NestedEnumAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsEnum)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsEnum)
  id: NestedEnumRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsEnum)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedEnumRemoveAsync(CsEnum)
  nameWithType: ISourceManager.NestedEnumRemoveAsync(CsEnum)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsEnum)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Removes the nested enumeration.
  example: []
  syntax:
    content: Task NestedEnumRemoveAsync(CsEnum nested)
    parameters:
    - id: nested
      type: CodeFactory.WinVs.Models.CSharp.CsEnum
      description: The target nested enumeration.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedEnumRemoveAsync(nested As CsEnum) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumRemoveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsEnum,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsEnum,System.String)
  id: NestedEnumReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsEnum,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedEnumReplaceAsync(CsEnum, string)
  nameWithType: ISourceManager.NestedEnumReplaceAsync(CsEnum, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsEnum, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Replaces the nested enumeration with the provided syntax
  example: []
  syntax:
    content: Task NestedEnumReplaceAsync(CsEnum nested, string syntax)
    parameters:
    - id: nested
      type: CodeFactory.WinVs.Models.CSharp.CsEnum
      description: The target nested enumeration.
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedEnumReplaceAsync(nested As CsEnum, syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumReplaceAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedEnumReplaceAsync(CsEnum, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsEnum, String)
  name.vb: NestedEnumReplaceAsync(CsEnum, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddBeforeAsync(System.String)
  id: NestedInterfaceAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedInterfaceAddBeforeAsync(string)
  nameWithType: ISourceManager.NestedInterfaceAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax before the nested interface definitions.
  example: []
  syntax:
    content: Task NestedInterfaceAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedInterfaceAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedInterfaceAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddBeforeAsync(String)
  name.vb: NestedInterfaceAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddAfterAsync(System.String)
  id: NestedInterfaceAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedInterfaceAddAfterAsync(string)
  nameWithType: ISourceManager.NestedInterfaceAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax after the nested interface definitions.
  example: []
  syntax:
    content: Task NestedInterfaceAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedInterfaceAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedInterfaceAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddAfterAsync(String)
  name.vb: NestedInterfaceAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsInterface)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsInterface)
  id: NestedInterfaceRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsInterface)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedInterfaceRemoveAsync(CsInterface)
  nameWithType: ISourceManager.NestedInterfaceRemoveAsync(CsInterface)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsInterface)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Removes the nested interface.
  example: []
  syntax:
    content: Task NestedInterfaceRemoveAsync(CsInterface nested)
    parameters:
    - id: nested
      type: CodeFactory.WinVs.Models.CSharp.CsInterface
      description: The target nested interface.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedInterfaceRemoveAsync(nested As CsInterface) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceRemoveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsInterface,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsInterface,System.String)
  id: NestedInterfaceReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsInterface,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedInterfaceReplaceAsync(CsInterface, string)
  nameWithType: ISourceManager.NestedInterfaceReplaceAsync(CsInterface, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsInterface, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Replaces the nested interface with the provided syntax
  example: []
  syntax:
    content: Task NestedInterfaceReplaceAsync(CsInterface nested, string syntax)
    parameters:
    - id: nested
      type: CodeFactory.WinVs.Models.CSharp.CsInterface
      description: The target nested interface.
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedInterfaceReplaceAsync(nested As CsInterface, syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceReplaceAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedInterfaceReplaceAsync(CsInterface, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsInterface, String)
  name.vb: NestedInterfaceReplaceAsync(CsInterface, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddBeforeAsync(System.String)
  id: NestedStructuresAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedStructuresAddBeforeAsync(string)
  nameWithType: ISourceManager.NestedStructuresAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax before the nested structures definitions.
  example: []
  syntax:
    content: Task NestedStructuresAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedStructuresAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedStructuresAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddBeforeAsync(String)
  name.vb: NestedStructuresAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddAfterAsync(System.String)
  id: NestedStructuresAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedStructuresAddAfterAsync(string)
  nameWithType: ISourceManager.NestedStructuresAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax after the nested structures definitions.
  example: []
  syntax:
    content: Task NestedStructuresAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedStructuresAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedStructuresAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddAfterAsync(String)
  name.vb: NestedStructuresAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsStructure)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsStructure)
  id: NestedStructureRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsStructure)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedStructureRemoveAsync(CsStructure)
  nameWithType: ISourceManager.NestedStructureRemoveAsync(CsStructure)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsStructure)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Removes the nested structure.
  example: []
  syntax:
    content: Task NestedStructureRemoveAsync(CsStructure nested)
    parameters:
    - id: nested
      type: CodeFactory.WinVs.Models.CSharp.CsStructure
      description: The target nested structure.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedStructureRemoveAsync(nested As CsStructure) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureRemoveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsStructure,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsStructure,System.String)
  id: NestedStructureReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsStructure,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedStructureReplaceAsync(CsStructure, string)
  nameWithType: ISourceManager.NestedStructureReplaceAsync(CsStructure, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsStructure, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Replaces the nested structure with the provided syntax
  example: []
  syntax:
    content: Task NestedStructureReplaceAsync(CsStructure nested, string syntax)
    parameters:
    - id: nested
      type: CodeFactory.WinVs.Models.CSharp.CsStructure
      description: The target nested structure.
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedStructureReplaceAsync(nested As CsStructure, syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureReplaceAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedStructureReplaceAsync(CsStructure, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsStructure, String)
  name.vb: NestedStructureReplaceAsync(CsStructure, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddBeforeAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddBeforeAsync(System.String)
  id: NestedClassesAddBeforeAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedClassesAddBeforeAsync(string)
  nameWithType: ISourceManager.NestedClassesAddBeforeAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddBeforeAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax before the nested classes definitions.
  example: []
  syntax:
    content: Task NestedClassesAddBeforeAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedClassesAddBeforeAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddBeforeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedClassesAddBeforeAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddBeforeAsync(String)
  name.vb: NestedClassesAddBeforeAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddAfterAsync(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddAfterAsync(System.String)
  id: NestedClassesAddAfterAsync(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedClassesAddAfterAsync(string)
  nameWithType: ISourceManager.NestedClassesAddAfterAsync(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddAfterAsync(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Add the provided syntax after the nested classes definitions.
  example: []
  syntax:
    content: Task NestedClassesAddAfterAsync(string syntax)
    parameters:
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedClassesAddAfterAsync(syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddAfterAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedClassesAddAfterAsync(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddAfterAsync(String)
  name.vb: NestedClassesAddAfterAsync(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsClass)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsClass)
  id: NestedClassesRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsClass)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedClassesRemoveAsync(CsClass)
  nameWithType: ISourceManager.NestedClassesRemoveAsync(CsClass)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesRemoveAsync(CodeFactory.WinVs.Models.CSharp.CsClass)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Removes the nested class.
  example: []
  syntax:
    content: Task NestedClassesRemoveAsync(CsClass nested)
    parameters:
    - id: nested
      type: CodeFactory.WinVs.Models.CSharp.CsClass
      description: The target nested class.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedClassesRemoveAsync(nested As CsClass) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesRemoveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsClass,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsClass,System.String)
  id: NestedClassesReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsClass,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: NestedClassesReplaceAsync(CsClass, string)
  nameWithType: ISourceManager.NestedClassesReplaceAsync(CsClass, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsClass, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Replaces the nested class with the provided syntax
  example: []
  syntax:
    content: Task NestedClassesReplaceAsync(CsClass nested, string syntax)
    parameters:
    - id: nested
      type: CodeFactory.WinVs.Models.CSharp.CsClass
      description: The target nested class.
    - id: syntax
      type: System.String
      description: Target syntax to be added.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function NestedClassesReplaceAsync(nested As CsClass, syntax As String) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesReplaceAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if either the source or the container is null after updating.
  nameWithType.vb: ISourceManager.NestedClassesReplaceAsync(CsClass, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesReplaceAsync(CodeFactory.WinVs.Models.CSharp.CsClass, String)
  name.vb: NestedClassesReplaceAsync(CsClass, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsMethod)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsMethod)
  id: AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsMethod)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: AddMissingUsingStatementsAsync(CsMethod)
  nameWithType: ISourceManager.AddMissingUsingStatementsAsync(CsMethod)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsMethod)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Checks all types definitions and makes sure they are included in the namespace manager for the target update source.
  example: []
  syntax:
    content: Task AddMissingUsingStatementsAsync(CsMethod sourceMethod)
    parameters:
    - id: sourceMethod
      type: CodeFactory.WinVs.Models.CSharp.CsMethod
      description: The target model to check using statements on.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddMissingUsingStatementsAsync(sourceMethod As CsMethod) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync*
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsProperty)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsProperty)
  id: AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsProperty)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: AddMissingUsingStatementsAsync(CsProperty)
  nameWithType: ISourceManager.AddMissingUsingStatementsAsync(CsProperty)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsProperty)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Checks all types definitions and makes sure they are included in the namespace manager for the target update source.
  example: []
  syntax:
    content: Task AddMissingUsingStatementsAsync(CsProperty sourceProperty)
    parameters:
    - id: sourceProperty
      type: CodeFactory.WinVs.Models.CSharp.CsProperty
      description: The target model to check using statements on.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddMissingUsingStatementsAsync(sourceProperty As CsProperty) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync*
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsEvent)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsEvent)
  id: AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsEvent)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: AddMissingUsingStatementsAsync(CsEvent)
  nameWithType: ISourceManager.AddMissingUsingStatementsAsync(CsEvent)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsEvent)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Checks all types definitions and makes sure they are included in the namespace manager for the target update source.
  example: []
  syntax:
    content: Task AddMissingUsingStatementsAsync(CsEvent sourceEvent)
    parameters:
    - id: sourceEvent
      type: CodeFactory.WinVs.Models.CSharp.CsEvent
      description: The target model to check using statements on.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddMissingUsingStatementsAsync(sourceEvent As CsEvent) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync*
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsField)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsField)
  id: AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsField)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: AddMissingUsingStatementsAsync(CsField)
  nameWithType: ISourceManager.AddMissingUsingStatementsAsync(CsField)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsField)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Checks all types definitions and makes sure they are included in the namespace manager for the target update source.
  example: []
  syntax:
    content: Task AddMissingUsingStatementsAsync(CsField sourceField)
    parameters:
    - id: sourceField
      type: CodeFactory.WinVs.Models.CSharp.CsField
      description: The target model to check using statements on.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddMissingUsingStatementsAsync(sourceField As CsField) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync*
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsAttribute)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsAttribute)
  id: AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsAttribute)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: AddMissingUsingStatementsAsync(CsAttribute)
  nameWithType: ISourceManager.AddMissingUsingStatementsAsync(CsAttribute)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsAttribute)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Checks all types definitions and makes sure they are included in the namespace manager for the target update source.
  example: []
  syntax:
    content: Task AddMissingUsingStatementsAsync(CsAttribute sourceAttribute)
    parameters:
    - id: sourceAttribute
      type: CodeFactory.WinVs.Models.CSharp.CsAttribute
      description: The target model to check using statements on.
    return:
      type: System.Threading.Tasks.Task
      description: Missing using statements added or the original update source if no additional using statements needed.
    content.vb: Function AddMissingUsingStatementsAsync(sourceAttribute As CsAttribute) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync*
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsType)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsType)
  id: AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsType)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: AddMissingUsingStatementsAsync(CsType)
  nameWithType: ISourceManager.AddMissingUsingStatementsAsync(CsType)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync(CodeFactory.WinVs.Models.CSharp.CsType)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Checks all types definitions and makes sure they are included in the namespace manager for the target update source.
  example: []
  syntax:
    content: Task AddMissingUsingStatementsAsync(CsType sourceType)
    parameters:
    - id: sourceType
      type: CodeFactory.WinVs.Models.CSharp.CsType
      description: The target model to check using statements on.
    return:
      type: System.Threading.Tasks.Task
      description: Missing using statements added or the original update source if no additional using statements needed.
    content.vb: Function AddMissingUsingStatementsAsync(sourceType As CsType) As Task
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync*
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.Source
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.Source
  id: Source
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: ISourceManager.Source
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.Source
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/ISourceManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Target source that is being updated.
  example: []
  syntax:
    content: CsSource Source { get; }
    parameters: []
    return:
      type: CodeFactory.WinVs.Models.CSharp.CsSource
    content.vb: ReadOnly Property Source As CsSource
  overload: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.Source*
references:
- uid: CodeFactory.WinVs.Models.CSharp.Builder
  commentId: N:CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp.Builder
  nameWithType: CodeFactory.WinVs.Models.CSharp.Builder
  fullName: CodeFactory.WinVs.Models.CSharp.Builder
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.Builder
    name: Builder
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.Builder
    name: Builder
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.html
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateMappedNamespaces(System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace})
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateMappedNamespaces(System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace})
  parent: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_UpdateMappedNamespaces_System_Collections_Generic_List_CodeFactory_WinVs_Models_CSharp_MapNamespace__
  name: UpdateMappedNamespaces(List<MapNamespace>)
  nameWithType: IBuildManagement.UpdateMappedNamespaces(List<MapNamespace>)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateMappedNamespaces(System.Collections.Generic.List<CodeFactory.WinVs.Models.CSharp.MapNamespace>)
  nameWithType.vb: IBuildManagement.UpdateMappedNamespaces(List(Of MapNamespace))
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateMappedNamespaces(System.Collections.Generic.List(Of CodeFactory.WinVs.Models.CSharp.MapNamespace))
  name.vb: UpdateMappedNamespaces(List(Of MapNamespace))
  spec.csharp:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateMappedNamespaces(System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace})
    name: UpdateMappedNamespaces
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_UpdateMappedNamespaces_System_Collections_Generic_List_CodeFactory_WinVs_Models_CSharp_MapNamespace__
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.MapNamespace
    name: MapNamespace
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.MapNamespace.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateMappedNamespaces(System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace})
    name: UpdateMappedNamespaces
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_UpdateMappedNamespaces_System_Collections_Generic_List_CodeFactory_WinVs_Models_CSharp_MapNamespace__
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.MapNamespace
    name: MapNamespace
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.MapNamespace.html
  - name: )
  - name: )
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateNamespaceManager(CodeFactory.WinVs.Models.CSharp.NamespaceManager)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateNamespaceManager(CodeFactory.WinVs.Models.CSharp.NamespaceManager)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_UpdateNamespaceManager_CodeFactory_WinVs_Models_CSharp_NamespaceManager_
  name: UpdateNamespaceManager(NamespaceManager)
  nameWithType: IBuildManagement.UpdateNamespaceManager(NamespaceManager)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateNamespaceManager(CodeFactory.WinVs.Models.CSharp.NamespaceManager)
  spec.csharp:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateNamespaceManager(CodeFactory.WinVs.Models.CSharp.NamespaceManager)
    name: UpdateNamespaceManager
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_UpdateNamespaceManager_CodeFactory_WinVs_Models_CSharp_NamespaceManager_
  - name: (
  - uid: CodeFactory.WinVs.Models.CSharp.NamespaceManager
    name: NamespaceManager
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.NamespaceManager.html
  - name: )
  spec.vb:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UpdateNamespaceManager(CodeFactory.WinVs.Models.CSharp.NamespaceManager)
    name: UpdateNamespaceManager
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_UpdateNamespaceManager_CodeFactory_WinVs_Models_CSharp_NamespaceManager_
  - name: (
  - uid: CodeFactory.WinVs.Models.CSharp.NamespaceManager
    name: NamespaceManager
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.NamespaceManager.html
  - name: )
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.LoadNamespaceManager
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.LoadNamespaceManager
  parent: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_LoadNamespaceManager
  name: LoadNamespaceManager()
  nameWithType: IBuildManagement.LoadNamespaceManager()
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.LoadNamespaceManager()
  spec.csharp:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.LoadNamespaceManager
    name: LoadNamespaceManager
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_LoadNamespaceManager
  - name: (
  - name: )
  spec.vb:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.LoadNamespaceManager
    name: LoadNamespaceManager
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_LoadNamespaceManager
  - name: (
  - name: )
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UsingStatementAddAsync(System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UsingStatementAddAsync(System.String,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_UsingStatementAddAsync_System_String_System_String_
  name: UsingStatementAddAsync(string, string)
  nameWithType: IBuildManagement.UsingStatementAddAsync(string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UsingStatementAddAsync(string, string)
  nameWithType.vb: IBuildManagement.UsingStatementAddAsync(String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UsingStatementAddAsync(String, String)
  name.vb: UsingStatementAddAsync(String, String)
  spec.csharp:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UsingStatementAddAsync(System.String,System.String)
    name: UsingStatementAddAsync
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_UsingStatementAddAsync_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.UsingStatementAddAsync(System.String,System.String)
    name: UsingStatementAddAsync
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_UsingStatementAddAsync_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.VsActions
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.VsActions
  parent: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_VsActions
  name: VsActions
  nameWithType: IBuildManagement.VsActions
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.VsActions
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.NamespaceManager
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.NamespaceManager
  parent: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_NamespaceManager
  name: NamespaceManager
  nameWithType: IBuildManagement.NamespaceManager
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.NamespaceManager
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.MappedNamespaces
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.MappedNamespaces
  parent: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html#CodeFactory_WinVs_Models_CSharp_Builder_IBuildManagement_MappedNamespaces
  name: MappedNamespaces
  nameWithType: IBuildManagement.MappedNamespaces
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.MappedNamespaces
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement.html
  name: IBuildManagement
  nameWithType: IBuildManagement
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBuildManagement
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddByInjectionLocationAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddByInjectionLocationAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_AddByInjectionLocationAsync_System_String_CodeFactory_WinVs_Models_CSharp_Builder_InjectionLocation_
  name: AddByInjectionLocationAsync
  nameWithType: ISourceManager.AddByInjectionLocationAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddByInjectionLocationAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation.html
  name: InjectionLocation
  nameWithType: InjectionLocation
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.InjectionLocation
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToBeginningAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToBeginningAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_SourceAddToBeginningAsync_System_String_
  name: SourceAddToBeginningAsync
  nameWithType: ISourceManager.SourceAddToBeginningAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToBeginningAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToEndAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToEndAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_SourceAddToEndAsync_System_String_
  name: SourceAddToEndAsync
  nameWithType: ISourceManager.SourceAddToEndAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.SourceAddToEndAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_ContainerAddBeforeAsync_System_String_
  name: ContainerAddBeforeAsync
  nameWithType: ISourceManager.ContainerAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_ContainerAddAfterAsync_System_String_
  name: ContainerAddAfterAsync
  nameWithType: ISourceManager.ContainerAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToBeginningAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToBeginningAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_ContainerAddToBeginningAsync_System_String_
  name: ContainerAddToBeginningAsync
  nameWithType: ISourceManager.ContainerAddToBeginningAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToBeginningAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToEndAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToEndAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_ContainerAddToEndAsync_System_String_
  name: ContainerAddToEndAsync
  nameWithType: ISourceManager.ContainerAddToEndAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ContainerAddToEndAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_UsingStatementsAddBeforeAsync_System_String_
  name: UsingStatementsAddBeforeAsync
  nameWithType: ISourceManager.UsingStatementsAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_UsingStatementsAddAfterAsync_System_String_
  name: UsingStatementsAddAfterAsync
  nameWithType: ISourceManager.UsingStatementsAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.UsingStatementsAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_FieldsAddBeforeAsync_System_String_
  name: FieldsAddBeforeAsync
  nameWithType: ISourceManager.FieldsAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_FieldsAddAfterAsync_System_String_
  name: FieldsAddAfterAsync
  nameWithType: ISourceManager.FieldsAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.FieldsAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_ConstructorsAddBeforeAsync_System_String_
  name: ConstructorsAddBeforeAsync
  nameWithType: ISourceManager.ConstructorsAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_ConstructorsAddAfterAsync_System_String_
  name: ConstructorsAddAfterAsync
  nameWithType: ISourceManager.ConstructorsAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.ConstructorsAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_PropertiesAddBeforeAsync_System_String_
  name: PropertiesAddBeforeAsync
  nameWithType: ISourceManager.PropertiesAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_PropertiesAddAfterAsync_System_String_
  name: PropertiesAddAfterAsync
  nameWithType: ISourceManager.PropertiesAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.PropertiesAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_EventsAddBeforeAsync_System_String_
  name: EventsAddBeforeAsync
  nameWithType: ISourceManager.EventsAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_EventsAddAfterAsync_System_String_
  name: EventsAddAfterAsync
  nameWithType: ISourceManager.EventsAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.EventsAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_MethodsAddBeforeAsync_System_String_
  name: MethodsAddBeforeAsync
  nameWithType: ISourceManager.MethodsAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_MethodsAddAfterAsync_System_String_
  name: MethodsAddAfterAsync
  nameWithType: ISourceManager.MethodsAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MethodsAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_MemberAddBeforeAsync_CodeFactory_WinVs_Models_CSharp_CsMember_System_String_
  name: MemberAddBeforeAsync
  nameWithType: ISourceManager.MemberAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.CsMember
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsMember
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsMember.html
  name: CsMember
  nameWithType: CsMember
  fullName: CodeFactory.WinVs.Models.CSharp.CsMember
- uid: CodeFactory.WinVs.Models.CSharp
  commentId: N:CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp
  nameWithType: CodeFactory.WinVs.Models.CSharp
  fullName: CodeFactory.WinVs.Models.CSharp
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_MemberAddAfterAsync_CodeFactory_WinVs_Models_CSharp_CsMember_System_String_
  name: MemberAddAfterAsync
  nameWithType: ISourceManager.MemberAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberCommentOut*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberCommentOut
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_MemberCommentOut_CodeFactory_WinVs_Models_CSharp_CsMember_System_String_
  name: MemberCommentOut
  nameWithType: ISourceManager.MemberCommentOut
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberCommentOut
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberReplaceAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberReplaceAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_MemberReplaceAsync_CodeFactory_WinVs_Models_CSharp_CsMember_System_String_
  name: MemberReplaceAsync
  nameWithType: ISourceManager.MemberReplaceAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberReplaceAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberRemoveAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberRemoveAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_MemberRemoveAsync_CodeFactory_WinVs_Models_CSharp_CsMember_
  name: MemberRemoveAsync
  nameWithType: ISourceManager.MemberRemoveAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.MemberRemoveAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedEnumAddBeforeAsync_System_String_
  name: NestedEnumAddBeforeAsync
  nameWithType: ISourceManager.NestedEnumAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedEnumAddAfterAsync_System_String_
  name: NestedEnumAddAfterAsync
  nameWithType: ISourceManager.NestedEnumAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumRemoveAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumRemoveAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedEnumRemoveAsync_CodeFactory_WinVs_Models_CSharp_CsEnum_
  name: NestedEnumRemoveAsync
  nameWithType: ISourceManager.NestedEnumRemoveAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumRemoveAsync
- uid: CodeFactory.WinVs.Models.CSharp.CsEnum
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsEnum
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsEnum.html
  name: CsEnum
  nameWithType: CsEnum
  fullName: CodeFactory.WinVs.Models.CSharp.CsEnum
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumReplaceAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumReplaceAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedEnumReplaceAsync_CodeFactory_WinVs_Models_CSharp_CsEnum_System_String_
  name: NestedEnumReplaceAsync
  nameWithType: ISourceManager.NestedEnumReplaceAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedEnumReplaceAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedInterfaceAddBeforeAsync_System_String_
  name: NestedInterfaceAddBeforeAsync
  nameWithType: ISourceManager.NestedInterfaceAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedInterfaceAddAfterAsync_System_String_
  name: NestedInterfaceAddAfterAsync
  nameWithType: ISourceManager.NestedInterfaceAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceRemoveAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceRemoveAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedInterfaceRemoveAsync_CodeFactory_WinVs_Models_CSharp_CsInterface_
  name: NestedInterfaceRemoveAsync
  nameWithType: ISourceManager.NestedInterfaceRemoveAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceRemoveAsync
- uid: CodeFactory.WinVs.Models.CSharp.CsInterface
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsInterface
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsInterface.html
  name: CsInterface
  nameWithType: CsInterface
  fullName: CodeFactory.WinVs.Models.CSharp.CsInterface
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceReplaceAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceReplaceAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedInterfaceReplaceAsync_CodeFactory_WinVs_Models_CSharp_CsInterface_System_String_
  name: NestedInterfaceReplaceAsync
  nameWithType: ISourceManager.NestedInterfaceReplaceAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedInterfaceReplaceAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedStructuresAddBeforeAsync_System_String_
  name: NestedStructuresAddBeforeAsync
  nameWithType: ISourceManager.NestedStructuresAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedStructuresAddAfterAsync_System_String_
  name: NestedStructuresAddAfterAsync
  nameWithType: ISourceManager.NestedStructuresAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructuresAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureRemoveAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureRemoveAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedStructureRemoveAsync_CodeFactory_WinVs_Models_CSharp_CsStructure_
  name: NestedStructureRemoveAsync
  nameWithType: ISourceManager.NestedStructureRemoveAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureRemoveAsync
- uid: CodeFactory.WinVs.Models.CSharp.CsStructure
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsStructure
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsStructure.html
  name: CsStructure
  nameWithType: CsStructure
  fullName: CodeFactory.WinVs.Models.CSharp.CsStructure
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureReplaceAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureReplaceAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedStructureReplaceAsync_CodeFactory_WinVs_Models_CSharp_CsStructure_System_String_
  name: NestedStructureReplaceAsync
  nameWithType: ISourceManager.NestedStructureReplaceAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedStructureReplaceAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddBeforeAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddBeforeAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedClassesAddBeforeAsync_System_String_
  name: NestedClassesAddBeforeAsync
  nameWithType: ISourceManager.NestedClassesAddBeforeAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddBeforeAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddAfterAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddAfterAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedClassesAddAfterAsync_System_String_
  name: NestedClassesAddAfterAsync
  nameWithType: ISourceManager.NestedClassesAddAfterAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesAddAfterAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesRemoveAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesRemoveAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedClassesRemoveAsync_CodeFactory_WinVs_Models_CSharp_CsClass_
  name: NestedClassesRemoveAsync
  nameWithType: ISourceManager.NestedClassesRemoveAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesRemoveAsync
- uid: CodeFactory.WinVs.Models.CSharp.CsClass
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsClass
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsClass.html
  name: CsClass
  nameWithType: CsClass
  fullName: CodeFactory.WinVs.Models.CSharp.CsClass
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesReplaceAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesReplaceAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_NestedClassesReplaceAsync_CodeFactory_WinVs_Models_CSharp_CsClass_System_String_
  name: NestedClassesReplaceAsync
  nameWithType: ISourceManager.NestedClassesReplaceAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.NestedClassesReplaceAsync
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_AddMissingUsingStatementsAsync_CodeFactory_WinVs_Models_CSharp_CsMethod_
  name: AddMissingUsingStatementsAsync
  nameWithType: ISourceManager.AddMissingUsingStatementsAsync
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.AddMissingUsingStatementsAsync
- uid: CodeFactory.WinVs.Models.CSharp.CsMethod
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsMethod
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsMethod.html
  name: CsMethod
  nameWithType: CsMethod
  fullName: CodeFactory.WinVs.Models.CSharp.CsMethod
- uid: CodeFactory.WinVs.Models.CSharp.CsProperty
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsProperty
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsProperty.html
  name: CsProperty
  nameWithType: CsProperty
  fullName: CodeFactory.WinVs.Models.CSharp.CsProperty
- uid: CodeFactory.WinVs.Models.CSharp.CsEvent
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsEvent
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsEvent.html
  name: CsEvent
  nameWithType: CsEvent
  fullName: CodeFactory.WinVs.Models.CSharp.CsEvent
- uid: CodeFactory.WinVs.Models.CSharp.CsField
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsField
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsField.html
  name: CsField
  nameWithType: CsField
  fullName: CodeFactory.WinVs.Models.CSharp.CsField
- uid: CodeFactory.WinVs.Models.CSharp.CsAttribute
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsAttribute
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsAttribute.html
  name: CsAttribute
  nameWithType: CsAttribute
  fullName: CodeFactory.WinVs.Models.CSharp.CsAttribute
- uid: CodeFactory.WinVs.Models.CSharp.CsType
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsType
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsType.html
  name: CsType
  nameWithType: CsType
  fullName: CodeFactory.WinVs.Models.CSharp.CsType
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.Source*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.Source
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.html#CodeFactory_WinVs_Models_CSharp_Builder_ISourceManager_Source
  name: Source
  nameWithType: ISourceManager.Source
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ISourceManager.Source
- uid: CodeFactory.WinVs.Models.CSharp.CsSource
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsSource
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsSource.html
  name: CsSource
  nameWithType: CsSource
  fullName: CodeFactory.WinVs.Models.CSharp.CsSource
