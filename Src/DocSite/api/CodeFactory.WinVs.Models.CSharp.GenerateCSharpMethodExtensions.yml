### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions
  commentId: T:CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions
  id: GenerateCSharpMethodExtensions
  parent: CodeFactory.WinVs.Models.CSharp
  children:
  - CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodName(CodeFactory.WinVs.Models.CSharp.CsMethod,System.Boolean,System.String,System.String,System.String,System.String)
  - CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature(CodeFactory.WinVs.Models.CSharp.CsMethod,CodeFactory.WinVs.Models.CSharp.NamespaceManager,System.Boolean,System.Boolean,CodeFactory.WinVs.Models.CSharp.CsSecurity,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace},System.Boolean,System.String,System.String,System.Boolean,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: GenerateCSharpMethodExtensions
  nameWithType: GenerateCSharpMethodExtensions
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions
  type: Class
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/GenerateCSharpMethodExtensions.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Extension methods that support the generation of source in the C# language from the <xref href="CodeFactory.WinVs.Models.CSharp.CsMethod" data-throw-if-not-resolved="false"></xref> model.
  example: []
  syntax:
    content: public static class GenerateCSharpMethodExtensions
    content.vb: Public Module GenerateCSharpMethodExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature(CodeFactory.WinVs.Models.CSharp.CsMethod,CodeFactory.WinVs.Models.CSharp.NamespaceManager,System.Boolean,System.Boolean,CodeFactory.WinVs.Models.CSharp.CsSecurity,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace},System.Boolean,System.String,System.String,System.Boolean,System.String,System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature(CodeFactory.WinVs.Models.CSharp.CsMethod,CodeFactory.WinVs.Models.CSharp.NamespaceManager,System.Boolean,System.Boolean,CodeFactory.WinVs.Models.CSharp.CsSecurity,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace},System.Boolean,System.String,System.String,System.Boolean,System.String,System.String,System.String)
  id: GenerateCSharpMethodSignature(CodeFactory.WinVs.Models.CSharp.CsMethod,CodeFactory.WinVs.Models.CSharp.NamespaceManager,System.Boolean,System.Boolean,CodeFactory.WinVs.Models.CSharp.CsSecurity,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace},System.Boolean,System.String,System.String,System.Boolean,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions
  langs:
  - csharp
  - vb
  name: GenerateCSharpMethodSignature(CsMethod, NamespaceManager, bool, bool, CsSecurity, bool, bool, bool, bool, bool, bool, bool, List<MapNamespace>, bool, string, string, bool, string, string, string)
  nameWithType: GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature(CsMethod, NamespaceManager, bool, bool, CsSecurity, bool, bool, bool, bool, bool, bool, bool, List<MapNamespace>, bool, string, string, bool, string, string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature(CodeFactory.WinVs.Models.CSharp.CsMethod, CodeFactory.WinVs.Models.CSharp.NamespaceManager, bool, bool, CodeFactory.WinVs.Models.CSharp.CsSecurity, bool, bool, bool, bool, bool, bool, bool, System.Collections.Generic.List<CodeFactory.WinVs.Models.CSharp.MapNamespace>, bool, string, string, bool, string, string, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/GenerateCSharpMethodExtensions.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Generates a C# method signature from model data. This provides a fully customizable method for generating the signature.
  example: []
  syntax:
    content: public static string GenerateCSharpMethodSignature(this CsMethod source, NamespaceManager manager = null, bool includeAsyncKeyword = true, bool includeSecurity = true, CsSecurity methodSecurity = CsSecurity.Unknown, bool includeKeywords = true, bool abstractKeyword = false, bool sealedKeyword = false, bool staticKeyword = false, bool virtualKeyword = false, bool overrideKeyword = false, bool includeAbstractKeyword = false, List<MapNamespace> mappedNamespaces = null, bool forceAsyncDefinition = false, string asyncPrefix = null, string asyncSuffix = null, bool isInterfaceSignature = false, string methodName = null, string namePrefix = null, string nameSuffix = null)
    parameters:
    - id: source
      type: CodeFactory.WinVs.Models.CSharp.CsMethod
      description: The source method data to generate the signature from.
    - id: manager
      type: CodeFactory.WinVs.Models.CSharp.NamespaceManager
      description: Optional parameter that contains all the using statements from the source code, when used will replace namespaces on type definition in code.
    - id: includeAsyncKeyword
      type: System.Boolean
      description: Include the async keyword if the return type is Task
    - id: includeSecurity
      type: System.Boolean
      description: Includes the security scope which was defined in the model.
    - id: methodSecurity
      type: CodeFactory.WinVs.Models.CSharp.CsSecurity
      description: Optional parameter that allows you to set the security scope for the method.
    - id: includeKeywords
      type: System.Boolean
      description: Includes all keywords assigned to the source model.
    - id: abstractKeyword
      type: System.Boolean
      description: Optional flag that will add the abstract keyword to the method signature,default is false.
    - id: sealedKeyword
      type: System.Boolean
      description: Optional flag that will add the sealed keyword to the method signature, default is false.
    - id: staticKeyword
      type: System.Boolean
      description: Optional flag that will add the static keyword to the method signature, default is false.
    - id: virtualKeyword
      type: System.Boolean
      description: Optional flag that will add the static keyword to the method signature, default is false.
    - id: overrideKeyword
      type: System.Boolean
      description: Optional flag that will add the override keyword to the method signature, default is false.
    - id: includeAbstractKeyword
      type: System.Boolean
      description: Will include the definition for the abstract keyword in the definition if it is defined. default is false.
    - id: mappedNamespaces
      type: System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace}
      description: Optional parameter that provides namespaces to be mapped to.
    - id: forceAsyncDefinition
      type: System.Boolean
      description: Optional parameter that forces the method to confirm to an async signature, default value is false.
    - id: asyncPrefix
      type: System.String
      description: Optional parameter that is used with forceAsyncDefinition that includes an expected prefix on the method name, default value is null.
    - id: asyncSuffix
      type: System.String
      description: Optional parameter that is used with forceAsyncDefinition that includes an expected suffix on the method name, default value is null.
    - id: isInterfaceSignature
      type: System.Boolean
      description: Optional parameter used to determine if the method is being built for a interface definition, default value is null.
    - id: methodName
      type: System.String
      description: Optional parameter that sets what the methods name will return as with the signature.
    - id: namePrefix
      type: System.String
      description: Optional parameter that determines if the name will have a prefix assigned to it, default is null.
    - id: nameSuffix
      type: System.String
      description: Optional parameter that determines if the name will have a prefix assigned to it, default is null.
    return:
      type: System.String
      description: Fully formatted method deceleration or null if the method data was missing.
    content.vb: Public Shared Function GenerateCSharpMethodSignature(source As CsMethod, manager As NamespaceManager = Nothing, includeAsyncKeyword As Boolean = True, includeSecurity As Boolean = True, methodSecurity As CsSecurity = CsSecurity.Unknown, includeKeywords As Boolean = True, abstractKeyword As Boolean = False, sealedKeyword As Boolean = False, staticKeyword As Boolean = False, virtualKeyword As Boolean = False, overrideKeyword As Boolean = False, includeAbstractKeyword As Boolean = False, mappedNamespaces As List(Of MapNamespace) = Nothing, forceAsyncDefinition As Boolean = False, asyncPrefix As String = Nothing, asyncSuffix As String = Nothing, isInterfaceSignature As Boolean = False, methodName As String = Nothing, namePrefix As String = Nothing, nameSuffix As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature*
  nameWithType.vb: GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature(CsMethod, NamespaceManager, Boolean, Boolean, CsSecurity, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, List(Of MapNamespace), Boolean, String, String, Boolean, String, String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature(CodeFactory.WinVs.Models.CSharp.CsMethod, CodeFactory.WinVs.Models.CSharp.NamespaceManager, Boolean, Boolean, CodeFactory.WinVs.Models.CSharp.CsSecurity, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, System.Collections.Generic.List(Of CodeFactory.WinVs.Models.CSharp.MapNamespace), Boolean, String, String, Boolean, String, String, String)
  name.vb: GenerateCSharpMethodSignature(CsMethod, NamespaceManager, Boolean, Boolean, CsSecurity, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, List(Of MapNamespace), Boolean, String, String, Boolean, String, String, String)
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodName(CodeFactory.WinVs.Models.CSharp.CsMethod,System.Boolean,System.String,System.String,System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodName(CodeFactory.WinVs.Models.CSharp.CsMethod,System.Boolean,System.String,System.String,System.String,System.String)
  id: GenerateCSharpMethodName(CodeFactory.WinVs.Models.CSharp.CsMethod,System.Boolean,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions
  langs:
  - csharp
  - vb
  name: GenerateCSharpMethodName(CsMethod, bool, string, string, string, string)
  nameWithType: GenerateCSharpMethodExtensions.GenerateCSharpMethodName(CsMethod, bool, string, string, string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodName(CodeFactory.WinVs.Models.CSharp.CsMethod, bool, string, string, string, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/GenerateCSharpMethodExtensions.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Creates a full formatted method name from a source method model
  example: []
  syntax:
    content: public static string GenerateCSharpMethodName(this CsMethod source, bool forceAsyncMethod = false, string namePrefix = null, string nameSuffix = null, string asyncPrefix = null, string asyncSuffix = null)
    parameters:
    - id: source
      type: CodeFactory.WinVs.Models.CSharp.CsMethod
      description: Method model to generate the name from.
    - id: forceAsyncMethod
      type: System.Boolean
      description: Optional, determines if the method name should be forced for async method, default is false.
    - id: namePrefix
      type: System.String
      description: Optional,prefix to be added to the name, default is null.
    - id: nameSuffix
      type: System.String
      description: Optional,suffix to be added to the name, default is null.
    - id: asyncPrefix
      type: System.String
      description: Optional,prefix to be added to the name if it is a async method, default is null.
    - id: asyncSuffix
      type: System.String
      description: Optional,suffix to be added to the name if it is a async method, default is null.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GenerateCSharpMethodName(source As CsMethod, forceAsyncMethod As Boolean = False, namePrefix As String = Nothing, nameSuffix As String = Nothing, asyncPrefix As String = Nothing, asyncSuffix As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodName*
  nameWithType.vb: GenerateCSharpMethodExtensions.GenerateCSharpMethodName(CsMethod, Boolean, String, String, String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodName(CodeFactory.WinVs.Models.CSharp.CsMethod, Boolean, String, String, String, String)
  name.vb: GenerateCSharpMethodName(CsMethod, Boolean, String, String, String, String)
references:
- uid: CodeFactory.WinVs.Models.CSharp.CsMethod
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsMethod
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsMethod.html
  name: CsMethod
  nameWithType: CsMethod
  fullName: CodeFactory.WinVs.Models.CSharp.CsMethod
- uid: CodeFactory.WinVs.Models.CSharp
  commentId: N:CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp
  nameWithType: CodeFactory.WinVs.Models.CSharp
  fullName: CodeFactory.WinVs.Models.CSharp
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.html#CodeFactory_WinVs_Models_CSharp_GenerateCSharpMethodExtensions_GenerateCSharpMethodSignature_CodeFactory_WinVs_Models_CSharp_CsMethod_CodeFactory_WinVs_Models_CSharp_NamespaceManager_System_Boolean_System_Boolean_CodeFactory_WinVs_Models_CSharp_CsSecurity_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Collections_Generic_List_CodeFactory_WinVs_Models_CSharp_MapNamespace__System_Boolean_System_String_System_String_System_Boolean_System_String_System_String_System_String_
  name: GenerateCSharpMethodSignature
  nameWithType: GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodSignature
- uid: CodeFactory.WinVs.Models.CSharp.NamespaceManager
  commentId: T:CodeFactory.WinVs.Models.CSharp.NamespaceManager
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.NamespaceManager.html
  name: NamespaceManager
  nameWithType: NamespaceManager
  fullName: CodeFactory.WinVs.Models.CSharp.NamespaceManager
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CodeFactory.WinVs.Models.CSharp.CsSecurity
  commentId: T:CodeFactory.WinVs.Models.CSharp.CsSecurity
  parent: CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.CsSecurity.html
  name: CsSecurity
  nameWithType: CsSecurity
  fullName: CodeFactory.WinVs.Models.CSharp.CsSecurity
- uid: System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace}
  commentId: T:System.Collections.Generic.List{CodeFactory.WinVs.Models.CSharp.MapNamespace}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<MapNamespace>
  nameWithType: List<MapNamespace>
  fullName: System.Collections.Generic.List<CodeFactory.WinVs.Models.CSharp.MapNamespace>
  nameWithType.vb: List(Of MapNamespace)
  fullName.vb: System.Collections.Generic.List(Of CodeFactory.WinVs.Models.CSharp.MapNamespace)
  name.vb: List(Of MapNamespace)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.MapNamespace
    name: MapNamespace
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.MapNamespace.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.MapNamespace
    name: MapNamespace
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.MapNamespace.html
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodName*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodName
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.html#CodeFactory_WinVs_Models_CSharp_GenerateCSharpMethodExtensions_GenerateCSharpMethodName_CodeFactory_WinVs_Models_CSharp_CsMethod_System_Boolean_System_String_System_String_System_String_System_String_
  name: GenerateCSharpMethodName
  nameWithType: GenerateCSharpMethodExtensions.GenerateCSharpMethodName
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpMethodExtensions.GenerateCSharpMethodName
