### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions
  commentId: T:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions
  id: GenerateCSharpStringExtensions
  parent: CodeFactory.WinVs.Models.CSharp
  children:
  - CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpCamelCase(System.String)
  - CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName(System.String,System.String,System.String)
  - CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName(System.String,System.String,System.String)
  - CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedName(System.String,System.String,System.String,System.Boolean,System.Boolean)
  - CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpProperCase(System.String)
  langs:
  - csharp
  - vb
  name: GenerateCSharpStringExtensions
  nameWithType: GenerateCSharpStringExtensions
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions
  type: Class
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/GenerateCSharpStringExtensions.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Extension methods that support the generation of source in the C# language from the name of target csharp models.
  example: []
  syntax:
    content: public static class GenerateCSharpStringExtensions
    content.vb: Public Module GenerateCSharpStringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpCamelCase(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpCamelCase(System.String)
  id: GenerateCSharpCamelCase(System.String)
  isExtensionMethod: true
  parent: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions
  langs:
  - csharp
  - vb
  name: GenerateCSharpCamelCase(string)
  nameWithType: GenerateCSharpStringExtensions.GenerateCSharpCamelCase(string)
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpCamelCase(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/GenerateCSharpStringExtensions.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Formats a string as camel case.
  example: []
  syntax:
    content: public static string GenerateCSharpCamelCase(this string source)
    parameters:
    - id: source
      type: System.String
      description: The source string to format as camel case.
    return:
      type: System.String
      description: The formatted string.
    content.vb: Public Shared Function GenerateCSharpCamelCase(source As String) As String
  overload: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpCamelCase*
  nameWithType.vb: GenerateCSharpStringExtensions.GenerateCSharpCamelCase(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpCamelCase(String)
  name.vb: GenerateCSharpCamelCase(String)
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpProperCase(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpProperCase(System.String)
  id: GenerateCSharpProperCase(System.String)
  isExtensionMethod: true
  parent: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions
  langs:
  - csharp
  - vb
  name: GenerateCSharpProperCase(string)
  nameWithType: GenerateCSharpStringExtensions.GenerateCSharpProperCase(string)
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpProperCase(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/GenerateCSharpStringExtensions.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Formats a string as proper case.
  example: []
  syntax:
    content: public static string GenerateCSharpProperCase(this string source)
    parameters:
    - id: source
      type: System.String
      description: the source string to format as proper case.
    return:
      type: System.String
      description: The formatted string.
    content.vb: Public Shared Function GenerateCSharpProperCase(source As String) As String
  overload: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpProperCase*
  nameWithType.vb: GenerateCSharpStringExtensions.GenerateCSharpProperCase(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpProperCase(String)
  name.vb: GenerateCSharpProperCase(String)
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedName(System.String,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedName(System.String,System.String,System.String,System.Boolean,System.Boolean)
  id: GenerateCSharpFormattedName(System.String,System.String,System.String,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions
  langs:
  - csharp
  - vb
  name: GenerateCSharpFormattedName(string, string, string, bool, bool)
  nameWithType: GenerateCSharpStringExtensions.GenerateCSharpFormattedName(string, string, string, bool, bool)
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedName(string, string, string, bool, bool)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/GenerateCSharpStringExtensions.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Formats a C# object name to the target format provided.
  example: []
  syntax:
    content: public static string GenerateCSharpFormattedName(this string source, string prefix = null, string suffix = null, bool useCamelCase = false, bool useProperCase = false)
    parameters:
    - id: source
      type: System.String
      description: Name to be formatted.
    - id: prefix
      type: System.String
      description: Optional parameter with the prefix to add to the name, default is null.
    - id: suffix
      type: System.String
      description: Optional parameter with the suffix to add to the name, default is null.
    - id: useCamelCase
      type: System.Boolean
      description: 'Optional parameter that determines if the name should follow the camel case format. Note: applied before the prefix is assigned.'
    - id: useProperCase
      type: System.Boolean
      description: 'Optional parameter that determines if the name should follow the proper case format. Note: applied before the prefix is assigned.'
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GenerateCSharpFormattedName(source As String, prefix As String = Nothing, suffix As String = Nothing, useCamelCase As Boolean = False, useProperCase As Boolean = False) As String
  overload: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedName*
  nameWithType.vb: GenerateCSharpStringExtensions.GenerateCSharpFormattedName(String, String, String, Boolean, Boolean)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedName(String, String, String, Boolean, Boolean)
  name.vb: GenerateCSharpFormattedName(String, String, String, Boolean, Boolean)
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName(System.String,System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName(System.String,System.String,System.String)
  id: GenerateCSharpFormattedClassName(System.String,System.String,System.String)
  isExtensionMethod: true
  parent: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions
  langs:
  - csharp
  - vb
  name: GenerateCSharpFormattedClassName(string, string, string)
  nameWithType: GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName(string, string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName(string, string, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/GenerateCSharpStringExtensions.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Formates a C# object name to be a class name with proper case formatting.
  example: []
  syntax:
    content: public static string GenerateCSharpFormattedClassName(this string source, string prefix = null, string suffix = null)
    parameters:
    - id: source
      type: System.String
      description: Name to be formatted.
    - id: prefix
      type: System.String
      description: Optional parameter with the prefix to add to the name, default is null.
    - id: suffix
      type: System.String
      description: Optional parameter with the suffix to add to the name, default is null.
    return:
      type: System.String
      description: Formatted class name, or null if no name was provided.
    content.vb: Public Shared Function GenerateCSharpFormattedClassName(source As String, prefix As String = Nothing, suffix As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName*
  nameWithType.vb: GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName(String, String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName(String, String, String)
  name.vb: GenerateCSharpFormattedClassName(String, String, String)
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName(System.String,System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName(System.String,System.String,System.String)
  id: GenerateCSharpFormattedInterfaceName(System.String,System.String,System.String)
  isExtensionMethod: true
  parent: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions
  langs:
  - csharp
  - vb
  name: GenerateCSharpFormattedInterfaceName(string, string, string)
  nameWithType: GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName(string, string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName(string, string, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/GenerateCSharpStringExtensions.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp
  summary: Formats a C# object name to be a interface name with proper case formatting.
  example: []
  syntax:
    content: public static string GenerateCSharpFormattedInterfaceName(this string source, string prefix = null, string suffix = null)
    parameters:
    - id: source
      type: System.String
      description: Name to be formatted.
    - id: prefix
      type: System.String
      description: Optional parameter with the prefix to add to the name, default is null.
    - id: suffix
      type: System.String
      description: Optional parameter with the suffix to add to the name, default is null.
    return:
      type: System.String
      description: Formatted class name, or null if no name was provided.
    content.vb: Public Shared Function GenerateCSharpFormattedInterfaceName(source As String, prefix As String = Nothing, suffix As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName*
  nameWithType.vb: GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName(String, String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName(String, String, String)
  name.vb: GenerateCSharpFormattedInterfaceName(String, String, String)
references:
- uid: CodeFactory.WinVs.Models.CSharp
  commentId: N:CodeFactory.WinVs.Models.CSharp
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp
  nameWithType: CodeFactory.WinVs.Models.CSharp
  fullName: CodeFactory.WinVs.Models.CSharp
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpCamelCase*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpCamelCase
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.html#CodeFactory_WinVs_Models_CSharp_GenerateCSharpStringExtensions_GenerateCSharpCamelCase_System_String_
  name: GenerateCSharpCamelCase
  nameWithType: GenerateCSharpStringExtensions.GenerateCSharpCamelCase
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpCamelCase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpProperCase*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpProperCase
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.html#CodeFactory_WinVs_Models_CSharp_GenerateCSharpStringExtensions_GenerateCSharpProperCase_System_String_
  name: GenerateCSharpProperCase
  nameWithType: GenerateCSharpStringExtensions.GenerateCSharpProperCase
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpProperCase
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedName*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedName
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.html#CodeFactory_WinVs_Models_CSharp_GenerateCSharpStringExtensions_GenerateCSharpFormattedName_System_String_System_String_System_String_System_Boolean_System_Boolean_
  name: GenerateCSharpFormattedName
  nameWithType: GenerateCSharpStringExtensions.GenerateCSharpFormattedName
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedName
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.html#CodeFactory_WinVs_Models_CSharp_GenerateCSharpStringExtensions_GenerateCSharpFormattedClassName_System_String_System_String_System_String_
  name: GenerateCSharpFormattedClassName
  nameWithType: GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedClassName
- uid: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.html#CodeFactory_WinVs_Models_CSharp_GenerateCSharpStringExtensions_GenerateCSharpFormattedInterfaceName_System_String_System_String_System_String_
  name: GenerateCSharpFormattedInterfaceName
  nameWithType: GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName
  fullName: CodeFactory.WinVs.Models.CSharp.GenerateCSharpStringExtensions.GenerateCSharpFormattedInterfaceName
