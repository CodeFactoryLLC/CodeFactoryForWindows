### YamlMime:ManagedReference
items:
- uid: MessagePack.MessagePackSerializer
  commentId: T:MessagePack.MessagePackSerializer
  id: MessagePackSerializer
  parent: MessagePack
  children:
  - MessagePack.MessagePackSerializer.ConvertFromJson(System.IO.TextReader,MessagePack.MessagePackWriter@,MessagePack.MessagePackSerializerOptions)
  - MessagePack.MessagePackSerializer.ConvertFromJson(System.String,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.ConvertFromJson(System.String,MessagePack.MessagePackWriter@,MessagePack.MessagePackSerializerOptions)
  - MessagePack.MessagePackSerializer.ConvertToJson(MessagePack.MessagePackReader@,System.IO.TextWriter,MessagePack.MessagePackSerializerOptions)
  - MessagePack.MessagePackSerializer.ConvertToJson(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.ConvertToJson(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.DefaultOptions
  - MessagePack.MessagePackSerializer.Deserialize(System.Type,MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  - MessagePack.MessagePackSerializer.Deserialize(System.Type,System.Buffers.ReadOnlySequence{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Deserialize(System.Type,System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Deserialize(System.Type,System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.DeserializeAsync(System.Type,System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.DeserializeAsync``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Deserialize``1(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  - MessagePack.MessagePackSerializer.Deserialize``1(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Deserialize``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Int32@,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Serialize(System.Type,MessagePack.MessagePackWriter@,System.Object,MessagePack.MessagePackSerializerOptions)
  - MessagePack.MessagePackSerializer.Serialize(System.Type,System.Buffers.IBufferWriter{System.Byte},System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Serialize(System.Type,System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Serialize(System.Type,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.SerializeAsync(System.Type,System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.SerializeAsync``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.SerializeToJson``1(System.IO.TextWriter,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.SerializeToJson``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Serialize``1(MessagePack.MessagePackWriter@,``0,MessagePack.MessagePackSerializerOptions)
  - MessagePack.MessagePackSerializer.Serialize``1(System.Buffers.IBufferWriter{System.Byte},``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Serialize``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  - MessagePack.MessagePackSerializer.Serialize``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: MessagePackSerializer
  nameWithType: MessagePackSerializer
  fullName: MessagePack.MessagePackSerializer
  type: Class
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: High-Level API of MessagePack for C#.
  example: []
  syntax:
    content: public static class MessagePackSerializer
    content.vb: Public Module MessagePackSerializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: MessagePack.MessagePackSerializer.Serialize``1(System.Buffers.IBufferWriter{System.Byte},``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Serialize``1(System.Buffers.IBufferWriter{System.Byte},``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Serialize``1(System.Buffers.IBufferWriter{System.Byte},``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Serialize<T>(IBufferWriter<byte>, T, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Serialize<T>(IBufferWriter<byte>, T, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Serialize<T>(System.Buffers.IBufferWriter<byte>, T, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Serializes a given value with the specified buffer writer.
  example: []
  syntax:
    content: public static void Serialize<T>(IBufferWriter<byte> writer, T value, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: writer
      type: System.Buffers.IBufferWriter{System.Byte}
      description: The buffer writer to serialize with.
    - id: value
      type: '{T}'
      description: The value to serialize.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Serialize(Of T)(writer As IBufferWriter(Of Byte), value As T, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing)
  overload: MessagePack.MessagePackSerializer.Serialize*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during serialization.
  nameWithType.vb: MessagePackSerializer.Serialize(Of T)(IBufferWriter(Of Byte), T, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(Of T)(System.Buffers.IBufferWriter(Of Byte), T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Of T)(IBufferWriter(Of Byte), T, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Serialize``1(MessagePack.MessagePackWriter@,``0,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.Serialize``1(MessagePack.MessagePackWriter@,``0,MessagePack.MessagePackSerializerOptions)
  id: Serialize``1(MessagePack.MessagePackWriter@,``0,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Serialize<T>(ref MessagePackWriter, T, MessagePackSerializerOptions?)
  nameWithType: MessagePackSerializer.Serialize<T>(ref MessagePackWriter, T, MessagePackSerializerOptions?)
  fullName: MessagePack.MessagePackSerializer.Serialize<T>(ref MessagePack.MessagePackWriter, T, MessagePack.MessagePackSerializerOptions?)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Serializes a given value with the specified buffer writer.
  example: []
  syntax:
    content: public static void Serialize<T>(ref MessagePackWriter writer, T value, MessagePackSerializerOptions? options = null)
    parameters:
    - id: writer
      type: MessagePack.MessagePackWriter
      description: The buffer writer to serialize with.
    - id: value
      type: '{T}'
      description: The value to serialize.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Serialize(Of T)(writer As MessagePackWriter, value As T, options As MessagePackSerializerOptions = Nothing)
  overload: MessagePack.MessagePackSerializer.Serialize*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during serialization.
  nameWithType.vb: MessagePackSerializer.Serialize(Of T)(MessagePackWriter, T, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(Of T)(MessagePack.MessagePackWriter, T, MessagePack.MessagePackSerializerOptions)
  name.vb: Serialize(Of T)(MessagePackWriter, T, MessagePackSerializerOptions)
- uid: MessagePack.MessagePackSerializer.Serialize``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Serialize``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Serialize``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Serialize<T>(T, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Serialize<T>(T, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Serialize<T>(T, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Serializes a given value with the specified buffer writer.
  example: []
  syntax:
    content: public static byte[] Serialize<T>(T value, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: value
      type: '{T}'
      description: The value to serialize.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
    return:
      type: System.Byte[]
      description: A byte array with the serialized value.
    content.vb: Public Shared Function Serialize(Of T)(value As T, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Byte()
  overload: MessagePack.MessagePackSerializer.Serialize*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during serialization.
  nameWithType.vb: MessagePackSerializer.Serialize(Of T)(T, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(Of T)(T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Of T)(T, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Serialize``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Serialize``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Serialize``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Serialize<T>(Stream, T, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Serialize<T>(Stream, T, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Serialize<T>(System.IO.Stream, T, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Serializes a given value to the specified stream.
  example: []
  syntax:
    content: public static void Serialize<T>(Stream stream, T value, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to serialize to.
    - id: value
      type: '{T}'
      description: The value to serialize.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Serialize(Of T)(stream As Stream, value As T, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing)
  overload: MessagePack.MessagePackSerializer.Serialize*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during serialization.
  nameWithType.vb: MessagePackSerializer.Serialize(Of T)(Stream, T, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(Of T)(System.IO.Stream, T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Of T)(Stream, T, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.SerializeAsync``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.SerializeAsync``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: SerializeAsync``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: SerializeAsync<T>(Stream, T, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.SerializeAsync<T>(Stream, T, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.SerializeAsync<T>(System.IO.Stream, T, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Serializes a given value to the specified stream.
  example: []
  syntax:
    content: public static Task SerializeAsync<T>(Stream stream, T value, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to serialize to.
    - id: value
      type: '{T}'
      description: The value to serialize.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
      description: A task that completes with the result of the async serialization operation.
    content.vb: Public Shared Function SerializeAsync(Of T)(stream As Stream, value As T, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: MessagePack.MessagePackSerializer.SerializeAsync*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during serialization.
  nameWithType.vb: MessagePackSerializer.SerializeAsync(Of T)(Stream, T, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.SerializeAsync(Of T)(System.IO.Stream, T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: SerializeAsync(Of T)(Stream, T, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Deserialize``1(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Deserialize``1(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<T>(in ReadOnlySequence<byte>, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Deserialize<T>(in ReadOnlySequence<byte>, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Deserialize<T>(in System.Buffers.ReadOnlySequence<byte>, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Deserializes a value of a given type from a sequence of bytes.
  example: []
  syntax:
    content: public static T Deserialize<T>(in ReadOnlySequence<byte> byteSequence, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: byteSequence
      type: System.Buffers.ReadOnlySequence{System.Byte}
      description: The sequence to deserialize from.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
      description: The type of value to deserialize.
    return:
      type: '{T}'
      description: The deserialized value.
    content.vb: Public Shared Function Deserialize(Of T)(byteSequence As ReadOnlySequence(Of Byte), options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As T
  overload: MessagePack.MessagePackSerializer.Deserialize*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during deserialization.
  nameWithType.vb: MessagePackSerializer.Deserialize(Of T)(ReadOnlySequence(Of Byte), MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(Of T)(System.Buffers.ReadOnlySequence(Of Byte), MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(Of T)(ReadOnlySequence(Of Byte), MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Deserialize``1(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  id: Deserialize``1(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<T>(ref MessagePackReader, MessagePackSerializerOptions?)
  nameWithType: MessagePackSerializer.Deserialize<T>(ref MessagePackReader, MessagePackSerializerOptions?)
  fullName: MessagePack.MessagePackSerializer.Deserialize<T>(ref MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions?)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Deserializes a value of a given type from a sequence of bytes.
  example: []
  syntax:
    content: public static T Deserialize<T>(ref MessagePackReader reader, MessagePackSerializerOptions? options = null)
    parameters:
    - id: reader
      type: MessagePack.MessagePackReader
      description: The reader to deserialize from.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    typeParameters:
    - id: T
      description: The type of value to deserialize.
    return:
      type: '{T}'
      description: The deserialized value.
    content.vb: Public Shared Function Deserialize(Of T)(reader As MessagePackReader, options As MessagePackSerializerOptions = Nothing) As T
  overload: MessagePack.MessagePackSerializer.Deserialize*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during deserialization.
  nameWithType.vb: MessagePackSerializer.Deserialize(Of T)(MessagePackReader, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(Of T)(MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  name.vb: Deserialize(Of T)(MessagePackReader, MessagePackSerializerOptions)
- uid: MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<T>(ReadOnlyMemory<byte>, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Deserialize<T>(ReadOnlyMemory<byte>, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Deserialize<T>(System.ReadOnlyMemory<byte>, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Deserializes a value of a given type from a sequence of bytes.
  example: []
  syntax:
    content: public static T Deserialize<T>(ReadOnlyMemory<byte> buffer, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: buffer
      type: System.ReadOnlyMemory{System.Byte}
      description: The buffer to deserialize from.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
      description: The type of value to deserialize.
    return:
      type: '{T}'
      description: The deserialized value.
    content.vb: Public Shared Function Deserialize(Of T)(buffer As ReadOnlyMemory(Of Byte), options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As T
  overload: MessagePack.MessagePackSerializer.Deserialize*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during deserialization.
  nameWithType.vb: MessagePackSerializer.Deserialize(Of T)(ReadOnlyMemory(Of Byte), MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(Of T)(System.ReadOnlyMemory(Of Byte), MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(Of T)(ReadOnlyMemory(Of Byte), MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Threading.CancellationToken)
  id: Deserialize``1(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<T>(ReadOnlyMemory<byte>, out int, CancellationToken)
  nameWithType: MessagePackSerializer.Deserialize<T>(ReadOnlyMemory<byte>, out int, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Deserialize<T>(System.ReadOnlyMemory<byte>, out int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Deserializes a value of a given type from a sequence of bytes.
  example: []
  syntax:
    content: public static T Deserialize<T>(ReadOnlyMemory<byte> buffer, out int bytesRead, CancellationToken cancellationToken = default)
    parameters:
    - id: buffer
      type: System.ReadOnlyMemory{System.Byte}
      description: The memory to deserialize from.
    - id: bytesRead
      type: System.Int32
      description: The number of bytes read.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
      description: The type of value to deserialize.
    return:
      type: '{T}'
      description: The deserialized value.
    content.vb: Public Shared Function Deserialize(Of T)(buffer As ReadOnlyMemory(Of Byte), bytesRead As Integer, cancellationToken As CancellationToken = Nothing) As T
  overload: MessagePack.MessagePackSerializer.Deserialize*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during deserialization.
  nameWithType.vb: MessagePackSerializer.Deserialize(Of T)(ReadOnlyMemory(Of Byte), Integer, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(Of T)(System.ReadOnlyMemory(Of Byte), Integer, System.Threading.CancellationToken)
  name.vb: Deserialize(Of T)(ReadOnlyMemory(Of Byte), Integer, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Int32@,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Int32@,System.Threading.CancellationToken)
  id: Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Int32@,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<T>(ReadOnlyMemory<byte>, MessagePackSerializerOptions?, out int, CancellationToken)
  nameWithType: MessagePackSerializer.Deserialize<T>(ReadOnlyMemory<byte>, MessagePackSerializerOptions?, out int, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Deserialize<T>(System.ReadOnlyMemory<byte>, MessagePack.MessagePackSerializerOptions?, out int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Deserializes a value of a given type from a sequence of bytes.
  example: []
  syntax:
    content: public static T Deserialize<T>(ReadOnlyMemory<byte> buffer, MessagePackSerializerOptions? options, out int bytesRead, CancellationToken cancellationToken = default)
    parameters:
    - id: buffer
      type: System.ReadOnlyMemory{System.Byte}
      description: The memory to deserialize from.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    - id: bytesRead
      type: System.Int32
      description: The number of bytes read.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
      description: The type of value to deserialize.
    return:
      type: '{T}'
      description: The deserialized value.
    content.vb: Public Shared Function Deserialize(Of T)(buffer As ReadOnlyMemory(Of Byte), options As MessagePackSerializerOptions, bytesRead As Integer, cancellationToken As CancellationToken = Nothing) As T
  overload: MessagePack.MessagePackSerializer.Deserialize*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during deserialization.
  nameWithType.vb: MessagePackSerializer.Deserialize(Of T)(ReadOnlyMemory(Of Byte), MessagePackSerializerOptions, Integer, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(Of T)(System.ReadOnlyMemory(Of Byte), MessagePack.MessagePackSerializerOptions, Integer, System.Threading.CancellationToken)
  name.vb: Deserialize(Of T)(ReadOnlyMemory(Of Byte), MessagePackSerializerOptions, Integer, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Deserialize``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Deserialize``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<T>(Stream, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Deserialize<T>(Stream, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Deserialize<T>(System.IO.Stream, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Deserializes the entire content of a <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>.
  remarks: If multiple top-level msgpack data structures are expected on the stream, use <xref href="MessagePack.MessagePackStreamReader" data-throw-if-not-resolved="false"></xref> instead.
  example: []
  syntax:
    content: public static T Deserialize<T>(Stream stream, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: >-
        The stream to deserialize from.

        The entire stream will be read, and the first msgpack token deserialized will be returned.

        If <xref href="System.IO.Stream.CanSeek" data-throw-if-not-resolved="false"></xref> is true on the stream, its position will be set to just after the last deserialized byte.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
      description: The type of value to deserialize.
    return:
      type: '{T}'
      description: The deserialized value.
    content.vb: Public Shared Function Deserialize(Of T)(stream As Stream, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As T
  overload: MessagePack.MessagePackSerializer.Deserialize*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during deserialization.
  nameWithType.vb: MessagePackSerializer.Deserialize(Of T)(Stream, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(Of T)(System.IO.Stream, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(Of T)(Stream, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.DeserializeAsync``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.DeserializeAsync``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: DeserializeAsync``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: DeserializeAsync<T>(Stream, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.DeserializeAsync<T>(Stream, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.DeserializeAsync<T>(System.IO.Stream, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Deserializes the entire content of a <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>.
  remarks: If multiple top-level msgpack data structures are expected on the stream, use <xref href="MessagePack.MessagePackStreamReader" data-throw-if-not-resolved="false"></xref> instead.
  example: []
  syntax:
    content: public static ValueTask<T> DeserializeAsync<T>(Stream stream, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: >-
        The stream to deserialize from.

        The entire stream will be read, and the first msgpack token deserialized will be returned.

        If <xref href="System.IO.Stream.CanSeek" data-throw-if-not-resolved="false"></xref> is true on the stream, its position will be set to just after the last deserialized byte.
    - id: options
      type: MessagePack.MessagePackSerializerOptions
      description: The options. Use <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use default options.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
      description: The type of value to deserialize.
    return:
      type: System.Threading.Tasks.ValueTask{{T}}
      description: The deserialized value.
    content.vb: Public Shared Function DeserializeAsync(Of T)(stream As Stream, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As ValueTask(Of T)
  overload: MessagePack.MessagePackSerializer.DeserializeAsync*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown when any error occurs during deserialization.
  nameWithType.vb: MessagePackSerializer.DeserializeAsync(Of T)(Stream, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.DeserializeAsync(Of T)(System.IO.Stream, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: DeserializeAsync(Of T)(Stream, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.SerializeToJson``1(System.IO.TextWriter,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.SerializeToJson``1(System.IO.TextWriter,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: SerializeToJson``1(System.IO.TextWriter,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: SerializeToJson<T>(TextWriter, T, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.SerializeToJson<T>(TextWriter, T, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.SerializeToJson<T>(System.IO.TextWriter, T, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Serialize an object to JSON string.
  example: []
  syntax:
    content: public static void SerializeToJson<T>(TextWriter textWriter, T obj, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
    - id: obj
      type: '{T}'
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SerializeToJson(Of T)(textWriter As TextWriter, obj As T, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing)
  overload: MessagePack.MessagePackSerializer.SerializeToJson*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown if an error occurs during serialization.
  nameWithType.vb: MessagePackSerializer.SerializeToJson(Of T)(TextWriter, T, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.SerializeToJson(Of T)(System.IO.TextWriter, T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: SerializeToJson(Of T)(TextWriter, T, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.SerializeToJson``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.SerializeToJson``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: SerializeToJson``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: SerializeToJson<T>(T, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.SerializeToJson<T>(T, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.SerializeToJson<T>(T, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Serialize an object to JSON string.
  example: []
  syntax:
    content: public static string SerializeToJson<T>(T obj, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: obj
      type: '{T}'
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.String
    content.vb: Public Shared Function SerializeToJson(Of T)(obj As T, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As String
  overload: MessagePack.MessagePackSerializer.SerializeToJson*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown if an error occurs during serialization.
  nameWithType.vb: MessagePackSerializer.SerializeToJson(Of T)(T, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.SerializeToJson(Of T)(T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: SerializeToJson(Of T)(T, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.ConvertToJson(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.ConvertToJson(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: ConvertToJson(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: ConvertToJson(ReadOnlyMemory<byte>, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.ConvertToJson(ReadOnlyMemory<byte>, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.ConvertToJson(System.ReadOnlyMemory<byte>, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Convert a message-pack binary to a JSON string.
  example: []
  syntax:
    content: public static string ConvertToJson(ReadOnlyMemory<byte> bytes, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: bytes
      type: System.ReadOnlyMemory{System.Byte}
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.String
    content.vb: Public Shared Function ConvertToJson(bytes As ReadOnlyMemory(Of Byte), options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As String
  overload: MessagePack.MessagePackSerializer.ConvertToJson*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown if an error occurs while reading the messagepack data or writing out the JSON.
  nameWithType.vb: MessagePackSerializer.ConvertToJson(ReadOnlyMemory(Of Byte), MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.ConvertToJson(System.ReadOnlyMemory(Of Byte), MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: ConvertToJson(ReadOnlyMemory(Of Byte), MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.ConvertToJson(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.ConvertToJson(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: ConvertToJson(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: ConvertToJson(in ReadOnlySequence<byte>, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.ConvertToJson(in ReadOnlySequence<byte>, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.ConvertToJson(in System.Buffers.ReadOnlySequence<byte>, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Convert a message-pack binary to a JSON string.
  example: []
  syntax:
    content: public static string ConvertToJson(in ReadOnlySequence<byte> bytes, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: bytes
      type: System.Buffers.ReadOnlySequence{System.Byte}
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.String
    content.vb: Public Shared Function ConvertToJson(bytes As ReadOnlySequence(Of Byte), options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As String
  overload: MessagePack.MessagePackSerializer.ConvertToJson*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown if an error occurs while reading the messagepack data or writing out the JSON.
  nameWithType.vb: MessagePackSerializer.ConvertToJson(ReadOnlySequence(Of Byte), MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.ConvertToJson(System.Buffers.ReadOnlySequence(Of Byte), MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: ConvertToJson(ReadOnlySequence(Of Byte), MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.ConvertToJson(MessagePack.MessagePackReader@,System.IO.TextWriter,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.ConvertToJson(MessagePack.MessagePackReader@,System.IO.TextWriter,MessagePack.MessagePackSerializerOptions)
  id: ConvertToJson(MessagePack.MessagePackReader@,System.IO.TextWriter,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: ConvertToJson(ref MessagePackReader, TextWriter, MessagePackSerializerOptions?)
  nameWithType: MessagePackSerializer.ConvertToJson(ref MessagePackReader, TextWriter, MessagePackSerializerOptions?)
  fullName: MessagePack.MessagePackSerializer.ConvertToJson(ref MessagePack.MessagePackReader, System.IO.TextWriter, MessagePack.MessagePackSerializerOptions?)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Convert a message-pack binary to a JSON string.
  example: []
  syntax:
    content: public static void ConvertToJson(ref MessagePackReader reader, TextWriter jsonWriter, MessagePackSerializerOptions? options = null)
    parameters:
    - id: reader
      type: MessagePack.MessagePackReader
    - id: jsonWriter
      type: System.IO.TextWriter
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    content.vb: Public Shared Sub ConvertToJson(reader As MessagePackReader, jsonWriter As TextWriter, options As MessagePackSerializerOptions = Nothing)
  overload: MessagePack.MessagePackSerializer.ConvertToJson*
  exceptions:
  - type: MessagePack.MessagePackSerializationException
    commentId: T:MessagePack.MessagePackSerializationException
    description: Thrown if an error occurs while reading the messagepack data or writing out the JSON.
  nameWithType.vb: MessagePackSerializer.ConvertToJson(MessagePackReader, TextWriter, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.ConvertToJson(MessagePack.MessagePackReader, System.IO.TextWriter, MessagePack.MessagePackSerializerOptions)
  name.vb: ConvertToJson(MessagePackReader, TextWriter, MessagePackSerializerOptions)
- uid: MessagePack.MessagePackSerializer.ConvertFromJson(System.String,MessagePack.MessagePackWriter@,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.ConvertFromJson(System.String,MessagePack.MessagePackWriter@,MessagePack.MessagePackSerializerOptions)
  id: ConvertFromJson(System.String,MessagePack.MessagePackWriter@,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: ConvertFromJson(string, ref MessagePackWriter, MessagePackSerializerOptions?)
  nameWithType: MessagePackSerializer.ConvertFromJson(string, ref MessagePackWriter, MessagePackSerializerOptions?)
  fullName: MessagePack.MessagePackSerializer.ConvertFromJson(string, ref MessagePack.MessagePackWriter, MessagePack.MessagePackSerializerOptions?)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Translates the given JSON to MessagePack.
  example: []
  syntax:
    content: public static void ConvertFromJson(string str, ref MessagePackWriter writer, MessagePackSerializerOptions? options = null)
    parameters:
    - id: str
      type: System.String
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    content.vb: Public Shared Sub ConvertFromJson(str As String, writer As MessagePackWriter, options As MessagePackSerializerOptions = Nothing)
  overload: MessagePack.MessagePackSerializer.ConvertFromJson*
  nameWithType.vb: MessagePackSerializer.ConvertFromJson(String, MessagePackWriter, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.ConvertFromJson(String, MessagePack.MessagePackWriter, MessagePack.MessagePackSerializerOptions)
  name.vb: ConvertFromJson(String, MessagePackWriter, MessagePackSerializerOptions)
- uid: MessagePack.MessagePackSerializer.ConvertFromJson(System.String,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.ConvertFromJson(System.String,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: ConvertFromJson(System.String,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: ConvertFromJson(string, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.ConvertFromJson(string, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.ConvertFromJson(string, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Translates the given JSON to MessagePack.
  example: []
  syntax:
    content: public static byte[] ConvertFromJson(string str, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: str
      type: System.String
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Byte[]
    content.vb: Public Shared Function ConvertFromJson(str As String, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Byte()
  overload: MessagePack.MessagePackSerializer.ConvertFromJson*
  nameWithType.vb: MessagePackSerializer.ConvertFromJson(String, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.ConvertFromJson(String, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: ConvertFromJson(String, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.ConvertFromJson(System.IO.TextReader,MessagePack.MessagePackWriter@,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.ConvertFromJson(System.IO.TextReader,MessagePack.MessagePackWriter@,MessagePack.MessagePackSerializerOptions)
  id: ConvertFromJson(System.IO.TextReader,MessagePack.MessagePackWriter@,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: ConvertFromJson(TextReader, ref MessagePackWriter, MessagePackSerializerOptions?)
  nameWithType: MessagePackSerializer.ConvertFromJson(TextReader, ref MessagePackWriter, MessagePackSerializerOptions?)
  fullName: MessagePack.MessagePackSerializer.ConvertFromJson(System.IO.TextReader, ref MessagePack.MessagePackWriter, MessagePack.MessagePackSerializerOptions?)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Translates the given JSON to MessagePack.
  example: []
  syntax:
    content: public static void ConvertFromJson(TextReader reader, ref MessagePackWriter writer, MessagePackSerializerOptions? options = null)
    parameters:
    - id: reader
      type: System.IO.TextReader
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    content.vb: Public Shared Sub ConvertFromJson(reader As TextReader, writer As MessagePackWriter, options As MessagePackSerializerOptions = Nothing)
  overload: MessagePack.MessagePackSerializer.ConvertFromJson*
  nameWithType.vb: MessagePackSerializer.ConvertFromJson(TextReader, MessagePackWriter, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.ConvertFromJson(System.IO.TextReader, MessagePack.MessagePackWriter, MessagePack.MessagePackSerializerOptions)
  name.vb: ConvertFromJson(TextReader, MessagePackWriter, MessagePackSerializerOptions)
- uid: MessagePack.MessagePackSerializer.Serialize(System.Type,MessagePack.MessagePackWriter@,System.Object,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.Serialize(System.Type,MessagePack.MessagePackWriter@,System.Object,MessagePack.MessagePackSerializerOptions)
  id: Serialize(System.Type,MessagePack.MessagePackWriter@,System.Object,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Type, ref MessagePackWriter, object?, MessagePackSerializerOptions?)
  nameWithType: MessagePackSerializer.Serialize(Type, ref MessagePackWriter, object?, MessagePackSerializerOptions?)
  fullName: MessagePack.MessagePackSerializer.Serialize(System.Type, ref MessagePack.MessagePackWriter, object?, MessagePack.MessagePackSerializerOptions?)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  example: []
  syntax:
    content: public static void Serialize(Type type, ref MessagePackWriter writer, object? obj, MessagePackSerializerOptions? options = null)
    parameters:
    - id: type
      type: System.Type
    - id: writer
      type: MessagePack.MessagePackWriter
    - id: obj
      type: System.Object
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    content.vb: Public Shared Sub Serialize(type As Type, writer As MessagePackWriter, obj As Object, options As MessagePackSerializerOptions = Nothing)
  overload: MessagePack.MessagePackSerializer.Serialize*
  seealso:
  - linkId: MessagePack.MessagePackSerializer.Serialize``1(MessagePack.MessagePackWriter@,``0,MessagePack.MessagePackSerializerOptions)
    commentId: M:MessagePack.MessagePackSerializer.Serialize``1(MessagePack.MessagePackWriter@,``0,MessagePack.MessagePackSerializerOptions)
  nameWithType.vb: MessagePackSerializer.Serialize(Type, MessagePackWriter, Object, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(System.Type, MessagePack.MessagePackWriter, Object, MessagePack.MessagePackSerializerOptions)
  name.vb: Serialize(Type, MessagePackWriter, Object, MessagePackSerializerOptions)
- uid: MessagePack.MessagePackSerializer.Serialize(System.Type,System.Buffers.IBufferWriter{System.Byte},System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Serialize(System.Type,System.Buffers.IBufferWriter{System.Byte},System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Serialize(System.Type,System.Buffers.IBufferWriter{System.Byte},System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Type, IBufferWriter<byte>, object?, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Serialize(Type, IBufferWriter<byte>, object?, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Serialize(System.Type, System.Buffers.IBufferWriter<byte>, object?, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  example: []
  syntax:
    content: public static void Serialize(Type type, IBufferWriter<byte> writer, object? obj, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.Type
    - id: writer
      type: System.Buffers.IBufferWriter{System.Byte}
    - id: obj
      type: System.Object
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    content.vb: Public Shared Sub Serialize(type As Type, writer As IBufferWriter(Of Byte), obj As Object, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing)
  overload: MessagePack.MessagePackSerializer.Serialize*
  seealso:
  - linkId: MessagePack.MessagePackSerializer.Serialize``1(System.Buffers.IBufferWriter{System.Byte},``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    commentId: M:MessagePack.MessagePackSerializer.Serialize``1(System.Buffers.IBufferWriter{System.Byte},``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Serialize(Type, IBufferWriter(Of Byte), Object, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(System.Type, System.Buffers.IBufferWriter(Of Byte), Object, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Type, IBufferWriter(Of Byte), Object, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Serialize(System.Type,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Serialize(System.Type,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Serialize(System.Type,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Type, object?, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Serialize(Type, object?, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Serialize(System.Type, object?, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  example: []
  syntax:
    content: public static byte[] Serialize(Type type, object? obj, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.Type
    - id: obj
      type: System.Object
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Serialize(type As Type, obj As Object, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Byte()
  overload: MessagePack.MessagePackSerializer.Serialize*
  seealso:
  - linkId: MessagePack.MessagePackSerializer.Serialize``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    commentId: M:MessagePack.MessagePackSerializer.Serialize``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Serialize(Type, Object, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(System.Type, Object, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Type, Object, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Serialize(System.Type,System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Serialize(System.Type,System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Serialize(System.Type,System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Type, Stream, object?, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Serialize(Type, Stream, object?, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Serialize(System.Type, System.IO.Stream, object?, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  example: []
  syntax:
    content: public static void Serialize(Type type, Stream stream, object? obj, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.Type
    - id: stream
      type: System.IO.Stream
    - id: obj
      type: System.Object
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    content.vb: Public Shared Sub Serialize(type As Type, stream As Stream, obj As Object, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing)
  overload: MessagePack.MessagePackSerializer.Serialize*
  seealso:
  - linkId: MessagePack.MessagePackSerializer.Serialize``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    commentId: M:MessagePack.MessagePackSerializer.Serialize``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Serialize(Type, Stream, Object, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(System.Type, System.IO.Stream, Object, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Type, Stream, Object, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.SerializeAsync(System.Type,System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.SerializeAsync(System.Type,System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: SerializeAsync(System.Type,System.IO.Stream,System.Object,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: SerializeAsync(Type, Stream, object?, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.SerializeAsync(Type, Stream, object?, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.SerializeAsync(System.Type, System.IO.Stream, object?, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  example: []
  syntax:
    content: public static Task SerializeAsync(Type type, Stream stream, object? obj, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.Type
    - id: stream
      type: System.IO.Stream
    - id: obj
      type: System.Object
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SerializeAsync(type As Type, stream As Stream, obj As Object, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: MessagePack.MessagePackSerializer.SerializeAsync*
  seealso:
  - linkId: MessagePack.MessagePackSerializer.SerializeAsync``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    commentId: M:MessagePack.MessagePackSerializer.SerializeAsync``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.SerializeAsync(Type, Stream, Object, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.SerializeAsync(System.Type, System.IO.Stream, Object, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: SerializeAsync(Type, Stream, Object, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Deserialize(System.Type,MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize(System.Type,MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  id: Deserialize(System.Type,MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Type, ref MessagePackReader, MessagePackSerializerOptions?)
  nameWithType: MessagePackSerializer.Deserialize(Type, ref MessagePackReader, MessagePackSerializerOptions?)
  fullName: MessagePack.MessagePackSerializer.Deserialize(System.Type, ref MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions?)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  example: []
  syntax:
    content: public static object? Deserialize(Type type, ref MessagePackReader reader, MessagePackSerializerOptions? options = null)
    parameters:
    - id: type
      type: System.Type
    - id: reader
      type: MessagePack.MessagePackReader
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    return:
      type: System.Object
    content.vb: Public Shared Function Deserialize(type As Type, reader As MessagePackReader, options As MessagePackSerializerOptions = Nothing) As Object
  overload: MessagePack.MessagePackSerializer.Deserialize*
  seealso:
  - linkId: MessagePack.MessagePackSerializer.Deserialize``1(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
    commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  nameWithType.vb: MessagePackSerializer.Deserialize(Type, MessagePackReader, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(System.Type, MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  name.vb: Deserialize(Type, MessagePackReader, MessagePackSerializerOptions)
- uid: MessagePack.MessagePackSerializer.Deserialize(System.Type,System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize(System.Type,System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Deserialize(System.Type,System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Type, Stream, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Deserialize(Type, Stream, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Deserialize(System.Type, System.IO.Stream, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  example: []
  syntax:
    content: public static object? Deserialize(Type type, Stream stream, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.Type
    - id: stream
      type: System.IO.Stream
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Object
    content.vb: Public Shared Function Deserialize(type As Type, stream As Stream, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Object
  overload: MessagePack.MessagePackSerializer.Deserialize*
  seealso:
  - linkId: MessagePack.MessagePackSerializer.Deserialize``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Deserialize(Type, Stream, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(System.Type, System.IO.Stream, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(Type, Stream, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.DeserializeAsync(System.Type,System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.DeserializeAsync(System.Type,System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: DeserializeAsync(System.Type,System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: DeserializeAsync(Type, Stream, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.DeserializeAsync(Type, Stream, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.DeserializeAsync(System.Type, System.IO.Stream, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  example: []
  syntax:
    content: public static ValueTask<object?> DeserializeAsync(Type type, Stream stream, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.Type
    - id: stream
      type: System.IO.Stream
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.ValueTask{System.Object}
    content.vb: Public Shared Function DeserializeAsync(type As Type, stream As Stream, options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)
  overload: MessagePack.MessagePackSerializer.DeserializeAsync*
  seealso:
  - linkId: MessagePack.MessagePackSerializer.DeserializeAsync``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    commentId: M:MessagePack.MessagePackSerializer.DeserializeAsync``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.DeserializeAsync(Type, Stream, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.DeserializeAsync(System.Type, System.IO.Stream, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: DeserializeAsync(Type, Stream, MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Deserialize(System.Type,System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize(System.Type,System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Deserialize(System.Type,System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Type, ReadOnlyMemory<byte>, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Deserialize(Type, ReadOnlyMemory<byte>, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Deserialize(System.Type, System.ReadOnlyMemory<byte>, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  example: []
  syntax:
    content: public static object? Deserialize(Type type, ReadOnlyMemory<byte> bytes, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.Type
    - id: bytes
      type: System.ReadOnlyMemory{System.Byte}
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Object
    content.vb: Public Shared Function Deserialize(type As Type, bytes As ReadOnlyMemory(Of Byte), options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Object
  overload: MessagePack.MessagePackSerializer.Deserialize*
  seealso:
  - linkId: MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Deserialize(Type, ReadOnlyMemory(Of Byte), MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(System.Type, System.ReadOnlyMemory(Of Byte), MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(Type, ReadOnlyMemory(Of Byte), MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.Deserialize(System.Type,System.Buffers.ReadOnlySequence{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize(System.Type,System.Buffers.ReadOnlySequence{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  id: Deserialize(System.Type,System.Buffers.ReadOnlySequence{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Type, ReadOnlySequence<byte>, MessagePackSerializerOptions?, CancellationToken)
  nameWithType: MessagePackSerializer.Deserialize(Type, ReadOnlySequence<byte>, MessagePackSerializerOptions?, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Deserialize(System.Type, System.Buffers.ReadOnlySequence<byte>, MessagePack.MessagePackSerializerOptions?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - MessagePack
  namespace: MessagePack
  example: []
  syntax:
    content: public static object? Deserialize(Type type, ReadOnlySequence<byte> bytes, MessagePackSerializerOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: System.Type
    - id: bytes
      type: System.Buffers.ReadOnlySequence{System.Byte}
    - id: options
      type: MessagePack.MessagePackSerializerOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Object
    content.vb: Public Shared Function Deserialize(type As Type, bytes As ReadOnlySequence(Of Byte), options As MessagePackSerializerOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Object
  overload: MessagePack.MessagePackSerializer.Deserialize*
  seealso:
  - linkId: MessagePack.MessagePackSerializer.Deserialize``1(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Deserialize(Type, ReadOnlySequence(Of Byte), MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(System.Type, System.Buffers.ReadOnlySequence(Of Byte), MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(Type, ReadOnlySequence(Of Byte), MessagePackSerializerOptions, CancellationToken)
- uid: MessagePack.MessagePackSerializer.DefaultOptions
  commentId: P:MessagePack.MessagePackSerializer.DefaultOptions
  id: DefaultOptions
  parent: MessagePack.MessagePackSerializer
  langs:
  - csharp
  - vb
  name: DefaultOptions
  nameWithType: MessagePackSerializer.DefaultOptions
  fullName: MessagePack.MessagePackSerializer.DefaultOptions
  type: Property
  assemblies:
  - MessagePack
  namespace: MessagePack
  summary: Gets or sets the default set of options to use when not explicitly specified for a method call.
  remarks: >-
    This is an AppDomain or process-wide setting.

    If you're writing a library, you should NOT set or rely on this property but should instead pass

    in <xref href="MessagePack.MessagePackSerializerOptions.Standard" data-throw-if-not-resolved="false"></xref> (or the required options) explicitly to every method call

    to guarantee appropriate behavior in any application.

    If you are an app author, realize that setting this property impacts the entire application so it should only be

    set once, and before any use of <xref href="MessagePack.MessagePackSerializer" data-throw-if-not-resolved="false"></xref> occurs.
  example: []
  syntax:
    content: public static MessagePackSerializerOptions DefaultOptions { get; set; }
    parameters: []
    return:
      type: MessagePack.MessagePackSerializerOptions
      description: The default value is <xref href="MessagePack.MessagePackSerializerOptions.Standard" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Property DefaultOptions As MessagePackSerializerOptions
  overload: MessagePack.MessagePackSerializer.DefaultOptions*
references:
- uid: MessagePack
  commentId: N:MessagePack
  isExternal: true
  href: MessagePack.html
  name: MessagePack
  nameWithType: MessagePack
  fullName: MessagePack
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MessagePack.MessagePackSerializationException
  commentId: T:MessagePack.MessagePackSerializationException
  parent: MessagePack
  isExternal: true
  href: MessagePack.MessagePackSerializationException.html
  name: MessagePackSerializationException
  nameWithType: MessagePackSerializationException
  fullName: MessagePack.MessagePackSerializationException
- uid: MessagePack.MessagePackSerializer.Serialize*
  commentId: Overload:MessagePack.MessagePackSerializer.Serialize
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1_System_Buffers_IBufferWriter_System_Byte____0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: Serialize
  nameWithType: MessagePackSerializer.Serialize
  fullName: MessagePack.MessagePackSerializer.Serialize
- uid: System.Buffers.IBufferWriter{System.Byte}
  commentId: T:System.Buffers.IBufferWriter{System.Byte}
  parent: System.Buffers
  definition: System.Buffers.IBufferWriter`1
  href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  name: IBufferWriter<byte>
  nameWithType: IBufferWriter<byte>
  fullName: System.Buffers.IBufferWriter<byte>
  nameWithType.vb: IBufferWriter(Of Byte)
  fullName.vb: System.Buffers.IBufferWriter(Of Byte)
  name.vb: IBufferWriter(Of Byte)
  spec.csharp:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: MessagePack.MessagePackSerializerOptions
  commentId: T:MessagePack.MessagePackSerializerOptions
  parent: MessagePack
  isExternal: true
  href: MessagePack.MessagePackSerializerOptions.html
  name: MessagePackSerializerOptions
  nameWithType: MessagePackSerializerOptions
  fullName: MessagePack.MessagePackSerializerOptions
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Buffers.IBufferWriter`1
  commentId: T:System.Buffers.IBufferWriter`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  name: IBufferWriter<T>
  nameWithType: IBufferWriter<T>
  fullName: System.Buffers.IBufferWriter<T>
  nameWithType.vb: IBufferWriter(Of T)
  fullName.vb: System.Buffers.IBufferWriter(Of T)
  name.vb: IBufferWriter(Of T)
  spec.csharp:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: MessagePack.MessagePackWriter
  commentId: T:MessagePack.MessagePackWriter
  parent: MessagePack
  isExternal: true
  href: MessagePack.MessagePackWriter.html
  name: MessagePackWriter
  nameWithType: MessagePackWriter
  fullName: MessagePack.MessagePackWriter
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: MessagePack.MessagePackSerializer.SerializeAsync*
  commentId: Overload:MessagePack.MessagePackSerializer.SerializeAsync
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_SerializeAsync__1_System_IO_Stream___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: SerializeAsync
  nameWithType: MessagePackSerializer.SerializeAsync
  fullName: MessagePack.MessagePackSerializer.SerializeAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MessagePack.MessagePackSerializer.Deserialize*
  commentId: Overload:MessagePack.MessagePackSerializer.Deserialize
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Deserialize__1_System_Buffers_ReadOnlySequence_System_Byte___MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: Deserialize
  nameWithType: MessagePackSerializer.Deserialize
  fullName: MessagePack.MessagePackSerializer.Deserialize
- uid: System.Buffers.ReadOnlySequence{System.Byte}
  commentId: T:System.Buffers.ReadOnlySequence{System.Byte}
  parent: System.Buffers
  definition: System.Buffers.ReadOnlySequence`1
  href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  name: ReadOnlySequence<byte>
  nameWithType: ReadOnlySequence<byte>
  fullName: System.Buffers.ReadOnlySequence<byte>
  nameWithType.vb: ReadOnlySequence(Of Byte)
  fullName.vb: System.Buffers.ReadOnlySequence(Of Byte)
  name.vb: ReadOnlySequence(Of Byte)
  spec.csharp:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Buffers.ReadOnlySequence`1
  commentId: T:System.Buffers.ReadOnlySequence`1
  parent: System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  name: ReadOnlySequence<T>
  nameWithType: ReadOnlySequence<T>
  fullName: System.Buffers.ReadOnlySequence<T>
  nameWithType.vb: ReadOnlySequence(Of T)
  fullName.vb: System.Buffers.ReadOnlySequence(Of T)
  name.vb: ReadOnlySequence(Of T)
  spec.csharp:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MessagePack.MessagePackReader
  commentId: T:MessagePack.MessagePackReader
  parent: MessagePack
  isExternal: true
  href: MessagePack.MessagePackReader.html
  name: MessagePackReader
  nameWithType: MessagePackReader
  fullName: MessagePack.MessagePackReader
- uid: System.ReadOnlyMemory{System.Byte}
  commentId: T:System.ReadOnlyMemory{System.Byte}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<byte>
  nameWithType: ReadOnlyMemory<byte>
  fullName: System.ReadOnlyMemory<byte>
  nameWithType.vb: ReadOnlyMemory(Of Byte)
  fullName.vb: System.ReadOnlyMemory(Of Byte)
  name.vb: ReadOnlyMemory(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.IO.Stream.CanSeek
  commentId: P:System.IO.Stream.CanSeek
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.canseek
  name: CanSeek
  nameWithType: Stream.CanSeek
  fullName: System.IO.Stream.CanSeek
- uid: MessagePack.MessagePackStreamReader
  commentId: T:MessagePack.MessagePackStreamReader
  isExternal: true
  href: MessagePack.MessagePackStreamReader.html
  name: MessagePackStreamReader
  nameWithType: MessagePackStreamReader
  fullName: MessagePack.MessagePackStreamReader
- uid: MessagePack.MessagePackSerializer.DeserializeAsync*
  commentId: Overload:MessagePack.MessagePackSerializer.DeserializeAsync
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_DeserializeAsync__1_System_IO_Stream_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: DeserializeAsync
  nameWithType: MessagePackSerializer.DeserializeAsync
  fullName: MessagePack.MessagePackSerializer.DeserializeAsync
- uid: System.Threading.Tasks.ValueTask{{T}}
  commentId: T:System.Threading.Tasks.ValueTask{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<T>
  nameWithType: ValueTask<T>
  fullName: System.Threading.Tasks.ValueTask<T>
  nameWithType.vb: ValueTask(Of T)
  fullName.vb: System.Threading.Tasks.ValueTask(Of T)
  name.vb: ValueTask(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: MessagePack.MessagePackSerializer.SerializeToJson*
  commentId: Overload:MessagePack.MessagePackSerializer.SerializeToJson
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_SerializeToJson__1_System_IO_TextWriter___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: SerializeToJson
  nameWithType: MessagePackSerializer.SerializeToJson
  fullName: MessagePack.MessagePackSerializer.SerializeToJson
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textwriter
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MessagePack.MessagePackSerializer.ConvertToJson*
  commentId: Overload:MessagePack.MessagePackSerializer.ConvertToJson
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_ConvertToJson_System_ReadOnlyMemory_System_Byte__MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: ConvertToJson
  nameWithType: MessagePackSerializer.ConvertToJson
  fullName: MessagePack.MessagePackSerializer.ConvertToJson
- uid: MessagePack.MessagePackSerializer.ConvertFromJson*
  commentId: Overload:MessagePack.MessagePackSerializer.ConvertFromJson
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_ConvertFromJson_System_String_MessagePack_MessagePackWriter__MessagePack_MessagePackSerializerOptions_
  name: ConvertFromJson
  nameWithType: MessagePackSerializer.ConvertFromJson
  fullName: MessagePack.MessagePackSerializer.ConvertFromJson
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: MessagePack.MessagePackSerializer.Serialize``1(MessagePack.MessagePackWriter@,``0,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.Serialize``1(MessagePack.MessagePackWriter@,``0,MessagePack.MessagePackSerializerOptions)
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1_MessagePack_MessagePackWriter____0_MessagePack_MessagePackSerializerOptions_
  name: Serialize<T>(ref MessagePackWriter, T, MessagePackSerializerOptions)
  nameWithType: MessagePackSerializer.Serialize<T>(ref MessagePackWriter, T, MessagePackSerializerOptions)
  fullName: MessagePack.MessagePackSerializer.Serialize<T>(ref MessagePack.MessagePackWriter, T, MessagePack.MessagePackSerializerOptions)
  nameWithType.vb: MessagePackSerializer.Serialize(Of T)(MessagePackWriter, T, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(Of T)(MessagePack.MessagePackWriter, T, MessagePack.MessagePackSerializerOptions)
  name.vb: Serialize(Of T)(MessagePackWriter, T, MessagePackSerializerOptions)
  spec.csharp:
  - uid: MessagePack.MessagePackSerializer.Serialize``1(MessagePack.MessagePackWriter@,``0,MessagePack.MessagePackSerializerOptions)
    name: Serialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1_MessagePack_MessagePackWriter____0_MessagePack_MessagePackSerializerOptions_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: MessagePack.MessagePackWriter
    name: MessagePackWriter
    isExternal: true
    href: MessagePack.MessagePackWriter.html
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: )
  spec.vb:
  - uid: MessagePack.MessagePackSerializer.Serialize``1(MessagePack.MessagePackWriter@,``0,MessagePack.MessagePackSerializerOptions)
    name: Serialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1_MessagePack_MessagePackWriter____0_MessagePack_MessagePackSerializerOptions_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: MessagePack.MessagePackWriter
    name: MessagePackWriter
    isExternal: true
    href: MessagePack.MessagePackWriter.html
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: MessagePack.MessagePackSerializer.Serialize``1(System.Buffers.IBufferWriter{System.Byte},``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Serialize``1(System.Buffers.IBufferWriter{System.Byte},``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1_System_Buffers_IBufferWriter_System_Byte____0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: Serialize<T>(IBufferWriter<byte>, T, MessagePackSerializerOptions, CancellationToken)
  nameWithType: MessagePackSerializer.Serialize<T>(IBufferWriter<byte>, T, MessagePackSerializerOptions, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Serialize<T>(System.Buffers.IBufferWriter<byte>, T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Serialize(Of T)(IBufferWriter(Of Byte), T, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(Of T)(System.Buffers.IBufferWriter(Of Byte), T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Of T)(IBufferWriter(Of Byte), T, MessagePackSerializerOptions, CancellationToken)
  spec.csharp:
  - uid: MessagePack.MessagePackSerializer.Serialize``1(System.Buffers.IBufferWriter{System.Byte},``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: Serialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1_System_Buffers_IBufferWriter_System_Byte____0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MessagePack.MessagePackSerializer.Serialize``1(System.Buffers.IBufferWriter{System.Byte},``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: Serialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1_System_Buffers_IBufferWriter_System_Byte____0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MessagePack.MessagePackSerializer.Serialize``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Serialize``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: Serialize<T>(T, MessagePackSerializerOptions, CancellationToken)
  nameWithType: MessagePackSerializer.Serialize<T>(T, MessagePackSerializerOptions, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Serialize<T>(T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Serialize(Of T)(T, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(Of T)(T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Of T)(T, MessagePackSerializerOptions, CancellationToken)
  spec.csharp:
  - uid: MessagePack.MessagePackSerializer.Serialize``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: Serialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MessagePack.MessagePackSerializer.Serialize``1(``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: Serialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MessagePack.MessagePackSerializer.Serialize``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Serialize``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1_System_IO_Stream___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: Serialize<T>(Stream, T, MessagePackSerializerOptions, CancellationToken)
  nameWithType: MessagePackSerializer.Serialize<T>(Stream, T, MessagePackSerializerOptions, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Serialize<T>(System.IO.Stream, T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Serialize(Of T)(Stream, T, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Serialize(Of T)(System.IO.Stream, T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Serialize(Of T)(Stream, T, MessagePackSerializerOptions, CancellationToken)
  spec.csharp:
  - uid: MessagePack.MessagePackSerializer.Serialize``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: Serialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1_System_IO_Stream___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MessagePack.MessagePackSerializer.Serialize``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: Serialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Serialize__1_System_IO_Stream___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MessagePack.MessagePackSerializer.SerializeAsync``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.SerializeAsync``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_SerializeAsync__1_System_IO_Stream___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: SerializeAsync<T>(Stream, T, MessagePackSerializerOptions, CancellationToken)
  nameWithType: MessagePackSerializer.SerializeAsync<T>(Stream, T, MessagePackSerializerOptions, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.SerializeAsync<T>(System.IO.Stream, T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.SerializeAsync(Of T)(Stream, T, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.SerializeAsync(Of T)(System.IO.Stream, T, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: SerializeAsync(Of T)(Stream, T, MessagePackSerializerOptions, CancellationToken)
  spec.csharp:
  - uid: MessagePack.MessagePackSerializer.SerializeAsync``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: SerializeAsync
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_SerializeAsync__1_System_IO_Stream___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MessagePack.MessagePackSerializer.SerializeAsync``1(System.IO.Stream,``0,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: SerializeAsync
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_SerializeAsync__1_System_IO_Stream___0_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MessagePack.MessagePackSerializer.Deserialize``1(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Deserialize__1_MessagePack_MessagePackReader__MessagePack_MessagePackSerializerOptions_
  name: Deserialize<T>(ref MessagePackReader, MessagePackSerializerOptions)
  nameWithType: MessagePackSerializer.Deserialize<T>(ref MessagePackReader, MessagePackSerializerOptions)
  fullName: MessagePack.MessagePackSerializer.Deserialize<T>(ref MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  nameWithType.vb: MessagePackSerializer.Deserialize(Of T)(MessagePackReader, MessagePackSerializerOptions)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(Of T)(MessagePack.MessagePackReader, MessagePack.MessagePackSerializerOptions)
  name.vb: Deserialize(Of T)(MessagePackReader, MessagePackSerializerOptions)
  spec.csharp:
  - uid: MessagePack.MessagePackSerializer.Deserialize``1(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
    name: Deserialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Deserialize__1_MessagePack_MessagePackReader__MessagePack_MessagePackSerializerOptions_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: MessagePack.MessagePackReader
    name: MessagePackReader
    isExternal: true
    href: MessagePack.MessagePackReader.html
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: )
  spec.vb:
  - uid: MessagePack.MessagePackSerializer.Deserialize``1(MessagePack.MessagePackReader@,MessagePack.MessagePackSerializerOptions)
    name: Deserialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Deserialize__1_MessagePack_MessagePackReader__MessagePack_MessagePackSerializerOptions_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: MessagePack.MessagePackReader
    name: MessagePackReader
    isExternal: true
    href: MessagePack.MessagePackReader.html
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: )
- uid: MessagePack.MessagePackSerializer.Deserialize``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Deserialize__1_System_IO_Stream_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: Deserialize<T>(Stream, MessagePackSerializerOptions, CancellationToken)
  nameWithType: MessagePackSerializer.Deserialize<T>(Stream, MessagePackSerializerOptions, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Deserialize<T>(System.IO.Stream, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Deserialize(Of T)(Stream, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(Of T)(System.IO.Stream, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(Of T)(Stream, MessagePackSerializerOptions, CancellationToken)
  spec.csharp:
  - uid: MessagePack.MessagePackSerializer.Deserialize``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: Deserialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Deserialize__1_System_IO_Stream_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MessagePack.MessagePackSerializer.Deserialize``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: Deserialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Deserialize__1_System_IO_Stream_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MessagePack.MessagePackSerializer.DeserializeAsync``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.DeserializeAsync``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_DeserializeAsync__1_System_IO_Stream_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: DeserializeAsync<T>(Stream, MessagePackSerializerOptions, CancellationToken)
  nameWithType: MessagePackSerializer.DeserializeAsync<T>(Stream, MessagePackSerializerOptions, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.DeserializeAsync<T>(System.IO.Stream, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.DeserializeAsync(Of T)(Stream, MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.DeserializeAsync(Of T)(System.IO.Stream, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: DeserializeAsync(Of T)(Stream, MessagePackSerializerOptions, CancellationToken)
  spec.csharp:
  - uid: MessagePack.MessagePackSerializer.DeserializeAsync``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: DeserializeAsync
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_DeserializeAsync__1_System_IO_Stream_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MessagePack.MessagePackSerializer.DeserializeAsync``1(System.IO.Stream,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: DeserializeAsync
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_DeserializeAsync__1_System_IO_Stream_MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.ValueTask{System.Object}
  commentId: T:System.Threading.Tasks.ValueTask{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<object>
  nameWithType: ValueTask<object>
  fullName: System.Threading.Tasks.ValueTask<object>
  nameWithType.vb: ValueTask(Of Object)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Object)
  name.vb: ValueTask(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.ReadOnlyMemory{System.Byte},MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  isExternal: true
- uid: MessagePack.MessagePackSerializer.Deserialize``1(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  commentId: M:MessagePack.MessagePackSerializer.Deserialize``1(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Deserialize__1_System_Buffers_ReadOnlySequence_System_Byte___MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  name: Deserialize<T>(in ReadOnlySequence<byte>, MessagePackSerializerOptions, CancellationToken)
  nameWithType: MessagePackSerializer.Deserialize<T>(in ReadOnlySequence<byte>, MessagePackSerializerOptions, CancellationToken)
  fullName: MessagePack.MessagePackSerializer.Deserialize<T>(in System.Buffers.ReadOnlySequence<byte>, MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  nameWithType.vb: MessagePackSerializer.Deserialize(Of T)(ReadOnlySequence(Of Byte), MessagePackSerializerOptions, CancellationToken)
  fullName.vb: MessagePack.MessagePackSerializer.Deserialize(Of T)(System.Buffers.ReadOnlySequence(Of Byte), MessagePack.MessagePackSerializerOptions, System.Threading.CancellationToken)
  name.vb: Deserialize(Of T)(ReadOnlySequence(Of Byte), MessagePackSerializerOptions, CancellationToken)
  spec.csharp:
  - uid: MessagePack.MessagePackSerializer.Deserialize``1(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: Deserialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Deserialize__1_System_Buffers_ReadOnlySequence_System_Byte___MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: in
  - name: " "
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MessagePack.MessagePackSerializer.Deserialize``1(System.Buffers.ReadOnlySequence{System.Byte}@,MessagePack.MessagePackSerializerOptions,System.Threading.CancellationToken)
    name: Deserialize
    isExternal: true
    href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_Deserialize__1_System_Buffers_ReadOnlySequence_System_Byte___MessagePack_MessagePackSerializerOptions_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Buffers.ReadOnlySequence`1
    name: ReadOnlySequence
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.readonlysequence-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: ','
  - name: " "
  - uid: MessagePack.MessagePackSerializerOptions
    name: MessagePackSerializerOptions
    isExternal: true
    href: MessagePack.MessagePackSerializerOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MessagePack.MessagePackSerializerOptions.Standard
  commentId: P:MessagePack.MessagePackSerializerOptions.Standard
  isExternal: true
  href: MessagePack.MessagePackSerializerOptions.html#MessagePack_MessagePackSerializerOptions_Standard
  name: Standard
  nameWithType: MessagePackSerializerOptions.Standard
  fullName: MessagePack.MessagePackSerializerOptions.Standard
- uid: MessagePack.MessagePackSerializer
  commentId: T:MessagePack.MessagePackSerializer
  isExternal: true
  href: MessagePack.MessagePackSerializer.html
  name: MessagePackSerializer
  nameWithType: MessagePackSerializer
  fullName: MessagePack.MessagePackSerializer
- uid: MessagePack.MessagePackSerializer.DefaultOptions*
  commentId: Overload:MessagePack.MessagePackSerializer.DefaultOptions
  isExternal: true
  href: MessagePack.MessagePackSerializer.html#MessagePack_MessagePackSerializer_DefaultOptions
  name: DefaultOptions
  nameWithType: MessagePackSerializer.DefaultOptions
  fullName: MessagePack.MessagePackSerializer.DefaultOptions
