### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableDictionary
  commentId: T:System.Collections.Immutable.ImmutableDictionary
  id: ImmutableDictionary
  parent: System.Collections.Immutable
  children:
  - System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  - System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2
  - System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableDictionary.Create``2
  - System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)
  - System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}.Builder)
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  langs:
  - csharp
  - vb
  name: ImmutableDictionary
  nameWithType: ImmutableDictionary
  fullName: System.Collections.Immutable.ImmutableDictionary
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Provides a set of initialization methods for instances of the <xref href="System.Collections.Immutable.ImmutableDictionary%602" data-throw-if-not-resolved="false"></xref> class.  

     NuGet package: System.Collections.Immutable (about immutable collections and how to install)
  example: []
  syntax:
    content: public static class ImmutableDictionary
    content.vb: Public Module ImmutableDictionary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Immutable.ImmutableDictionary.Create``2
  commentId: M:System.Collections.Immutable.ImmutableDictionary.Create``2
  id: Create``2
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: Create<TKey, TValue>()
  nameWithType: ImmutableDictionary.Create<TKey, TValue>()
  fullName: System.Collections.Immutable.ImmutableDictionary.Create<TKey, TValue>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable dictionary.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> Create<TKey, TValue>() where TKey : notnull'
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: An empty immutable dictionary.
    content.vb: Public Shared Function Create(Of TKey, TValue)() As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.Create*
  nameWithType.vb: ImmutableDictionary.Create(Of TKey, TValue)()
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.Create(Of TKey, TValue)()
  name.vb: Create(Of TKey, TValue)()
- uid: System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})
  id: Create``2(System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: Create<TKey, TValue>(IEqualityComparer<TKey>?)
  nameWithType: ImmutableDictionary.Create<TKey, TValue>(IEqualityComparer<TKey>?)
  fullName: System.Collections.Immutable.ImmutableDictionary.Create<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable dictionary that uses the specified key comparer.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> Create<TKey, TValue>(IEqualityComparer<TKey>? keyComparer) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The implementation to use to determine the equality of keys in the dictionary.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: An empty immutable dictionary.
    content.vb: Public Shared Function Create(Of TKey, TValue)(keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.Create*
  nameWithType.vb: ImmutableDictionary.Create(Of TKey, TValue)(IEqualityComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.Create(Of TKey, TValue)(System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Create(Of TKey, TValue)(IEqualityComparer(Of TKey))
- uid: System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: Create<TKey, TValue>(IEqualityComparer<TKey>?, IEqualityComparer<TValue>?)
  nameWithType: ImmutableDictionary.Create<TKey, TValue>(IEqualityComparer<TKey>?, IEqualityComparer<TValue>?)
  fullName: System.Collections.Immutable.ImmutableDictionary.Create<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>?, System.Collections.Generic.IEqualityComparer<TValue>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable dictionary that uses the specified key and value comparers.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> Create<TKey, TValue>(IEqualityComparer<TKey>? keyComparer, IEqualityComparer<TValue>? valueComparer) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The implementation to use to determine the equality of keys in the dictionary.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The implementation to use to determine the equality of values in the dictionary.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: An empty immutable dictionary.
    content.vb: Public Shared Function Create(Of TKey, TValue)(keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.Create*
  nameWithType.vb: ImmutableDictionary.Create(Of TKey, TValue)(IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.Create(Of TKey, TValue)(System.Collections.Generic.IEqualityComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: Create(Of TKey, TValue)(IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: CreateRange<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: ImmutableDictionary.CreateRange<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable dictionary that contains the specified items.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> CreateRange<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> items) where TKey : notnull'
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The items used to populate the dictionary before it's immutable.
    typeParameters:
    - id: TKey
      description: The type of keys in the dictionary.
    - id: TValue
      description: The type of values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: A new immutable dictionary that contains the specified items.
    content.vb: Public Shared Function CreateRange(Of TKey, TValue)(items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.CreateRange*
  nameWithType.vb: ImmutableDictionary.CreateRange(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.CreateRange(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: CreateRange(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: CreateRange<TKey, TValue>(IEqualityComparer<TKey>?, IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: ImmutableDictionary.CreateRange<TKey, TValue>(IEqualityComparer<TKey>?, IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>?, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> CreateRange<TKey, TValue>(IEqualityComparer<TKey>? keyComparer, IEnumerable<KeyValuePair<TKey, TValue>> items) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The comparer implementation to use to compare keys for equality.
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The items to add to the dictionary before it's immutable.
    typeParameters:
    - id: TKey
      description: The type of keys in the dictionary.
    - id: TValue
      description: The type of values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: A new immutable dictionary that contains the specified items and uses the specified comparer.
    content.vb: Public Shared Function CreateRange(Of TKey, TValue)(keyComparer As IEqualityComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.CreateRange*
  nameWithType.vb: ImmutableDictionary.CreateRange(Of TKey, TValue)(IEqualityComparer(Of TKey), IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.CreateRange(Of TKey, TValue)(System.Collections.Generic.IEqualityComparer(Of TKey), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: CreateRange(Of TKey, TValue)(IEqualityComparer(Of TKey), IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: CreateRange<TKey, TValue>(IEqualityComparer<TKey>?, IEqualityComparer<TValue>?, IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: ImmutableDictionary.CreateRange<TKey, TValue>(IEqualityComparer<TKey>?, IEqualityComparer<TValue>?, IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>?, System.Collections.Generic.IEqualityComparer<TValue>?, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> CreateRange<TKey, TValue>(IEqualityComparer<TKey>? keyComparer, IEqualityComparer<TValue>? valueComparer, IEnumerable<KeyValuePair<TKey, TValue>> items) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The comparer implementation to use to compare keys for equality.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The comparer implementation to use to compare values for equality.
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The items to add to the dictionary before it's immutable.
    typeParameters:
    - id: TKey
      description: The type of keys in the dictionary.
    - id: TValue
      description: The type of values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: A new immutable dictionary that contains the specified items and uses the specified comparer.
    content.vb: Public Shared Function CreateRange(Of TKey, TValue)(keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.CreateRange*
  nameWithType.vb: ImmutableDictionary.CreateRange(Of TKey, TValue)(IEqualityComparer(Of TKey), IEqualityComparer(Of TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.CreateRange(Of TKey, TValue)(System.Collections.Generic.IEqualityComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: CreateRange(Of TKey, TValue)(IEqualityComparer(Of TKey), IEqualityComparer(Of TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2
  commentId: M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2
  id: CreateBuilder``2
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: CreateBuilder<TKey, TValue>()
  nameWithType: ImmutableDictionary.CreateBuilder<TKey, TValue>()
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateBuilder<TKey, TValue>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable dictionary builder.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue>.Builder CreateBuilder<TKey, TValue>() where TKey : notnull'
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}.Builder
      description: The new builder.
    content.vb: Public Shared Function CreateBuilder(Of TKey, TValue)() As ImmutableDictionary(Of TKey, TValue).Builder
  overload: System.Collections.Immutable.ImmutableDictionary.CreateBuilder*
  nameWithType.vb: ImmutableDictionary.CreateBuilder(Of TKey, TValue)()
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.CreateBuilder(Of TKey, TValue)()
  name.vb: CreateBuilder(Of TKey, TValue)()
- uid: System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})
  id: CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: CreateBuilder<TKey, TValue>(IEqualityComparer<TKey>?)
  nameWithType: ImmutableDictionary.CreateBuilder<TKey, TValue>(IEqualityComparer<TKey>?)
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateBuilder<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable dictionary builder.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue>.Builder CreateBuilder<TKey, TValue>(IEqualityComparer<TKey>? keyComparer) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The key comparer.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}.Builder
      description: The new builder.
    content.vb: Public Shared Function CreateBuilder(Of TKey, TValue)(keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue).Builder
  overload: System.Collections.Immutable.ImmutableDictionary.CreateBuilder*
  nameWithType.vb: ImmutableDictionary.CreateBuilder(Of TKey, TValue)(IEqualityComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.CreateBuilder(Of TKey, TValue)(System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: CreateBuilder(Of TKey, TValue)(IEqualityComparer(Of TKey))
- uid: System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: CreateBuilder<TKey, TValue>(IEqualityComparer<TKey>?, IEqualityComparer<TValue>?)
  nameWithType: ImmutableDictionary.CreateBuilder<TKey, TValue>(IEqualityComparer<TKey>?, IEqualityComparer<TValue>?)
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateBuilder<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>?, System.Collections.Generic.IEqualityComparer<TValue>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable dictionary builder.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue>.Builder CreateBuilder<TKey, TValue>(IEqualityComparer<TKey>? keyComparer, IEqualityComparer<TValue>? valueComparer) where TKey : notnull'
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The key comparer.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}.Builder
      description: The new builder.
    content.vb: Public Shared Function CreateBuilder(Of TKey, TValue)(keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue).Builder
  overload: System.Collections.Immutable.ImmutableDictionary.CreateBuilder*
  nameWithType.vb: ImmutableDictionary.CreateBuilder(Of TKey, TValue)(IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.CreateBuilder(Of TKey, TValue)(System.Collections.Generic.IEqualityComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: CreateBuilder(Of TKey, TValue)(IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  id: ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IEqualityComparer<TKey>?, IEqualityComparer<TValue>?)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IEqualityComparer<TKey>?, IEqualityComparer<TValue>?)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IEqualityComparer<TKey>?, System.Collections.Generic.IEqualityComparer<TValue>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TSource, TKey, TValue>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector, IEqualityComparer<TKey>? keyComparer, IEqualityComparer<TValue>? valueComparer) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate to generate the dictionary.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function that will produce the key for the dictionary from each sequence element.
    - id: elementSelector
      type: System.Func{{TSource},{TValue}}
      description: The function that will produce the value for the dictionary from each sequence element.
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The key comparer to use for the dictionary.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer to use for the dictionary.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    - id: TKey
      description: The type of the keys in the resulting dictionary.
    - id: TValue
      description: The type of the values in the resulting dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: An immutable dictionary that contains the items in the specified sequence.
    content.vb: Public Shared Function ToImmutableDictionary(Of TSource, TKey, TValue)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary*
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue), System.Collections.Generic.IEqualityComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}.Builder)
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}.Builder)
  id: ToImmutableDictionary``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}.Builder)
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableDictionary<TKey, TValue>(Builder)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(ImmutableDictionary<TKey, TValue>.Builder)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(System.Collections.Immutable.ImmutableDictionary<TKey, TValue>.Builder)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an immutable dictionary from the current contents of the builder's dictionary.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TKey, TValue>(this ImmutableDictionary<TKey, TValue>.Builder builder) where TKey : notnull'
    parameters:
    - id: builder
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}.Builder
      description: The builder to create the immutable dictionary from.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: An immutable dictionary that contains the current contents in the builder's dictionary.
    content.vb: Public Shared Function ToImmutableDictionary(Of TKey, TValue)(builder As ImmutableDictionary(Of TKey, TValue).Builder) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary*
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TKey, TValue)(ImmutableDictionary(Of TKey, TValue).Builder)
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TKey, TValue)(System.Collections.Immutable.ImmutableDictionary(Of TKey, TValue).Builder)
  name.vb: ToImmutableDictionary(Of TKey, TValue)(Builder)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  id: ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IEqualityComparer<TKey>?)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IEqualityComparer<TKey>?)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IEqualityComparer<TKey>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TSource, TKey, TValue>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector, IEqualityComparer<TKey>? keyComparer) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate to generate the dictionary.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function that will produce the key for the dictionary from each sequence element.
    - id: elementSelector
      type: System.Func{{TSource},{TValue}}
      description: The function that will produce the value for the dictionary from each sequence element.
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The key comparer to use for the dictionary.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    - id: TKey
      description: The type of the keys in the resulting dictionary.
    - id: TValue
      description: The type of the values in the resulting dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: An immutable dictionary that contains the items in the specified sequence.
    content.vb: Public Shared Function ToImmutableDictionary(Of TSource, TKey, TValue)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary*
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IEqualityComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IEqualityComparer(Of TKey))
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TSource> ToImmutableDictionary<TSource, TKey>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The source collection used to generate the immutable dictionary.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function used to transform keys for the immutable dictionary.
    typeParameters:
    - id: TSource
      description: The type of element in the source collection.
    - id: TKey
      description: The type of key in the resulting immutable dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TSource}}
      description: The immutable dictionary that contains elements from <code class="paramref">source</code>, with keys transformed by applying <code class="paramref">keySelector</code>.
    content.vb: Public Shared Function ToImmutableDictionary(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As ImmutableDictionary(Of TKey, TSource)
  overload: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary*
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToImmutableDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>?)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>?)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Constructs an immutable dictionary based on some transformation of a sequence.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TSource> ToImmutableDictionary<TSource, TKey>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey>? keyComparer) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The source collection used to generate the immutable dictionary.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function used to transform keys for the immutable dictionary.
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The key comparer to use for the dictionary.
    typeParameters:
    - id: TSource
      description: The type of element in the source collection.
    - id: TKey
      description: The type of key in the resulting immutable dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TSource}}
      description: The immutable dictionary that contains elements from <code class="paramref">source</code>, with keys transformed by applying <code class="paramref">keySelector</code>.
    content.vb: Public Shared Function ToImmutableDictionary(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TSource)
  overload: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary*
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToImmutableDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  id: ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TSource, TKey, TValue>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate to generate the dictionary.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function that will produce the key for the dictionary from each sequence element.
    - id: elementSelector
      type: System.Func{{TSource},{TValue}}
      description: The function that will produce the value for the dictionary from each sequence element.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    - id: TKey
      description: The type of the keys in the resulting dictionary.
    - id: TValue
      description: The type of the values in the resulting dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: An immutable dictionary that contains the items in the specified sequence.
    content.vb: Public Shared Function ToImmutableDictionary(Of TSource, TKey, TValue)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary*
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue))
  name.vb: ToImmutableDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue))
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<TKey>?, IEqualityComparer<TValue>?)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<TKey>?, IEqualityComparer<TValue>?)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<TKey>?, System.Collections.Generic.IEqualityComparer<TValue>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TKey, TValue>(this IEnumerable<KeyValuePair<TKey, TValue>> source, IEqualityComparer<TKey>? keyComparer, IEqualityComparer<TValue>? valueComparer) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The sequence of key/value pairs to enumerate.
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The key comparer to use when building the immutable dictionary.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer to use for the immutable dictionary.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: An immutable dictionary that contains the key/value pairs in the specified sequence.
    content.vb: Public Shared Function ToImmutableDictionary(Of TKey, TValue)(source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary*
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  name.vb: ToImmutableDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
  id: ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<TKey>?)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<TKey>?)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<TKey>?)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TKey, TValue>(this IEnumerable<KeyValuePair<TKey, TValue>> source, IEqualityComparer<TKey>? keyComparer) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The sequence of key/value pairs to enumerate.
    - id: keyComparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
      description: The key comparer to use when building the immutable dictionary.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: An immutable dictionary that contains the key/value pairs in the specified sequence.
    content.vb: Public Shared Function ToImmutableDictionary(Of TKey, TValue)(source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary*
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of TKey))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToImmutableDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of TKey))
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.
  example: []
  syntax:
    content: 'public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TKey, TValue>(this IEnumerable<KeyValuePair<TKey, TValue>> source) where TKey : notnull'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The sequence of key/value pairs to enumerate.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
      description: An immutable dictionary that contains the key/value pairs in the specified sequence.
    content.vb: Public Shared Function ToImmutableDictionary(Of TKey, TValue)(source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)
  overload: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary*
  nameWithType.vb: ImmutableDictionary.ToImmutableDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: ToImmutableDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  commentId: M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  id: Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: Contains<TKey, TValue>(IImmutableDictionary<TKey, TValue>, TKey, TValue)
  nameWithType: ImmutableDictionary.Contains<TKey, TValue>(IImmutableDictionary<TKey, TValue>, TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableDictionary.Contains<TKey, TValue>(System.Collections.Immutable.IImmutableDictionary<TKey, TValue>, TKey, TValue)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Determines whether the specified immutable dictionary contains the specified key/value pair.
  example: []
  syntax:
    content: 'public static bool Contains<TKey, TValue>(this IImmutableDictionary<TKey, TValue> map, TKey key, TValue value) where TKey : notnull'
    parameters:
    - id: map
      type: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
      description: The immutable dictionary to search.
    - id: key
      type: '{TKey}'
      description: The key to locate in the immutable dictionary.
    - id: value
      type: '{TValue}'
      description: The value to locate on the specified key, if the key is found.
    typeParameters:
    - id: TKey
      description: The type of the keys in the immutable dictionary.
    - id: TValue
      description: The type of the values in the immutable dictionary.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this map contains the specified key/value pair; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function Contains(Of TKey, TValue)(map As IImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As Boolean
  overload: System.Collections.Immutable.ImmutableDictionary.Contains*
  nameWithType.vb: ImmutableDictionary.Contains(Of TKey, TValue)(IImmutableDictionary(Of TKey, TValue), TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.Contains(Of TKey, TValue)(System.Collections.Immutable.IImmutableDictionary(Of TKey, TValue), TKey, TValue)
  name.vb: Contains(Of TKey, TValue)(IImmutableDictionary(Of TKey, TValue), TKey, TValue)
- uid: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)
  commentId: M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)
  id: GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: GetValueOrDefault<TKey, TValue>(IImmutableDictionary<TKey, TValue>, TKey)
  nameWithType: ImmutableDictionary.GetValueOrDefault<TKey, TValue>(IImmutableDictionary<TKey, TValue>, TKey)
  fullName: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault<TKey, TValue>(System.Collections.Immutable.IImmutableDictionary<TKey, TValue>, TKey)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets the value for a given key if a matching key exists in the dictionary.
  example: []
  syntax:
    content: 'public static TValue? GetValueOrDefault<TKey, TValue>(this IImmutableDictionary<TKey, TValue> dictionary, TKey key) where TKey : notnull'
    parameters:
    - id: dictionary
      type: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
      description: The dictionary to retrieve the value from.
    - id: key
      type: '{TKey}'
      description: The key to search for.
    typeParameters:
    - id: TKey
      description: The type of the key.
    - id: TValue
      description: The type of the value.
    return:
      type: '{TValue}'
      description: The value for the key, or <code>default(TValue)</code> if no matching key was found.
    content.vb: Public Shared Function GetValueOrDefault(Of TKey, TValue)(dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey) As TValue
  overload: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault*
  nameWithType.vb: ImmutableDictionary.GetValueOrDefault(Of TKey, TValue)(IImmutableDictionary(Of TKey, TValue), TKey)
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault(Of TKey, TValue)(System.Collections.Immutable.IImmutableDictionary(Of TKey, TValue), TKey)
  name.vb: GetValueOrDefault(Of TKey, TValue)(IImmutableDictionary(Of TKey, TValue), TKey)
- uid: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  commentId: M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  id: GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  isExtensionMethod: true
  parent: System.Collections.Immutable.ImmutableDictionary
  langs:
  - csharp
  - vb
  name: GetValueOrDefault<TKey, TValue>(IImmutableDictionary<TKey, TValue>, TKey, TValue)
  nameWithType: ImmutableDictionary.GetValueOrDefault<TKey, TValue>(IImmutableDictionary<TKey, TValue>, TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault<TKey, TValue>(System.Collections.Immutable.IImmutableDictionary<TKey, TValue>, TKey, TValue)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets the value for a given key if a matching key exists in the dictionary.
  example: []
  syntax:
    content: 'public static TValue GetValueOrDefault<TKey, TValue>(this IImmutableDictionary<TKey, TValue> dictionary, TKey key, TValue defaultValue) where TKey : notnull'
    parameters:
    - id: dictionary
      type: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
      description: The dictionary to retrieve the value from.
    - id: key
      type: '{TKey}'
      description: The key to search for.
    - id: defaultValue
      type: '{TValue}'
      description: The default value to return if no matching key is found in the dictionary.
    typeParameters:
    - id: TKey
      description: The type of the key.
    - id: TValue
      description: The type of the value.
    return:
      type: '{TValue}'
      description: The value for the key, or <code class="paramref">defaultValue</code> if no matching key was found.
    content.vb: Public Shared Function GetValueOrDefault(Of TKey, TValue)(dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey, defaultValue As TValue) As TValue
  overload: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault*
  nameWithType.vb: ImmutableDictionary.GetValueOrDefault(Of TKey, TValue)(IImmutableDictionary(Of TKey, TValue), TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault(Of TKey, TValue)(System.Collections.Immutable.IImmutableDictionary(Of TKey, TValue), TKey, TValue)
  name.vb: GetValueOrDefault(Of TKey, TValue)(IImmutableDictionary(Of TKey, TValue), TKey, TValue)
references:
- uid: System.Collections.Immutable.ImmutableDictionary`2
  commentId: T:System.Collections.Immutable.ImmutableDictionary`2
  parent: System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  name: ImmutableDictionary<TKey, TValue>
  nameWithType: ImmutableDictionary<TKey, TValue>
  fullName: System.Collections.Immutable.ImmutableDictionary<TKey, TValue>
  nameWithType.vb: ImmutableDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableDictionary(Of TKey, TValue)
  name.vb: ImmutableDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Immutable.ImmutableDictionary.Create*
  commentId: Overload:System.Collections.Immutable.ImmutableDictionary.Create
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_Create__2
  name: Create
  nameWithType: ImmutableDictionary.Create
  fullName: System.Collections.Immutable.ImmutableDictionary.Create
- uid: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Immutable.ImmutableDictionary{`0,`1}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  name: ImmutableDictionary<TKey, TValue>
  nameWithType: ImmutableDictionary<TKey, TValue>
  fullName: System.Collections.Immutable.ImmutableDictionary<TKey, TValue>
  nameWithType.vb: ImmutableDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableDictionary(Of TKey, TValue)
  name.vb: ImmutableDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IEqualityComparer{{TKey}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  nameWithType.vb: IEqualityComparer(Of TKey)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TKey)
  name.vb: IEqualityComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEqualityComparer{{TValue}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<TValue>
  nameWithType: IEqualityComparer<TValue>
  fullName: System.Collections.Generic.IEqualityComparer<TValue>
  nameWithType.vb: IEqualityComparer(Of TValue)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TValue)
  name.vb: IEqualityComparer(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Immutable.ImmutableDictionary.CreateRange*
  commentId: Overload:System.Collections.Immutable.ImmutableDictionary.CreateRange
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_CreateRange__2_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair___0___1___
  name: CreateRange
  nameWithType: ImmutableDictionary.CreateRange
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateRange
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableDictionary.CreateBuilder*
  commentId: Overload:System.Collections.Immutable.ImmutableDictionary.CreateBuilder
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_CreateBuilder__2
  name: CreateBuilder
  nameWithType: ImmutableDictionary.CreateBuilder
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateBuilder
- uid: System.Collections.Immutable.ImmutableDictionary{{TKey},{TValue}}.Builder
  commentId: T:System.Collections.Immutable.ImmutableDictionary{`0,`1}.Builder
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableDictionary`2.Builder
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  name: ImmutableDictionary<TKey, TValue>.Builder
  nameWithType: ImmutableDictionary<TKey, TValue>.Builder
  fullName: System.Collections.Immutable.ImmutableDictionary<TKey, TValue>.Builder
  nameWithType.vb: ImmutableDictionary(Of TKey, TValue).Builder
  fullName.vb: System.Collections.Immutable.ImmutableDictionary(Of TKey, TValue).Builder
  name.vb: ImmutableDictionary(Of TKey, TValue).Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: .
  - uid: System.Collections.Immutable.ImmutableDictionary{`0,`1}.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2.builder
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: .
  - uid: System.Collections.Immutable.ImmutableDictionary{`0,`1}.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2.builder
- uid: System.Collections.Immutable.ImmutableDictionary`2.Builder
  commentId: T:System.Collections.Immutable.ImmutableDictionary`2.Builder
  parent: System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  name: ImmutableDictionary<TKey, TValue>.Builder
  nameWithType: ImmutableDictionary<TKey, TValue>.Builder
  fullName: System.Collections.Immutable.ImmutableDictionary<TKey, TValue>.Builder
  nameWithType.vb: ImmutableDictionary(Of TKey, TValue).Builder
  fullName.vb: System.Collections.Immutable.ImmutableDictionary(Of TKey, TValue).Builder
  name.vb: ImmutableDictionary(Of TKey, TValue).Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: .
  - uid: System.Collections.Immutable.ImmutableDictionary`2.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2.builder
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: .
  - uid: System.Collections.Immutable.ImmutableDictionary`2.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutabledictionary-2.builder
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary*
  commentId: Overload:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_ToImmutableDictionary__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Collections_Generic_IEqualityComparer___1__System_Collections_Generic_IEqualityComparer___2__
  name: ToImmutableDictionary
  nameWithType: ImmutableDictionary.ToImmutableDictionary
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary
- uid: System.Collections.Generic.IEnumerable{{TSource}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TSource>
  nameWithType: IEnumerable<TSource>
  fullName: System.Collections.Generic.IEnumerable<TSource>
  nameWithType.vb: IEnumerable(Of TSource)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TSource)
  name.vb: IEnumerable(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: System.Func{{TSource},{TKey}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TSource, TKey>
  nameWithType: Func<TSource, TKey>
  fullName: System.Func<TSource, TKey>
  nameWithType.vb: Func(Of TSource, TKey)
  fullName.vb: System.Func(Of TSource, TKey)
  name.vb: Func(Of TSource, TKey)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: System.Func{{TSource},{TValue}}
  commentId: T:System.Func{``0,``2}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TSource, TValue>
  nameWithType: Func<TSource, TValue>
  fullName: System.Func<TSource, TValue>
  nameWithType.vb: Func(Of TSource, TValue)
  fullName.vb: System.Func(Of TSource, TValue)
  name.vb: Func(Of TSource, TValue)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Collections.Immutable.ImmutableDictionary{{TKey},{TSource}}
  commentId: T:System.Collections.Immutable.ImmutableDictionary{``1,``0}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableDictionary`2
  href: System.Collections.Immutable.ImmutableDictionary-2.html
  name: ImmutableDictionary<TKey, TSource>
  nameWithType: ImmutableDictionary<TKey, TSource>
  fullName: System.Collections.Immutable.ImmutableDictionary<TKey, TSource>
  nameWithType.vb: ImmutableDictionary(Of TKey, TSource)
  fullName.vb: System.Collections.Immutable.ImmutableDictionary(Of TKey, TSource)
  name.vb: ImmutableDictionary(Of TKey, TSource)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableDictionary`2
    name: ImmutableDictionary
    isExternal: true
    href: System.Collections.Immutable.ImmutableDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TSource
  - name: )
- uid: System.Collections.Immutable.ImmutableDictionary.Contains*
  commentId: Overload:System.Collections.Immutable.ImmutableDictionary.Contains
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_Contains__2_System_Collections_Immutable_IImmutableDictionary___0___1____0___1_
  name: Contains
  nameWithType: ImmutableDictionary.Contains
  fullName: System.Collections.Immutable.ImmutableDictionary.Contains
- uid: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Immutable.IImmutableDictionary{`0,`1}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.IImmutableDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.iimmutabledictionary-2
  name: IImmutableDictionary<TKey, TValue>
  nameWithType: IImmutableDictionary<TKey, TValue>
  fullName: System.Collections.Immutable.IImmutableDictionary<TKey, TValue>
  nameWithType.vb: IImmutableDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Immutable.IImmutableDictionary(Of TKey, TValue)
  name.vb: IImmutableDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableDictionary`2
    name: IImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.iimmutabledictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableDictionary`2
    name: IImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.iimmutabledictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Immutable.IImmutableDictionary`2
  commentId: T:System.Collections.Immutable.IImmutableDictionary`2
  parent: System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.iimmutabledictionary-2
  name: IImmutableDictionary<TKey, TValue>
  nameWithType: IImmutableDictionary<TKey, TValue>
  fullName: System.Collections.Immutable.IImmutableDictionary<TKey, TValue>
  nameWithType.vb: IImmutableDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Immutable.IImmutableDictionary(Of TKey, TValue)
  name.vb: IImmutableDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableDictionary`2
    name: IImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.iimmutabledictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableDictionary`2
    name: IImmutableDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.iimmutabledictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault*
  commentId: Overload:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault
  isExternal: true
  href: System.Collections.Immutable.ImmutableDictionary.html#System_Collections_Immutable_ImmutableDictionary_GetValueOrDefault__2_System_Collections_Immutable_IImmutableDictionary___0___1____0_
  name: GetValueOrDefault
  nameWithType: ImmutableDictionary.GetValueOrDefault
  fullName: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault
