### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  id: BaseTryBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  children:
  - CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.#ctor(CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock},CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock)
  - CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BlockType
  - CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BuildTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.CatchBlocks
  - CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.FinallyBlock
  - CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.String,System.String)
  - CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.LoggerBlock
  langs:
  - csharp
  - vb
  name: BaseTryBlock
  nameWithType: BaseTryBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  type: Class
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Base class implementation of the try block
  example: []
  syntax:
    content: 'public abstract class BaseTryBlock : ITryBlock, IBlock'
    content.vb: Public MustInherit Class BaseTryBlock Implements ITryBlock, IBlock
  inheritance:
  - System.Object
  derivedClasses:
  - CodeFactory.WinVs.Models.CSharp.Builder.TryBlockStandard
  implements:
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  - CodeFactory.WinVs.Models.CSharp.Builder.IBlock
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.#ctor(CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock},CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.#ctor(CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock},CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock)
  id: '#ctor(CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock},CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock)'
  parent: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  langs:
  - csharp
  - vb
  name: BaseTryBlock(ILoggerBlock, IEnumerable<ICatchBlock>, IFinallyBlock)
  nameWithType: BaseTryBlock.BaseTryBlock(ILoggerBlock, IEnumerable<ICatchBlock>, IFinallyBlock)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BaseTryBlock(CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock, System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock>, CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock)
  type: Constructor
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Base constructure for the <xref href="CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: protected BaseTryBlock(ILoggerBlock loggerBlock = null, IEnumerable<ICatchBlock> catchBlocks = null, IFinallyBlock finallyBlock = null)
    parameters:
    - id: loggerBlock
      type: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
      description: Optional parameter that provides the loggerblock.
    - id: catchBlocks
      type: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock}
      description: Optional parameter catch blocks that support the try block.
    - id: finallyBlock
      type: CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock
      description: Optional parameter finally block that supports the try block.
    content.vb: Protected Sub New(loggerBlock As ILoggerBlock = Nothing, catchBlocks As IEnumerable(Of ICatchBlock) = Nothing, finallyBlock As IFinallyBlock = Nothing)
  overload: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.#ctor*
  nameWithType.vb: BaseTryBlock.New(ILoggerBlock, IEnumerable(Of ICatchBlock), IFinallyBlock)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.New(CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock, System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock), CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock)
  name.vb: New(ILoggerBlock, IEnumerable(Of ICatchBlock), IFinallyBlock)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.String)
  id: GenerateTryBlock(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  langs:
  - csharp
  - vb
  name: GenerateTryBlock(string)
  nameWithType: BaseTryBlock.GenerateTryBlock(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the try block
  example: []
  syntax:
    content: public string GenerateTryBlock(string memberName = null)
    parameters:
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the try block is implemented in.
    return:
      type: System.String
      description: Returns the generated try block
    content.vb: Public Function GenerateTryBlock(memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock*
  implements:
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String)
  nameWithType.vb: BaseTryBlock.GenerateTryBlock(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(String)
  name.vb: GenerateTryBlock(String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.String,System.String)
  id: GenerateTryBlock(System.String,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  langs:
  - csharp
  - vb
  name: GenerateTryBlock(string, string)
  nameWithType: BaseTryBlock.GenerateTryBlock(string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(string, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the try block
  example: []
  syntax:
    content: public string GenerateTryBlock(string syntax, string memberName = null)
    parameters:
    - id: syntax
      type: System.String
      description: Syntax to be injected into the try block.
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the try block is implemented in.
    return:
      type: System.String
      description: Returns the generated try block
    content.vb: Public Function GenerateTryBlock(syntax As String, memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock*
  implements:
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.String)
  nameWithType.vb: BaseTryBlock.GenerateTryBlock(String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(String, String)
  name.vb: GenerateTryBlock(String, String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  id: GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  langs:
  - csharp
  - vb
  name: GenerateTryBlock(IEnumerable<NamedSyntax>, string)
  nameWithType: BaseTryBlock.GenerateTryBlock(IEnumerable<NamedSyntax>, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the try block
  example: []
  syntax:
    content: public string GenerateTryBlock(IEnumerable<NamedSyntax> multipleSyntax, string memberName = null)
    parameters:
    - id: multipleSyntax
      type: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
      description: Multiple syntax statements has been provided to be used by the try block.
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the try block is implemented in.
    return:
      type: System.String
      description: Returns the generated try block
    content.vb: Public Function GenerateTryBlock(multipleSyntax As IEnumerable(Of NamedSyntax), memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock*
  implements:
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  nameWithType.vb: BaseTryBlock.GenerateTryBlock(IEnumerable(Of NamedSyntax), String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax), String)
  name.vb: GenerateTryBlock(IEnumerable(Of NamedSyntax), String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  id: GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  langs:
  - csharp
  - vb
  name: GenerateTryBlock(string, IEnumerable<NamedSyntax>, string)
  nameWithType: BaseTryBlock.GenerateTryBlock(string, IEnumerable<NamedSyntax>, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(string, System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Generates the try block
  example: []
  syntax:
    content: public string GenerateTryBlock(string syntax, IEnumerable<NamedSyntax> multipleSyntax, string memberName = null)
    parameters:
    - id: syntax
      type: System.String
      description: Syntax to be injected into the try block.
    - id: multipleSyntax
      type: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
      description: Multiple syntax statements has been provided to be used by the try block.
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the try block is implemented in.
    return:
      type: System.String
      description: Returns the generated try block
    content.vb: Public Function GenerateTryBlock(syntax As String, multipleSyntax As IEnumerable(Of NamedSyntax), memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock*
  implements:
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  nameWithType.vb: BaseTryBlock.GenerateTryBlock(String, IEnumerable(Of NamedSyntax), String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock(String, System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax), String)
  name.vb: GenerateTryBlock(String, IEnumerable(Of NamedSyntax), String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BuildTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BuildTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  id: BuildTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  langs:
  - csharp
  - vb
  name: BuildTryBlock(string, IEnumerable<NamedSyntax>, string)
  nameWithType: BaseTryBlock.BuildTryBlock(string, IEnumerable<NamedSyntax>, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BuildTryBlock(string, System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Builds the try block
  example: []
  syntax:
    content: protected abstract string BuildTryBlock(string syntax = null, IEnumerable<NamedSyntax> multipleSyntax = null, string memberName = null)
    parameters:
    - id: syntax
      type: System.String
      description: Syntax to be injected into the try block, optional parameter.
    - id: multipleSyntax
      type: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
      description: Multiple syntax statements has been provided to be used by the try block,optional parameter.
    - id: memberName
      type: System.String
      description: Optional parameter that determines the target member the try block is implemented in.
    return:
      type: System.String
      description: Returns the generated try block
    content.vb: Protected MustOverride Function BuildTryBlock(syntax As String = Nothing, multipleSyntax As IEnumerable(Of NamedSyntax) = Nothing, memberName As String = Nothing) As String
  overload: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BuildTryBlock*
  nameWithType.vb: BaseTryBlock.BuildTryBlock(String, IEnumerable(Of NamedSyntax), String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BuildTryBlock(String, System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax), String)
  name.vb: BuildTryBlock(String, IEnumerable(Of NamedSyntax), String)
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BlockType
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BlockType
  id: BlockType
  parent: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  langs:
  - csharp
  - vb
  name: BlockType
  nameWithType: BaseTryBlock.BlockType
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BlockType
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: The type of code block that has been implemented.
  example: []
  syntax:
    content: public CodeBlockType BlockType { get; }
    parameters: []
    return:
      type: CodeFactory.WinVs.Models.CSharp.Builder.CodeBlockType
    content.vb: Public ReadOnly Property BlockType As CodeBlockType
  overload: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BlockType*
  implements:
  - CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.LoggerBlock
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.LoggerBlock
  id: LoggerBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  langs:
  - csharp
  - vb
  name: LoggerBlock
  nameWithType: BaseTryBlock.LoggerBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.LoggerBlock
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: The logger block supporting the try block, this is optional.
  example: []
  syntax:
    content: public ILoggerBlock LoggerBlock { get; }
    parameters: []
    return:
      type: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
    content.vb: Public ReadOnly Property LoggerBlock As ILoggerBlock
  overload: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.LoggerBlock*
  implements:
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.CatchBlocks
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.CatchBlocks
  id: CatchBlocks
  parent: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  langs:
  - csharp
  - vb
  name: CatchBlocks
  nameWithType: BaseTryBlock.CatchBlocks
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.CatchBlocks
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Catch blocks that support the try block, these are optional.
  example: []
  syntax:
    content: public IEnumerable<ICatchBlock> CatchBlocks { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock}
    content.vb: Public ReadOnly Property CatchBlocks As IEnumerable(Of ICatchBlock)
  overload: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.CatchBlocks*
  implements:
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.FinallyBlock
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.FinallyBlock
  id: FinallyBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  langs:
  - csharp
  - vb
  name: FinallyBlock
  nameWithType: BaseTryBlock.FinallyBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.FinallyBlock
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/Builder/BaseTryBlock.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.Builder
  summary: Finally blick that supports the try block, this is optional.
  example: []
  syntax:
    content: public IFinallyBlock FinallyBlock { get; }
    parameters: []
    return:
      type: CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock
    content.vb: Public ReadOnly Property FinallyBlock As IFinallyBlock
  overload: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.FinallyBlock*
  implements:
  - CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock
references:
- uid: CodeFactory.WinVs.Models.CSharp.Builder
  commentId: N:CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp.Builder
  nameWithType: CodeFactory.WinVs.Models.CSharp.Builder
  fullName: CodeFactory.WinVs.Models.CSharp.Builder
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.Builder
    name: Builder
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.Builder
    name: Builder
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html
  name: ITryBlock
  nameWithType: ITryBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.IBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.html
  name: IBlock
  nameWithType: IBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBlock
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.html
  name: BaseTryBlock
  nameWithType: BaseTryBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.#ctor*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.#ctor
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_BaseTryBlock__ctor_CodeFactory_WinVs_Models_CSharp_Builder_ILoggerBlock_System_Collections_Generic_IEnumerable_CodeFactory_WinVs_Models_CSharp_Builder_ICatchBlock__CodeFactory_WinVs_Models_CSharp_Builder_IFinallyBlock_
  name: BaseTryBlock
  nameWithType: BaseTryBlock.BaseTryBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BaseTryBlock
  nameWithType.vb: BaseTryBlock.New
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.New
  name.vb: New
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock.html
  name: ILoggerBlock
  nameWithType: ILoggerBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ILoggerBlock
- uid: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock}
  commentId: T:System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ICatchBlock>
  nameWithType: IEnumerable<ICatchBlock>
  fullName: System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock>
  nameWithType.vb: IEnumerable(Of ICatchBlock)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock)
  name.vb: IEnumerable(Of ICatchBlock)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
    name: ICatchBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock
    name: ICatchBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ICatchBlock.html
  - name: )
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock.html
  name: IFinallyBlock
  nameWithType: IFinallyBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IFinallyBlock
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_BaseTryBlock_GenerateTryBlock_System_String_
  name: GenerateTryBlock
  nameWithType: BaseTryBlock.GenerateTryBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.GenerateTryBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_String_
  name: GenerateTryBlock(string)
  nameWithType: ITryBlock.GenerateTryBlock(string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(string)
  nameWithType.vb: ITryBlock.GenerateTryBlock(String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(String)
  name.vb: GenerateTryBlock(String)
  spec.csharp:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String)
    name: GenerateTryBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String)
    name: GenerateTryBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_String_System_String_
  name: GenerateTryBlock(string, string)
  nameWithType: ITryBlock.GenerateTryBlock(string, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(string, string)
  nameWithType.vb: ITryBlock.GenerateTryBlock(String, String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(String, String)
  name.vb: GenerateTryBlock(String, String)
  spec.csharp:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.String)
    name: GenerateTryBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.String)
    name: GenerateTryBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_Collections_Generic_IEnumerable_CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax__System_String_
  name: GenerateTryBlock(IEnumerable<NamedSyntax>, string)
  nameWithType: ITryBlock.GenerateTryBlock(IEnumerable<NamedSyntax>, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>, string)
  nameWithType.vb: ITryBlock.GenerateTryBlock(IEnumerable(Of NamedSyntax), String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax), String)
  name.vb: GenerateTryBlock(IEnumerable(Of NamedSyntax), String)
  spec.csharp:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
    name: GenerateTryBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_Collections_Generic_IEnumerable_CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax__System_String_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    name: NamedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
    name: GenerateTryBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_Collections_Generic_IEnumerable_CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax__System_String_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    name: NamedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
  commentId: T:System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<NamedSyntax>
  nameWithType: IEnumerable<NamedSyntax>
  fullName: System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>
  nameWithType.vb: IEnumerable(Of NamedSyntax)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax)
  name.vb: IEnumerable(Of NamedSyntax)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    name: NamedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    name: NamedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  - name: )
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  commentId: M:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_String_System_Collections_Generic_IEnumerable_CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax__System_String_
  name: GenerateTryBlock(string, IEnumerable<NamedSyntax>, string)
  nameWithType: ITryBlock.GenerateTryBlock(string, IEnumerable<NamedSyntax>, string)
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(string, System.Collections.Generic.IEnumerable<CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax>, string)
  nameWithType.vb: ITryBlock.GenerateTryBlock(String, IEnumerable(Of NamedSyntax), String)
  fullName.vb: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(String, System.Collections.Generic.IEnumerable(Of CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax), String)
  name.vb: GenerateTryBlock(String, IEnumerable(Of NamedSyntax), String)
  spec.csharp:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
    name: GenerateTryBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_String_System_Collections_Generic_IEnumerable_CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax__System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    name: NamedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.GenerateTryBlock(System.String,System.Collections.Generic.IEnumerable{CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax},System.String)
    name: GenerateTryBlock
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_GenerateTryBlock_System_String_System_Collections_Generic_IEnumerable_CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax__System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax
    name: NamedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.Builder.NamedSyntax.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BuildTryBlock*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BuildTryBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_BaseTryBlock_BuildTryBlock_System_String_System_Collections_Generic_IEnumerable_CodeFactory_WinVs_Models_CSharp_Builder_NamedSyntax__System_String_
  name: BuildTryBlock
  nameWithType: BaseTryBlock.BuildTryBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BuildTryBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BlockType*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BlockType
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_BaseTryBlock_BlockType
  name: BlockType
  nameWithType: BaseTryBlock.BlockType
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.BlockType
- uid: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
  parent: CodeFactory.WinVs.Models.CSharp.Builder.IBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_IBlock_BlockType
  name: BlockType
  nameWithType: IBlock.BlockType
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.IBlock.BlockType
- uid: CodeFactory.WinVs.Models.CSharp.Builder.CodeBlockType
  commentId: T:CodeFactory.WinVs.Models.CSharp.Builder.CodeBlockType
  parent: CodeFactory.WinVs.Models.CSharp.Builder
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.CodeBlockType.html
  name: CodeBlockType
  nameWithType: CodeBlockType
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.CodeBlockType
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.LoggerBlock*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.LoggerBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_BaseTryBlock_LoggerBlock
  name: LoggerBlock
  nameWithType: BaseTryBlock.LoggerBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.LoggerBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_LoggerBlock
  name: LoggerBlock
  nameWithType: ITryBlock.LoggerBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.LoggerBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.CatchBlocks*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.CatchBlocks
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_BaseTryBlock_CatchBlocks
  name: CatchBlocks
  nameWithType: BaseTryBlock.CatchBlocks
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.CatchBlocks
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_CatchBlocks
  name: CatchBlocks
  nameWithType: ITryBlock.CatchBlocks
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.CatchBlocks
- uid: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.FinallyBlock*
  commentId: Overload:CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.FinallyBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_BaseTryBlock_FinallyBlock
  name: FinallyBlock
  nameWithType: BaseTryBlock.FinallyBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.BaseTryBlock.FinallyBlock
- uid: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock
  commentId: P:CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock
  parent: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock
  isExternal: true
  href: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.html#CodeFactory_WinVs_Models_CSharp_Builder_ITryBlock_FinallyBlock
  name: FinallyBlock
  nameWithType: ITryBlock.FinallyBlock
  fullName: CodeFactory.WinVs.Models.CSharp.Builder.ITryBlock.FinallyBlock
