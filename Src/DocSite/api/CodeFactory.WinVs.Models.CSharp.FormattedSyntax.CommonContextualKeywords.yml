### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  commentId: T:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  id: CommonContextualKeywords
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  children:
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Add
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Alias
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Ascending
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Async
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Await
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.By
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Descending
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Dynamic
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.From
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Get
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Global
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Group
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Into
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Join
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.KeywordEquals
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Let
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.NameOf
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.On
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.OrderBy
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Partial
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Remove
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Select
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Set
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Value
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Var
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.When
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Where
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Yield
  langs:
  - csharp
  - vb
  name: CommonContextualKeywords
  nameWithType: CommonContextualKeywords
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  type: Class
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Syntax formatting for common keywords that are contextual in nature and not reserved words in the C# language. They will belong to one or more target libraries.
  example: []
  syntax:
    content: public static class CommonContextualKeywords
    content.vb: Public Module CommonContextualKeywords
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Add
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Add
  id: Add
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: CommonContextualKeywords.Add
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Add
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to defining a custom event accessor.
  example: []
  syntax:
    content: public const string Add = "add"
    return:
      type: System.String
    content.vb: Public Const Add As String = "add"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Alias
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Alias
  id: Alias
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Alias
  nameWithType: CommonContextualKeywords.Alias
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Alias
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to assign an alias name to reference types in a target assembly.
  example: []
  syntax:
    content: public const string Alias = "alias"
    return:
      type: System.String
    content.vb: Public Const Alias As String = "alias"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Ascending
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Ascending
  id: Ascending
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Ascending
  nameWithType: CommonContextualKeywords.Ascending
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Ascending
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to denote an ascending sort order from smallest to largest in an order by clause in a LINQ expression.
  example: []
  syntax:
    content: public const string Ascending = "ascending"
    return:
      type: System.String
    content.vb: Public Const Ascending As String = "ascending"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Async
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Async
  id: Async
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Async
  nameWithType: CommonContextualKeywords.Async
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Async
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that denotes the method is implemented as an async operation and is always paired with one or more await keywords.
  example: []
  syntax:
    content: public const string Async = "async"
    return:
      type: System.String
    content.vb: Public Const Async As String = "async"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Await
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Await
  id: Await
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Await
  nameWithType: CommonContextualKeywords.Await
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Await
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that denotes an async operation is executing and waiting for the result of the operation. Always used with one Async keyword decloration.
  example: []
  syntax:
    content: public const string Await = "await"
    return:
      type: System.String
    content.vb: Public Const Await As String = "await"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.By
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.By
  id: By
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: By
  nameWithType: CommonContextualKeywords.By
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.By
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that is used in a grouping clause how the returned items should be grouped. This is used in LINQ syntax.
  example: []
  syntax:
    content: public const string By = "by"
    return:
      type: System.String
    content.vb: Public Const By As String = "by"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Descending
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Descending
  id: Descending
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Descending
  nameWithType: CommonContextualKeywords.Descending
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Descending
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to denote an descending sort order from largest to smallest in an order by clause in a LINQ expression.
  example: []
  syntax:
    content: public const string Descending = "descending"
    return:
      type: System.String
    content.vb: Public Const Descending As String = "descending"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Dynamic
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Dynamic
  id: Dynamic
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Dynamic
  nameWithType: CommonContextualKeywords.Dynamic
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Dynamic
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that is used by variables that skips compile time checking.
  example: []
  syntax:
    content: public const string Dynamic = "dynamic"
    return:
      type: System.String
    content.vb: Public Const Dynamic As String = "dynamic"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.KeywordEquals
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.KeywordEquals
  id: KeywordEquals
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: KeywordEquals
  nameWithType: CommonContextualKeywords.KeywordEquals
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.KeywordEquals
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that is used in join clauses to denotes the two target values are equal. This is used in LINQ expressions.
  example: []
  syntax:
    content: public const string KeywordEquals = "equals"
    return:
      type: System.String
    content.vb: Public Const KeywordEquals As String = "equals"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.From
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.From
  id: From
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: From
  nameWithType: CommonContextualKeywords.From
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.From
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that denotes the source of a an expression. This is used in LINQ expressions.
  example: []
  syntax:
    content: public const string From = "from"
    return:
      type: System.String
    content.vb: Public Const From As String = "from"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Get
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Get
  id: Get
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Get
  nameWithType: CommonContextualKeywords.Get
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Get
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines an accessor method for properties or indexers.
  example: []
  syntax:
    content: public const string Get = "get"
    return:
      type: System.String
    content.vb: Public Const Get As String = "get"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Global
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Global
  id: Global
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Global
  nameWithType: CommonContextualKeywords.Global
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Global
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that denotes a global scope namespace.
  example: []
  syntax:
    content: public const string Global = "global"
    return:
      type: System.String
    content.vb: Public Const Global As String = "global"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Group
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Group
  id: Group
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: CommonContextualKeywords.Group
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Group
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines a grouping operation in a LINQ expression.
  example: []
  syntax:
    content: public const string Group = "group"
    return:
      type: System.String
    content.vb: Public Const Group As String = "group"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Into
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Into
  id: Into
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Into
  nameWithType: CommonContextualKeywords.Into
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Into
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that creates a temporary named identifier for the results of a group, join or select clause in a LINQ expression.
  example: []
  syntax:
    content: public const string Into = "into"
    return:
      type: System.String
    content.vb: Public Const Into As String = "into"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Join
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Join
  id: Join
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Join
  nameWithType: CommonContextualKeywords.Join
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Join
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines the start of a join operation in a LINQ expression.
  example: []
  syntax:
    content: public const string Join = "join"
    return:
      type: System.String
    content.vb: Public Const Join As String = "join"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Let
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Let
  id: Let
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Let
  nameWithType: CommonContextualKeywords.Let
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Let
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that stores the results of a sub expression used in LINQ expressions.
  example: []
  syntax:
    content: public const string Let = "let"
    return:
      type: System.String
    content.vb: Public Const Let As String = "let"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.NameOf
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.NameOf
  id: NameOf
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: NameOf
  nameWithType: CommonContextualKeywords.NameOf
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.NameOf
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword operation that gets the name of the variable, type, or member.
  example: []
  syntax:
    content: public const string NameOf = "nameof"
    return:
      type: System.String
    content.vb: Public Const NameOf As String = "nameof"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.On
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.On
  id: On
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: On
  nameWithType: CommonContextualKeywords.On
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.On
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword using in join operations used to specify a join condition. This is used in LINQ expressions.
  example: []
  syntax:
    content: public const string On = "on"
    return:
      type: System.String
    content.vb: Public Const On As String = "on"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.OrderBy
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.OrderBy
  id: OrderBy
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: OrderBy
  nameWithType: CommonContextualKeywords.OrderBy
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.OrderBy
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword used to set the return order definition from a LINQ expression.
  example: []
  syntax:
    content: public const string OrderBy = "orderby"
    return:
      type: System.String
    content.vb: Public Const OrderBy As String = "orderby"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Partial
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Partial
  id: Partial
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Partial
  nameWithType: CommonContextualKeywords.Partial
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Partial
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines that a class or method definition will be split across at least two code files.
  example: []
  syntax:
    content: public const string Partial = "partial"
    return:
      type: System.String
    content.vb: Public Const Partial As String = "partial"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Remove
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Remove
  id: Remove
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Remove
  nameWithType: CommonContextualKeywords.Remove
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Remove
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines an event accessor method that removes a subscription from a target event.
  example: []
  syntax:
    content: public const string Remove = "remove"
    return:
      type: System.String
    content.vb: Public Const Remove As String = "remove"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Select
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Select
  id: Select
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Select
  nameWithType: CommonContextualKeywords.Select
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Select
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines the collection of data, used in LINQ expressions.
  example: []
  syntax:
    content: public const string Select = "select"
    return:
      type: System.String
    content.vb: Public Const Select As String = "select"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Set
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Set
  id: Set
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Set
  nameWithType: CommonContextualKeywords.Set
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Set
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines an accessor method for properties and indexers.
  example: []
  syntax:
    content: public const string Set = "set"
    return:
      type: System.String
    content.vb: Public Const Set As String = "set"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Value
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Value
  id: Value
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: CommonContextualKeywords.Value
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Value
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that denotes the value that has been passed to a set accessor.
  example: []
  syntax:
    content: public const string Value = "value"
    return:
      type: System.String
    content.vb: Public Const Value As String = "value"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Var
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Var
  id: Var
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Var
  nameWithType: CommonContextualKeywords.Var
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Var
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines a local variable used within the scope of a method body.
  example: []
  syntax:
    content: public const string Var = "var"
    return:
      type: System.String
    content.vb: Public Const Var As String = "var"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.When
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.When
  id: When
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: When
  nameWithType: CommonContextualKeywords.When
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.When
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: 'Keyword that is used a validation condition in switch statements. (Note: Available in C# 7.0 and later). Also used as a validation condition with catch statements. (Note: Available in C# 6.0 and later).'
  example: []
  syntax:
    content: public const string When = "when"
    return:
      type: System.String
    content.vb: Public Const When As String = "when"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Where
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Where
  id: Where
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Where
  nameWithType: CommonContextualKeywords.Where
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Where
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword used to start the definition of constraining condition on a generic type. Also used a evaluation to determine what data will be returned from a LINQ expression.
  example: []
  syntax:
    content: public const string Where = "where"
    return:
      type: System.String
    content.vb: Public Const Where As String = "where"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Yield
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Yield
  id: Yield
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords
  langs:
  - csharp
  - vb
  name: Yield
  nameWithType: CommonContextualKeywords.Yield
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.CommonContextualKeywords.Yield
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/CommonContextualKeywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword used to denote in an iterator. Used with return and break statements.
  example: []
  syntax:
    content: public const string Yield = "yield"
    return:
      type: System.String
    content.vb: Public Const Yield As String = "yield"
references:
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  commentId: N:CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  nameWithType: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
    name: FormattedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
    name: FormattedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
