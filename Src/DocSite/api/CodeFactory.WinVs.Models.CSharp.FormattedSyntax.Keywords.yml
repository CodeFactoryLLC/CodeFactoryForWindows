### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  commentId: T:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  id: Keywords
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  children:
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Abstract
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.As
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Base
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Break
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Case
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Catch
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Checked
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Class
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Constant
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Continue
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Default
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Delegate
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Do
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Else
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Enum
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Event
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Explicit
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Extern
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.False
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Finally
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Fixed
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.For
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.ForEach
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Goto
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.If
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Implicit
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.In
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Interface
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Is
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Lock
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Namespace
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.New
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Null
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Operator
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Out
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Override
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Params
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Readonly
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Ref
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Return
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Sealed
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.SizeOf
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.StackAlloc
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Static
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Structure
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Switch
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.This
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Throw
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.True
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Try
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.TypeOf
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UnChecked
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UnSafe
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Using
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UsingStatic
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Virtual
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Void
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Volatile
  - CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.While
  langs:
  - csharp
  - vb
  name: Keywords
  nameWithType: Keywords
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  type: Class
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Data class that contains the C# formatted syntax for keywords.
  example: []
  syntax:
    content: public static class Keywords
    content.vb: Public Module Keywords
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Abstract
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Abstract
  id: Abstract
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Abstract
  nameWithType: Keywords.Abstract
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Abstract
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword for an abstraction
  example: []
  syntax:
    content: public const string Abstract = "abstract"
    return:
      type: System.String
    content.vb: Public Const Abstract As String = "abstract"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.As
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.As
  id: As
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: As
  nameWithType: Keywords.As
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.As
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword for type conversion using an 'as' statement
  example: []
  syntax:
    content: public const string As = "as"
    return:
      type: System.String
    content.vb: Public Const As As String = "as"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Base
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Base
  id: Base
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Base
  nameWithType: Keywords.Base
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Base
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword for usage of the base keyword used with constructors
  example: []
  syntax:
    content: public const string Base = "base"
    return:
      type: System.String
    content.vb: Public Const Base As String = "base"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Break
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Break
  id: Break
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Break
  nameWithType: Keywords.Break
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Break
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword for exiting a running loop.
  example: []
  syntax:
    content: public const string Break = "break"
    return:
      type: System.String
    content.vb: Public Const Break As String = "break"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Case
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Case
  id: Case
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Case
  nameWithType: Keywords.Case
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Case
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword for a particular item to be evaluated in a switch statement.
  example: []
  syntax:
    content: public const string Case = "case"
    return:
      type: System.String
    content.vb: Public Const Case As String = "case"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Catch
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Catch
  id: Catch
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Catch
  nameWithType: Keywords.Catch
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Catch
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that captures an exception used with a try statement.
  example: []
  syntax:
    content: public const string Catch = "catch"
    return:
      type: System.String
    content.vb: Public Const Catch As String = "catch"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Checked
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Checked
  id: Checked
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Checked
  nameWithType: Keywords.Checked
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Checked
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to check math operations are within bounds of the target type.
  example: []
  syntax:
    content: public const string Checked = "checked"
    return:
      type: System.String
    content.vb: Public Const Checked As String = "checked"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Class
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Class
  id: Class
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Class
  nameWithType: Keywords.Class
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Class
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines a class.
  example: []
  syntax:
    content: public const string Class = "class"
    return:
      type: System.String
    content.vb: Public Const Class As String = "class"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Constant
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Constant
  id: Constant
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Constant
  nameWithType: Keywords.Constant
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Constant
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that denotes the field is a constant value.
  example: []
  syntax:
    content: public const string Constant = "const"
    return:
      type: System.String
    content.vb: Public Const Constant As String = "const"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Continue
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Continue
  id: Continue
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Continue
  nameWithType: Keywords.Continue
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Continue
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that manages control flow in a loop and tell the control to continue operation at the beginning of the loop.
  example: []
  syntax:
    content: public const string Continue = "continue"
    return:
      type: System.String
    content.vb: Public Const Continue As String = "continue"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Default
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Default
  id: Default
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: Keywords.Default
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Default
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to denote the default label in a switch statement, also used to return the default value of a type.
  example: []
  syntax:
    content: public const string Default = "default"
    return:
      type: System.String
    content.vb: Public Const Default As String = "default"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Delegate
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Delegate
  id: Delegate
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Delegate
  nameWithType: Keywords.Delegate
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Delegate
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to know the definition of a delegate method.
  example: []
  syntax:
    content: public const string Delegate = "delegate"
    return:
      type: System.String
    content.vb: Public Const Delegate As String = "delegate"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Do
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Do
  id: Do
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Do
  nameWithType: Keywords.Do
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Do
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to define an expression check to be true in order for the loop to continue execution.
  example: []
  syntax:
    content: public const string Do = "do"
    return:
      type: System.String
    content.vb: Public Const Do As String = "do"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Else
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Else
  id: Else
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Else
  nameWithType: Keywords.Else
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Else
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to cause execution of an alternate set of logic when an if statement is not true.
  example: []
  syntax:
    content: public const string Else = "else"
    return:
      type: System.String
    content.vb: Public Const Else As String = "else"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Enum
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Enum
  id: Enum
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Enum
  nameWithType: Keywords.Enum
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Enum
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to begin the definition of an enumeration type.
  example: []
  syntax:
    content: public const string Enum = "enum"
    return:
      type: System.String
    content.vb: Public Const Enum As String = "enum"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Event
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Event
  id: Event
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: Keywords.Event
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Event
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to begin the definition of an event.
  example: []
  syntax:
    content: public const string Event = "event"
    return:
      type: System.String
    content.vb: Public Const Event As String = "event"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Explicit
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Explicit
  id: Explicit
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Explicit
  nameWithType: Keywords.Explicit
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Explicit
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that denotes a data conversion that can throw an error or lose information.
  example: []
  syntax:
    content: public const string Explicit = "explicit"
    return:
      type: System.String
    content.vb: Public Const Explicit As String = "explicit"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Extern
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Extern
  id: Extern
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Extern
  nameWithType: Keywords.Extern
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Extern
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword used to declare a method that is implemented in an externally accessed library. (Used with DLL imports)
  example: []
  syntax:
    content: public const string Extern = "extern"
    return:
      type: System.String
    content.vb: Public Const Extern As String = "extern"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.False
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.False
  id: "False"
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: "False"
  nameWithType: Keywords.False
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.False
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that notes a false statement for a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> data type.
  example: []
  syntax:
    content: public const string False = "false"
    return:
      type: System.String
    content.vb: Public Const False As String = "false"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Finally
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Finally
  id: Finally
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Finally
  nameWithType: Keywords.Finally
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Finally
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to force the execution of statement after try and catch blocks have executed.
  example: []
  syntax:
    content: public const string Finally = "finally"
    return:
      type: System.String
    content.vb: Public Const Finally As String = "finally"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Fixed
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Fixed
  id: Fixed
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Fixed
  nameWithType: Keywords.Fixed
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Fixed
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to keep the garbage collector from moving a variable. Generally used with external api and unmanaged calls.
  example: []
  syntax:
    content: public const string Fixed = "fixed"
    return:
      type: System.String
    content.vb: Public Const Fixed As String = "fixed"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.For
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.For
  id: For
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: For
  nameWithType: Keywords.For
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.For
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to define a for loop.
  example: []
  syntax:
    content: public const string For = "for"
    return:
      type: System.String
    content.vb: Public Const For As String = "for"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.ForEach
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.ForEach
  id: ForEach
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: ForEach
  nameWithType: Keywords.ForEach
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.ForEach
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to define a for each loop.
  example: []
  syntax:
    content: public const string ForEach = "foreach"
    return:
      type: System.String
    content.vb: Public Const ForEach As String = "foreach"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Goto
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Goto
  id: Goto
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Goto
  nameWithType: Keywords.Goto
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Goto
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that informs where the logic execution will move to.
  example: []
  syntax:
    content: public const string Goto = "goto"
    return:
      type: System.String
    content.vb: Public Const Goto As String = "goto"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.If
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.If
  id: If
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: If
  nameWithType: Keywords.If
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.If
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that starts an evaluation to determine if a statement is true.
  example: []
  syntax:
    content: public const string If = "if"
    return:
      type: System.String
    content.vb: Public Const If As String = "if"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Implicit
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Implicit
  id: Implicit
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Implicit
  nameWithType: Keywords.Implicit
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Implicit
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword used to declare a data conversion that is safe and will not throw an error or lose data.
  example: []
  syntax:
    content: public const string Implicit = "implicit"
    return:
      type: System.String
    content.vb: Public Const Implicit As String = "implicit"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.In
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.In
  id: In
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: In
  nameWithType: Keywords.In
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.In
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword used in 4 cases, generic type parameters , a parameter modifer to pass arguments, define the target value in for each statements, usage in from clauses, and in join clauses.
  example: []
  syntax:
    content: public const string In = "in"
    return:
      type: System.String
    content.vb: Public Const In As String = "in"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Interface
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Interface
  id: Interface
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Interface
  nameWithType: Keywords.Interface
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Interface
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that starts the definition of a interface type.
  example: []
  syntax:
    content: public const string Interface = "interface"
    return:
      type: System.String
    content.vb: Public Const Interface As String = "interface"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Is
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Is
  id: Is
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Is
  nameWithType: Keywords.Is
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Is
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that checks if an expression is compatible with a target type.
  example: []
  syntax:
    content: public const string Is = "is"
    return:
      type: System.String
    content.vb: Public Const Is As String = "is"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Lock
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Lock
  id: Lock
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Lock
  nameWithType: Keywords.Lock
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Lock
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that starts the execution of code that can be accessed by one thread at a time.
  example: []
  syntax:
    content: public const string Lock = "lock"
    return:
      type: System.String
    content.vb: Public Const Lock As String = "lock"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Namespace
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Namespace
  id: Namespace
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: Keywords.Namespace
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Namespace
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines the namespace the following code definitions belong to.
  example: []
  syntax:
    content: public const string Namespace = "namespace"
    return:
      type: System.String
    content.vb: Public Const Namespace As String = "namespace"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.New
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.New
  id: New
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: New
  nameWithType: Keywords.New
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.New
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines the new instance of a data type.
  example: []
  syntax:
    content: public const string New = "new"
    return:
      type: System.String
    content.vb: Public Const New As String = "new"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Null
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Null
  id: "Null"
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: "Null"
  nameWithType: Keywords.Null
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Null
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that defines a reference type does not exist and has no memory reference.
  example: []
  syntax:
    content: public const string Null = "null"
    return:
      type: System.String
    content.vb: Public Const Null As String = "null"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Operator
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Operator
  id: Operator
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Operator
  nameWithType: Keywords.Operator
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Operator
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that starts a custom definition of operation for the target type.
  example: []
  syntax:
    content: public const string Operator = "operator"
    return:
      type: System.String
    content.vb: Public Const Operator As String = "operator"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Out
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Out
  id: Out
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Out
  nameWithType: Keywords.Out
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Out
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that signals that a passed parameter will receive an output of data. Also used with generic definitions to note the type parameter is covariant.
  example: []
  syntax:
    content: public const string Out = "out"
    return:
      type: System.String
    content.vb: Public Const Out As String = "out"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Override
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Override
  id: Override
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Override
  nameWithType: Keywords.Override
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Override
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that signals that an extension or modification of methods, properties, indexers, or events.
  example: []
  syntax:
    content: public const string Override = "override"
    return:
      type: System.String
    content.vb: Public Const Override As String = "override"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Params
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Params
  id: Params
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Params
  nameWithType: Keywords.Params
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Params
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that signals that a method parameter will be taking on a variable number of additional arguments of the target type.
  example: []
  syntax:
    content: public const string Params = "params"
    return:
      type: System.String
    content.vb: Public Const Params As String = "params"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Readonly
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Readonly
  id: Readonly
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Readonly
  nameWithType: Keywords.Readonly
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Readonly
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that notes a field cannot be changed once the constructor has run.
  example: []
  syntax:
    content: public const string Readonly = "readonly"
    return:
      type: System.String
    content.vb: Public Const Readonly As String = "readonly"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Ref
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Ref
  id: Ref
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Ref
  nameWithType: Keywords.Ref
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Ref
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to note the value was passed by reference.
  example: []
  syntax:
    content: public const string Ref = "ref"
    return:
      type: System.String
    content.vb: Public Const Ref As String = "ref"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Return
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Return
  id: Return
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Return
  nameWithType: Keywords.Return
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Return
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to return a target set of data from the executing method body.
  example: []
  syntax:
    content: public const string Return = "return"
    return:
      type: System.String
    content.vb: Public Const Return As String = "return"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Sealed
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Sealed
  id: Sealed
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Sealed
  nameWithType: Keywords.Sealed
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Sealed
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to lock the definition from being inherited by other classes.
  example: []
  syntax:
    content: public const string Sealed = "sealed"
    return:
      type: System.String
    content.vb: Public Const Sealed As String = "sealed"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.SizeOf
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.SizeOf
  id: SizeOf
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: SizeOf
  nameWithType: Keywords.SizeOf
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.SizeOf
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword operator that returns the number of bytes occupied by the variable.
  example: []
  syntax:
    content: public const string SizeOf = "sizeof"
    return:
      type: System.String
    content.vb: Public Const SizeOf As String = "sizeof"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.StackAlloc
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.StackAlloc
  id: StackAlloc
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: StackAlloc
  nameWithType: Keywords.StackAlloc
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.StackAlloc
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword allocates memory during execution of a method and removes at the end of the execution of the method. Allocated directly from the stack.
  example: []
  syntax:
    content: public const string StackAlloc = "stackalloc"
    return:
      type: System.String
    content.vb: Public Const StackAlloc As String = "stackalloc"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Static
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Static
  id: Static
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Static
  nameWithType: Keywords.Static
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Static
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that declares a static member that belongs to the type and not to an instance of the type.
  example: []
  syntax:
    content: public const string Static = "static"
    return:
      type: System.String
    content.vb: Public Const Static As String = "static"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Structure
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Structure
  id: Structure
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Structure
  nameWithType: Keywords.Structure
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Structure
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that declares the creation of a structure.
  example: []
  syntax:
    content: public const string Structure = "struct"
    return:
      type: System.String
    content.vb: Public Const Structure As String = "struct"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Switch
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Switch
  id: Switch
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Switch
  nameWithType: Keywords.Switch
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Switch
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that declares a switch statement.
  example: []
  syntax:
    content: public const string Switch = "switch"
    return:
      type: System.String
    content.vb: Public Const Switch As String = "switch"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.This
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.This
  id: This
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: This
  nameWithType: Keywords.This
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.This
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that references the current instance of the hosting class.
  example: []
  syntax:
    content: public const string This = "this"
    return:
      type: System.String
    content.vb: Public Const This As String = "this"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Throw
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Throw
  id: Throw
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Throw
  nameWithType: Keywords.Throw
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Throw
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that raises an instance of a target exception.
  example: []
  syntax:
    content: public const string Throw = "throw"
    return:
      type: System.String
    content.vb: Public Const Throw As String = "throw"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.True
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.True
  id: "True"
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: "True"
  nameWithType: Keywords.True
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.True
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that is a true condition in a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> data type.
  example: []
  syntax:
    content: public const string True = "true"
    return:
      type: System.String
    content.vb: Public Const True As String = "true"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Try
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Try
  id: Try
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Try
  nameWithType: Keywords.Try
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Try
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that is the start of a try block.
  example: []
  syntax:
    content: public const string Try = "try"
    return:
      type: System.String
    content.vb: Public Const Try As String = "try"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.TypeOf
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.TypeOf
  id: TypeOf
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: TypeOf
  nameWithType: Keywords.TypeOf
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.TypeOf
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that determines gets the type definition of the object.
  example: []
  syntax:
    content: public const string TypeOf = "typeof"
    return:
      type: System.String
    content.vb: Public Const TypeOf As String = "typeof"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UnChecked
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UnChecked
  id: UnChecked
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: UnChecked
  nameWithType: Keywords.UnChecked
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UnChecked
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to suppress overflow checking in arithmetic operations and conversions.
  example: []
  syntax:
    content: public const string UnChecked = "unchecked"
    return:
      type: System.String
    content.vb: Public Const UnChecked As String = "unchecked"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UnSafe
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UnSafe
  id: UnSafe
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: UnSafe
  nameWithType: Keywords.UnSafe
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UnSafe
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to note this call access pointers and is unsafe for memory collection.
  example: []
  syntax:
    content: public const string UnSafe = "unsafe"
    return:
      type: System.String
    content.vb: Public Const UnSafe As String = "unsafe"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Using
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Using
  id: Using
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Using
  nameWithType: Keywords.Using
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Using
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword directive to note a target namespace that is used in the scope of a code file.
  example: []
  syntax:
    content: public const string Using = "using"
    return:
      type: System.String
    content.vb: Public Const Using As String = "using"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UsingStatic
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UsingStatic
  id: UsingStatic
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: UsingStatic
  nameWithType: Keywords.UsingStatic
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.UsingStatic
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword directive to a static type where the static members and nested type can be accessed without specifying the type.
  example: []
  syntax:
    content: public const string UsingStatic = "using static"
    return:
      type: System.String
    content.vb: Public Const UsingStatic As String = "using static"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Virtual
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Virtual
  id: Virtual
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Virtual
  nameWithType: Keywords.Virtual
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Virtual
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword to note that a method, property, indexer, or event can be overridden.
  example: []
  syntax:
    content: public const string Virtual = "virtual"
    return:
      type: System.String
    content.vb: Public Const Virtual As String = "virtual"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Void
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Void
  id: Void
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Void
  nameWithType: Keywords.Void
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Void
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that notes that the method will not return a value.
  example: []
  syntax:
    content: public const string Void = "void"
    return:
      type: System.String
    content.vb: Public Const Void As String = "void"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Volatile
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Volatile
  id: Volatile
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: Volatile
  nameWithType: Keywords.Volatile
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.Volatile
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that determines a field can be modified by multiple threads during execution at the same time.
  example: []
  syntax:
    content: public const string Volatile = "volatile"
    return:
      type: System.String
    content.vb: Public Const Volatile As String = "volatile"
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.While
  commentId: F:CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.While
  id: While
  parent: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords
  langs:
  - csharp
  - vb
  name: While
  nameWithType: Keywords.While
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.Keywords.While
  type: Field
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/19e816ffdf1ba504be6987736bbac42e2d241405/Src/CodeFactoryForWindows/CodeFactory.WinVs/Models/CSharp/FormattedSyntax/Keywords.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  summary: Keyword that continues execution of a code block while the evaluation statement is true.
  example: []
  syntax:
    content: public const string While = "while"
    return:
      type: System.String
    content.vb: Public Const While As String = "while"
references:
- uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  commentId: N:CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  nameWithType: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  fullName: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
    name: FormattedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp
    name: CSharp
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.html
  - name: .
  - uid: CodeFactory.WinVs.Models.CSharp.FormattedSyntax
    name: FormattedSyntax
    isExternal: true
    href: CodeFactory.WinVs.Models.CSharp.FormattedSyntax.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
