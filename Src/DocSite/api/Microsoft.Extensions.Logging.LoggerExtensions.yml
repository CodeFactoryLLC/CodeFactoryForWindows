### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.LoggerExtensions
  commentId: T:Microsoft.Extensions.Logging.LoggerExtensions
  id: LoggerExtensions
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  - Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: LoggerExtensions
  nameWithType: LoggerExtensions
  fullName: Microsoft.Extensions.Logging.LoggerExtensions
  type: Class
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: ILogger extension methods for common scenarios.
  example: []
  syntax:
    content: public static class LoggerExtensions
    content.vb: Public Module LoggerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  id: LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogDebug(ILogger, EventId, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogDebug(ILogger, EventId, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a debug log message.
  example:
  - logger.LogDebug(0, exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogDebug(this ILogger logger, EventId eventId, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogDebug(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug*
  nameWithType.vb: LoggerExtensions.LogDebug(ILogger, EventId, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception, String, ParamArray Object())
  name.vb: LogDebug(ILogger, EventId, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogDebug(ILogger, EventId, string?, params object?[])
  nameWithType: LoggerExtensions.LogDebug(ILogger, EventId, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a debug log message.
  example:
  - logger.LogDebug(0, "Processing request from {Address}", address)
  syntax:
    content: public static void LogDebug(this ILogger logger, EventId eventId, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogDebug(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug*
  nameWithType.vb: LoggerExtensions.LogDebug(ILogger, EventId, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, String, ParamArray Object())
  name.vb: LogDebug(ILogger, EventId, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  id: LogDebug(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogDebug(ILogger, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogDebug(ILogger, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a debug log message.
  example:
  - logger.LogDebug(exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogDebug(this ILogger logger, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogDebug(logger As ILogger, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug*
  nameWithType.vb: LoggerExtensions.LogDebug(ILogger, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, System.Exception, String, ParamArray Object())
  name.vb: LogDebug(ILogger, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogDebug(ILogger, string?, params object?[])
  nameWithType: LoggerExtensions.LogDebug(ILogger, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a debug log message.
  example:
  - logger.LogDebug("Processing request from {Address}", address)
  syntax:
    content: public static void LogDebug(this ILogger logger, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogDebug(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug*
  nameWithType.vb: LoggerExtensions.LogDebug(ILogger, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger, String, ParamArray Object())
  name.vb: LogDebug(ILogger, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  id: LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogTrace(ILogger, EventId, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogTrace(ILogger, EventId, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a trace log message.
  example:
  - logger.LogTrace(0, exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogTrace(this ILogger logger, EventId eventId, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogTrace(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace*
  nameWithType.vb: LoggerExtensions.LogTrace(ILogger, EventId, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception, String, ParamArray Object())
  name.vb: LogTrace(ILogger, EventId, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogTrace(ILogger, EventId, string?, params object?[])
  nameWithType: LoggerExtensions.LogTrace(ILogger, EventId, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a trace log message.
  example:
  - logger.LogTrace(0, "Processing request from {Address}", address)
  syntax:
    content: public static void LogTrace(this ILogger logger, EventId eventId, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogTrace(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace*
  nameWithType.vb: LoggerExtensions.LogTrace(ILogger, EventId, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, String, ParamArray Object())
  name.vb: LogTrace(ILogger, EventId, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  id: LogTrace(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogTrace(ILogger, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogTrace(ILogger, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a trace log message.
  example:
  - logger.LogTrace(exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogTrace(this ILogger logger, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogTrace(logger As ILogger, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace*
  nameWithType.vb: LoggerExtensions.LogTrace(ILogger, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, System.Exception, String, ParamArray Object())
  name.vb: LogTrace(ILogger, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogTrace(ILogger, string?, params object?[])
  nameWithType: LoggerExtensions.LogTrace(ILogger, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a trace log message.
  example:
  - logger.LogTrace("Processing request from {Address}", address)
  syntax:
    content: public static void LogTrace(this ILogger logger, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogTrace(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace*
  nameWithType.vb: LoggerExtensions.LogTrace(ILogger, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger, String, ParamArray Object())
  name.vb: LogTrace(ILogger, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  id: LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogInformation(ILogger, EventId, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogInformation(ILogger, EventId, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes an informational log message.
  example:
  - logger.LogInformation(0, exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogInformation(this ILogger logger, EventId eventId, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogInformation(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation*
  nameWithType.vb: LoggerExtensions.LogInformation(ILogger, EventId, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception, String, ParamArray Object())
  name.vb: LogInformation(ILogger, EventId, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogInformation(ILogger, EventId, string?, params object?[])
  nameWithType: LoggerExtensions.LogInformation(ILogger, EventId, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes an informational log message.
  example:
  - logger.LogInformation(0, "Processing request from {Address}", address)
  syntax:
    content: public static void LogInformation(this ILogger logger, EventId eventId, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogInformation(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation*
  nameWithType.vb: LoggerExtensions.LogInformation(ILogger, EventId, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, String, ParamArray Object())
  name.vb: LogInformation(ILogger, EventId, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  id: LogInformation(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogInformation(ILogger, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogInformation(ILogger, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes an informational log message.
  example:
  - logger.LogInformation(exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogInformation(this ILogger logger, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogInformation(logger As ILogger, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation*
  nameWithType.vb: LoggerExtensions.LogInformation(ILogger, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, System.Exception, String, ParamArray Object())
  name.vb: LogInformation(ILogger, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogInformation(ILogger, string?, params object?[])
  nameWithType: LoggerExtensions.LogInformation(ILogger, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes an informational log message.
  example:
  - logger.LogInformation("Processing request from {Address}", address)
  syntax:
    content: public static void LogInformation(this ILogger logger, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogInformation(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation*
  nameWithType.vb: LoggerExtensions.LogInformation(ILogger, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger, String, ParamArray Object())
  name.vb: LogInformation(ILogger, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  id: LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogWarning(ILogger, EventId, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogWarning(ILogger, EventId, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a warning log message.
  example:
  - logger.LogWarning(0, exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogWarning(this ILogger logger, EventId eventId, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogWarning(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning*
  nameWithType.vb: LoggerExtensions.LogWarning(ILogger, EventId, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception, String, ParamArray Object())
  name.vb: LogWarning(ILogger, EventId, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogWarning(ILogger, EventId, string?, params object?[])
  nameWithType: LoggerExtensions.LogWarning(ILogger, EventId, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a warning log message.
  example:
  - logger.LogWarning(0, "Processing request from {Address}", address)
  syntax:
    content: public static void LogWarning(this ILogger logger, EventId eventId, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogWarning(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning*
  nameWithType.vb: LoggerExtensions.LogWarning(ILogger, EventId, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, String, ParamArray Object())
  name.vb: LogWarning(ILogger, EventId, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  id: LogWarning(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogWarning(ILogger, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogWarning(ILogger, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a warning log message.
  example:
  - logger.LogWarning(exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogWarning(this ILogger logger, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogWarning(logger As ILogger, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning*
  nameWithType.vb: LoggerExtensions.LogWarning(ILogger, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, System.Exception, String, ParamArray Object())
  name.vb: LogWarning(ILogger, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogWarning(ILogger, string?, params object?[])
  nameWithType: LoggerExtensions.LogWarning(ILogger, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a warning log message.
  example:
  - logger.LogWarning("Processing request from {Address}", address)
  syntax:
    content: public static void LogWarning(this ILogger logger, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogWarning(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning*
  nameWithType.vb: LoggerExtensions.LogWarning(ILogger, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger, String, ParamArray Object())
  name.vb: LogWarning(ILogger, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  id: LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogError(ILogger, EventId, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogError(ILogger, EventId, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes an error log message.
  example:
  - logger.LogError(0, exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogError(this ILogger logger, EventId eventId, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogError(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogError*
  nameWithType.vb: LoggerExtensions.LogError(ILogger, EventId, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception, String, ParamArray Object())
  name.vb: LogError(ILogger, EventId, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogError(ILogger, EventId, string?, params object?[])
  nameWithType: LoggerExtensions.LogError(ILogger, EventId, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes an error log message.
  example:
  - logger.LogError(0, "Processing request from {Address}", address)
  syntax:
    content: public static void LogError(this ILogger logger, EventId eventId, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogError(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogError*
  nameWithType.vb: LoggerExtensions.LogError(ILogger, EventId, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, String, ParamArray Object())
  name.vb: LogError(ILogger, EventId, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  id: LogError(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogError(ILogger, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogError(ILogger, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes an error log message.
  example:
  - logger.LogError(exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogError(this ILogger logger, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogError(logger As ILogger, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogError*
  nameWithType.vb: LoggerExtensions.LogError(ILogger, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, System.Exception, String, ParamArray Object())
  name.vb: LogError(ILogger, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogError(ILogger, string?, params object?[])
  nameWithType: LoggerExtensions.LogError(ILogger, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes an error log message.
  example:
  - logger.LogError("Processing request from {Address}", address)
  syntax:
    content: public static void LogError(this ILogger logger, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogError(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogError*
  nameWithType.vb: LoggerExtensions.LogError(ILogger, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, String, ParamArray Object())
  name.vb: LogError(ILogger, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  id: LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogCritical(ILogger, EventId, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogCritical(ILogger, EventId, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a critical log message.
  example:
  - logger.LogCritical(0, exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogCritical(this ILogger logger, EventId eventId, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogCritical(logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical*
  nameWithType.vb: LoggerExtensions.LogCritical(ILogger, EventId, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, System.Exception, String, ParamArray Object())
  name.vb: LogCritical(ILogger, EventId, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogCritical(ILogger, EventId, string?, params object?[])
  nameWithType: LoggerExtensions.LogCritical(ILogger, EventId, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a critical log message.
  example:
  - logger.LogCritical(0, "Processing request from {Address}", address)
  syntax:
    content: public static void LogCritical(this ILogger logger, EventId eventId, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogCritical(logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical*
  nameWithType.vb: LoggerExtensions.LogCritical(ILogger, EventId, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.EventId, String, ParamArray Object())
  name.vb: LogCritical(ILogger, EventId, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  id: LogCritical(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogCritical(ILogger, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.LogCritical(ILogger, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a critical log message.
  example:
  - logger.LogCritical(exception, "Error while processing request from {Address}", address)
  syntax:
    content: public static void LogCritical(this ILogger logger, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogCritical(logger As ILogger, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical*
  nameWithType.vb: LoggerExtensions.LogCritical(ILogger, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, System.Exception, String, ParamArray Object())
  name.vb: LogCritical(ILogger, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogCritical(ILogger, string?, params object?[])
  nameWithType: LoggerExtensions.LogCritical(ILogger, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a critical log message.
  example:
  - logger.LogCritical("Processing request from {Address}", address)
  syntax:
    content: public static void LogCritical(this ILogger logger, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: message
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub LogCritical(logger As ILogger, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical*
  nameWithType.vb: LoggerExtensions.LogCritical(ILogger, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger, String, ParamArray Object())
  name.vb: LogCritical(ILogger, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.String,System.Object[])
  id: Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: Log(ILogger, LogLevel, string?, params object?[])
  nameWithType: LoggerExtensions.Log(ILogger, LogLevel, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.LogLevel, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a log message at the specified log level.
  example: []
  syntax:
    content: public static void Log(this ILogger logger, LogLevel logLevel, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: Entry will be written on this level.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub Log(logger As ILogger, logLevel As LogLevel, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.Log*
  nameWithType.vb: LoggerExtensions.Log(ILogger, LogLevel, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.LogLevel, String, ParamArray Object())
  name.vb: Log(ILogger, LogLevel, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  id: Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: Log(ILogger, LogLevel, EventId, string?, params object?[])
  nameWithType: LoggerExtensions.Log(ILogger, LogLevel, EventId, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a log message at the specified log level.
  example: []
  syntax:
    content: public static void Log(this ILogger logger, LogLevel logLevel, EventId eventId, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: Entry will be written on this level.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub Log(logger As ILogger, logLevel As LogLevel, eventId As EventId, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.Log*
  nameWithType.vb: LoggerExtensions.Log(ILogger, LogLevel, EventId, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, String, ParamArray Object())
  name.vb: Log(ILogger, LogLevel, EventId, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.Exception,System.String,System.Object[])
  id: Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: Log(ILogger, LogLevel, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.Log(ILogger, LogLevel, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.LogLevel, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a log message at the specified log level.
  example: []
  syntax:
    content: public static void Log(this ILogger logger, LogLevel logLevel, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: Entry will be written on this level.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub Log(logger As ILogger, logLevel As LogLevel, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.Log*
  nameWithType.vb: LoggerExtensions.Log(ILogger, LogLevel, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.LogLevel, System.Exception, String, ParamArray Object())
  name.vb: Log(ILogger, LogLevel, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  id: Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: Log(ILogger, LogLevel, EventId, Exception?, string?, params object?[])
  nameWithType: LoggerExtensions.Log(ILogger, LogLevel, EventId, Exception?, string?, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, System.Exception?, string?, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats and writes a log message at the specified log level.
  example: []
  syntax:
    content: public static void Log(this ILogger logger, LogLevel logLevel, EventId eventId, Exception? exception, string? message, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to write to.
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: Entry will be written on this level.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event id associated with the log.
    - id: exception
      type: System.Exception
      description: The exception to log.
    - id: message
      type: System.String
      description: Format string of the log message.
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    content.vb: Public Shared Sub Log(logger As ILogger, logLevel As LogLevel, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())
  overload: Microsoft.Extensions.Logging.LoggerExtensions.Log*
  nameWithType.vb: LoggerExtensions.Log(ILogger, LogLevel, EventId, Exception, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, System.Exception, String, ParamArray Object())
  name.vb: Log(ILogger, LogLevel, EventId, Exception, String, ParamArray Object())
- uid: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  id: BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.LoggerExtensions
  langs:
  - csharp
  - vb
  name: BeginScope(ILogger, string, params object?[])
  nameWithType: LoggerExtensions.BeginScope(ILogger, string, params object?[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger, string, params object?[])
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Formats the message and creates a scope.
  example:
  - >-
    using(logger.BeginScope("Processing request from {Address}", address))

    {

    }
  syntax:
    content: public static IDisposable BeginScope(this ILogger logger, string messageFormat, params object?[] args)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> to create the scope in.
    - id: messageFormat
      type: System.String
      description: 'Format string of the log message in message template format. Example: <code>"User {User} logged in from {Address}"</code>'
    - id: args
      type: System.Object[]
      description: An object array that contains zero or more objects to format.
    return:
      type: System.IDisposable
      description: A disposable scope object. Can be null.
    content.vb: Public Shared Function BeginScope(logger As ILogger, messageFormat As String, ParamArray args As Object()) As IDisposable
  overload: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope*
  nameWithType.vb: LoggerExtensions.BeginScope(ILogger, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger, String, ParamArray Object())
  name.vb: BeginScope(ILogger, String, ParamArray Object())
references:
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug
  isExternal: true
  href: Microsoft.Extensions.Logging.LoggerExtensions.html#Microsoft_Extensions_Logging_LoggerExtensions_LogDebug_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  name: LogDebug
  nameWithType: LoggerExtensions.LogDebug
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogDebug
- uid: Microsoft.Extensions.Logging.EventId
  commentId: T:Microsoft.Extensions.Logging.EventId
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: Microsoft.Extensions.Logging.EventId.html
  name: EventId
  nameWithType: EventId
  fullName: Microsoft.Extensions.Logging.EventId
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace
  isExternal: true
  href: Microsoft.Extensions.Logging.LoggerExtensions.html#Microsoft_Extensions_Logging_LoggerExtensions_LogTrace_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  name: LogTrace
  nameWithType: LoggerExtensions.LogTrace
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogTrace
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation
  isExternal: true
  href: Microsoft.Extensions.Logging.LoggerExtensions.html#Microsoft_Extensions_Logging_LoggerExtensions_LogInformation_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  name: LogInformation
  nameWithType: LoggerExtensions.LogInformation
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogInformation
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning
  isExternal: true
  href: Microsoft.Extensions.Logging.LoggerExtensions.html#Microsoft_Extensions_Logging_LoggerExtensions_LogWarning_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  name: LogWarning
  nameWithType: LoggerExtensions.LogWarning
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogWarning
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogError
  isExternal: true
  href: Microsoft.Extensions.Logging.LoggerExtensions.html#Microsoft_Extensions_Logging_LoggerExtensions_LogError_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  name: LogError
  nameWithType: LoggerExtensions.LogError
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogError
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical
  isExternal: true
  href: Microsoft.Extensions.Logging.LoggerExtensions.html#Microsoft_Extensions_Logging_LoggerExtensions_LogCritical_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_EventId_System_Exception_System_String_System_Object___
  name: LogCritical
  nameWithType: LoggerExtensions.LogCritical
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogCritical
- uid: Microsoft.Extensions.Logging.LoggerExtensions.Log*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.Log
  isExternal: true
  href: Microsoft.Extensions.Logging.LoggerExtensions.html#Microsoft_Extensions_Logging_LoggerExtensions_Log_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_LogLevel_System_String_System_Object___
  name: Log
  nameWithType: LoggerExtensions.Log
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.Log
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope*
  commentId: Overload:Microsoft.Extensions.Logging.LoggerExtensions.BeginScope
  isExternal: true
  href: Microsoft.Extensions.Logging.LoggerExtensions.html#Microsoft_Extensions_Logging_LoggerExtensions_BeginScope_Microsoft_Extensions_Logging_ILogger_System_String_System_Object___
  name: BeginScope
  nameWithType: LoggerExtensions.BeginScope
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.BeginScope
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
