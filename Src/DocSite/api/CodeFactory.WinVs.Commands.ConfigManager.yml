### YamlMime:ManagedReference
items:
- uid: CodeFactory.WinVs.Commands.ConfigManager
  commentId: T:CodeFactory.WinVs.Commands.ConfigManager
  id: ConfigManager
  parent: CodeFactory.WinVs.Commands
  children:
  - CodeFactory.WinVs.Commands.ConfigManager.Configuration
  - CodeFactory.WinVs.Commands.ConfigManager.ConfigurationName
  - CodeFactory.WinVs.Commands.ConfigManager.CreateDefaultConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String,System.String)
  - CodeFactory.WinVs.Commands.ConfigManager.HasAutomationConfigAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String)
  - CodeFactory.WinVs.Commands.ConfigManager.HasConfiguration
  - CodeFactory.WinVs.Commands.ConfigManager.HasDefaultConfiguration
  - CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByFolderAsync(System.String,System.String,CodeFactory.WinVs.Models.ProjectSystem.VsModel,CodeFactory.WinVs.Commands.FolderLoadType)
  - CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByProjectAsync(System.String,CodeFactory.WinVs.Models.ProjectSystem.VsModel)
  - CodeFactory.WinVs.Commands.ConfigManager.LoadConfiguration(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String,CodeFactory.WinVs.IVsActions)
  - CodeFactory.WinVs.Commands.ConfigManager.RegisterCommandWithDefaultConfiguration(CodeFactory.WinVs.Commands.ConfigCommand)
  - CodeFactory.WinVs.Commands.ConfigManager.SaveConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,CodeFactory.WinVs.Commands.ConfigSolution,CodeFactory.WinVs.IVsActions,System.String)
  - CodeFactory.WinVs.Commands.ConfigManager.SetConfiguration(CodeFactory.WinVs.Commands.ConfigSolution,CodeFactory.WinVs.IVsActions)
  langs:
  - csharp
  - vb
  name: ConfigManager
  nameWithType: ConfigManager
  fullName: CodeFactory.WinVs.Commands.ConfigManager
  type: Class
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Managers the loading and saving of solution configurations.
  example: []
  syntax:
    content: public static class ConfigManager
    content.vb: Public Module ConfigManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CodeFactory.WinVs.Commands.ConfigManager.SaveConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,CodeFactory.WinVs.Commands.ConfigSolution,CodeFactory.WinVs.IVsActions,System.String)
  commentId: M:CodeFactory.WinVs.Commands.ConfigManager.SaveConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,CodeFactory.WinVs.Commands.ConfigSolution,CodeFactory.WinVs.IVsActions,System.String)
  id: SaveConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,CodeFactory.WinVs.Commands.ConfigSolution,CodeFactory.WinVs.IVsActions,System.String)
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: SaveConfigurationAsync(VsSolution, ConfigSolution, IVsActions, string)
  nameWithType: ConfigManager.SaveConfigurationAsync(VsSolution, ConfigSolution, IVsActions, string)
  fullName: CodeFactory.WinVs.Commands.ConfigManager.SaveConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution, CodeFactory.WinVs.Commands.ConfigSolution, CodeFactory.WinVs.IVsActions, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Saves a ADK configuration to a target directory.
  example: []
  syntax:
    content: public static Task SaveConfigurationAsync(VsSolution solution, ConfigSolution configuration, IVsActions actions, string fileName)
    parameters:
    - id: solution
      type: CodeFactory.WinVs.Models.ProjectSystem.VsSolution
      description: The CodeFactory solution model to save the configuration to.
    - id: configuration
      type: CodeFactory.WinVs.Commands.ConfigSolution
      description: The solution configuration to be saved to disk.
    - id: actions
      type: CodeFactory.WinVs.IVsActions
      description: The Visual Studio automation for CodeFactory.
    - id: fileName
      type: System.String
      description: The file name of the configuration file without the extension.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SaveConfigurationAsync(solution As VsSolution, configuration As ConfigSolution, actions As IVsActions, fileName As String) As Task
  overload: CodeFactory.WinVs.Commands.ConfigManager.SaveConfigurationAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Raised if provided parameters are null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Raised if the file path is not provided.
  - type: CodeFactory.CodeFactoryException
    commentId: T:CodeFactory.CodeFactoryException
    description: Raised if the save cannot be completed.
  nameWithType.vb: ConfigManager.SaveConfigurationAsync(VsSolution, ConfigSolution, IVsActions, String)
  fullName.vb: CodeFactory.WinVs.Commands.ConfigManager.SaveConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution, CodeFactory.WinVs.Commands.ConfigSolution, CodeFactory.WinVs.IVsActions, String)
  name.vb: SaveConfigurationAsync(VsSolution, ConfigSolution, IVsActions, String)
- uid: CodeFactory.WinVs.Commands.ConfigManager.LoadConfiguration(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String,CodeFactory.WinVs.IVsActions)
  commentId: M:CodeFactory.WinVs.Commands.ConfigManager.LoadConfiguration(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String,CodeFactory.WinVs.IVsActions)
  id: LoadConfiguration(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String,CodeFactory.WinVs.IVsActions)
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: LoadConfiguration(VsSolution, string, IVsActions)
  nameWithType: ConfigManager.LoadConfiguration(VsSolution, string, IVsActions)
  fullName: CodeFactory.WinVs.Commands.ConfigManager.LoadConfiguration(CodeFactory.WinVs.Models.ProjectSystem.VsSolution, string, CodeFactory.WinVs.IVsActions)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Loads a ADK configuration from a target configuration file.
  example: []
  syntax:
    content: public static ConfigSolution LoadConfiguration(VsSolution solution, string fileName, IVsActions actions)
    parameters:
    - id: solution
      type: CodeFactory.WinVs.Models.ProjectSystem.VsSolution
      description: The solution model used to locate the configuration to be loaded.
    - id: fileName
      type: System.String
      description: The file name without the extension.
    - id: actions
      type: CodeFactory.WinVs.IVsActions
      description: The Visual Studio automation for CodeFactory.
    return:
      type: CodeFactory.WinVs.Commands.ConfigSolution
      description: Loaded solution configuration.
    content.vb: Public Shared Function LoadConfiguration(solution As VsSolution, fileName As String, actions As IVsActions) As ConfigSolution
  overload: CodeFactory.WinVs.Commands.ConfigManager.LoadConfiguration*
  nameWithType.vb: ConfigManager.LoadConfiguration(VsSolution, String, IVsActions)
  fullName.vb: CodeFactory.WinVs.Commands.ConfigManager.LoadConfiguration(CodeFactory.WinVs.Models.ProjectSystem.VsSolution, String, CodeFactory.WinVs.IVsActions)
  name.vb: LoadConfiguration(VsSolution, String, IVsActions)
- uid: CodeFactory.WinVs.Commands.ConfigManager.SetConfiguration(CodeFactory.WinVs.Commands.ConfigSolution,CodeFactory.WinVs.IVsActions)
  commentId: M:CodeFactory.WinVs.Commands.ConfigManager.SetConfiguration(CodeFactory.WinVs.Commands.ConfigSolution,CodeFactory.WinVs.IVsActions)
  id: SetConfiguration(CodeFactory.WinVs.Commands.ConfigSolution,CodeFactory.WinVs.IVsActions)
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: SetConfiguration(ConfigSolution, IVsActions)
  nameWithType: ConfigManager.SetConfiguration(ConfigSolution, IVsActions)
  fullName: CodeFactory.WinVs.Commands.ConfigManager.SetConfiguration(CodeFactory.WinVs.Commands.ConfigSolution, CodeFactory.WinVs.IVsActions)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Register a loaded configuration with the configuration manager.
  example: []
  syntax:
    content: public static void SetConfiguration(ConfigSolution configuration, IVsActions actions)
    parameters:
    - id: configuration
      type: CodeFactory.WinVs.Commands.ConfigSolution
      description: The loaded configuration.
    - id: actions
      type: CodeFactory.WinVs.IVsActions
      description: The Visual Studio automation for CodeFactory.
    content.vb: Public Shared Sub SetConfiguration(configuration As ConfigSolution, actions As IVsActions)
  overload: CodeFactory.WinVs.Commands.ConfigManager.SetConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
- uid: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByProjectAsync(System.String,CodeFactory.WinVs.Models.ProjectSystem.VsModel)
  commentId: M:CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByProjectAsync(System.String,CodeFactory.WinVs.Models.ProjectSystem.VsModel)
  id: LoadCommandByProjectAsync(System.String,CodeFactory.WinVs.Models.ProjectSystem.VsModel)
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: LoadCommandByProjectAsync(string, VsModel)
  nameWithType: ConfigManager.LoadCommandByProjectAsync(string, VsModel)
  fullName: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByProjectAsync(string, CodeFactory.WinVs.Models.ProjectSystem.VsModel)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Identifies the command source for the executing command where the command is expected to execute from a target project.
  example: []
  syntax:
    content: public static Task<ConfigCommand> LoadCommandByProjectAsync(string commandType, VsModel commandResult)
    parameters:
    - id: commandType
      type: System.String
      description: The fully qualified name of the command type to evaluated.
    - id: commandResult
      type: CodeFactory.WinVs.Models.ProjectSystem.VsModel
      description: The loaded model from the requesting command to load the command source.
    return:
      type: System.Threading.Tasks.Task{CodeFactory.WinVs.Commands.ConfigCommand}
      description: The command source that meetings the criteria or null if no command source meet the criteria.
    content.vb: Public Shared Function LoadCommandByProjectAsync(commandType As String, commandResult As VsModel) As Task(Of ConfigCommand)
  overload: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByProjectAsync*
  nameWithType.vb: ConfigManager.LoadCommandByProjectAsync(String, VsModel)
  fullName.vb: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByProjectAsync(String, CodeFactory.WinVs.Models.ProjectSystem.VsModel)
  name.vb: LoadCommandByProjectAsync(String, VsModel)
- uid: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByFolderAsync(System.String,System.String,CodeFactory.WinVs.Models.ProjectSystem.VsModel,CodeFactory.WinVs.Commands.FolderLoadType)
  commentId: M:CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByFolderAsync(System.String,System.String,CodeFactory.WinVs.Models.ProjectSystem.VsModel,CodeFactory.WinVs.Commands.FolderLoadType)
  id: LoadCommandByFolderAsync(System.String,System.String,CodeFactory.WinVs.Models.ProjectSystem.VsModel,CodeFactory.WinVs.Commands.FolderLoadType)
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: LoadCommandByFolderAsync(string, string, VsModel, FolderLoadType)
  nameWithType: ConfigManager.LoadCommandByFolderAsync(string, string, VsModel, FolderLoadType)
  fullName: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByFolderAsync(string, string, CodeFactory.WinVs.Models.ProjectSystem.VsModel, CodeFactory.WinVs.Commands.FolderLoadType)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Identifies the command source for the executing command where the command is expected to execute from a project folder.
  example: []
  syntax:
    content: public static Task<ConfigCommand> LoadCommandByFolderAsync(string commandType, string projectFolder, VsModel commandResult, FolderLoadType loadType = FolderLoadType.TargetFolderOnly)
    parameters:
    - id: commandType
      type: System.String
      description: The fully qualified name of the command type to evaluated.
    - id: projectFolder
      type: System.String
      description: the name of the Project Source project folder to be loaded.
    - id: commandResult
      type: CodeFactory.WinVs.Models.ProjectSystem.VsModel
      description: The loaded model from the requesting command to load the command source.
    - id: loadType
      type: CodeFactory.WinVs.Commands.FolderLoadType
      description: The type of evaluation that should be performed.
    return:
      type: System.Threading.Tasks.Task{CodeFactory.WinVs.Commands.ConfigCommand}
      description: The command source that meetings the criteria or null if no command source meet the criteria.
    content.vb: Public Shared Function LoadCommandByFolderAsync(commandType As String, projectFolder As String, commandResult As VsModel, loadType As FolderLoadType = FolderLoadType.TargetFolderOnly) As Task(Of ConfigCommand)
  overload: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByFolderAsync*
  nameWithType.vb: ConfigManager.LoadCommandByFolderAsync(String, String, VsModel, FolderLoadType)
  fullName.vb: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByFolderAsync(String, String, CodeFactory.WinVs.Models.ProjectSystem.VsModel, CodeFactory.WinVs.Commands.FolderLoadType)
  name.vb: LoadCommandByFolderAsync(String, String, VsModel, FolderLoadType)
- uid: CodeFactory.WinVs.Commands.ConfigManager.CreateDefaultConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String,System.String)
  commentId: M:CodeFactory.WinVs.Commands.ConfigManager.CreateDefaultConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String,System.String)
  id: CreateDefaultConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String,System.String)
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: CreateDefaultConfigurationAsync(VsSolution, string, string)
  nameWithType: ConfigManager.CreateDefaultConfigurationAsync(VsSolution, string, string)
  fullName: CodeFactory.WinVs.Commands.ConfigManager.CreateDefaultConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution, string, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Will check to see if a default configuration exists. if it does not will create a new default configuration.
  example: []
  syntax:
    content: public static Task CreateDefaultConfigurationAsync(VsSolution solution, string configName, string fileName)
    parameters:
    - id: solution
      type: CodeFactory.WinVs.Models.ProjectSystem.VsSolution
      description: The solution model from code factory.
    - id: configName
      type: System.String
      description: The name assigned to configuration.
    - id: fileName
      type: System.String
      description: The file name without the extension.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function CreateDefaultConfigurationAsync(solution As VsSolution, configName As String, fileName As String) As Task
  overload: CodeFactory.WinVs.Commands.ConfigManager.CreateDefaultConfigurationAsync*
  nameWithType.vb: ConfigManager.CreateDefaultConfigurationAsync(VsSolution, String, String)
  fullName.vb: CodeFactory.WinVs.Commands.ConfigManager.CreateDefaultConfigurationAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution, String, String)
  name.vb: CreateDefaultConfigurationAsync(VsSolution, String, String)
- uid: CodeFactory.WinVs.Commands.ConfigManager.HasAutomationConfigAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String)
  commentId: M:CodeFactory.WinVs.Commands.ConfigManager.HasAutomationConfigAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String)
  id: HasAutomationConfigAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution,System.String)
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: HasAutomationConfigAsync(VsSolution, string)
  nameWithType: ConfigManager.HasAutomationConfigAsync(VsSolution, string)
  fullName: CodeFactory.WinVs.Commands.ConfigManager.HasAutomationConfigAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution, string)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Determines if a ADK configuration is stored in the solution.
  example: []
  syntax:
    content: public static Task<bool> HasAutomationConfigAsync(VsSolution solution, string fileName)
    parameters:
    - id: solution
      type: CodeFactory.WinVs.Models.ProjectSystem.VsSolution
      description: Solution model hosting the configuration model.
    - id: fileName
      type: System.String
      description: The file name without the extension.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True file exists or false if not.
    content.vb: Public Shared Function HasAutomationConfigAsync(solution As VsSolution, fileName As String) As Task(Of Boolean)
  overload: CodeFactory.WinVs.Commands.ConfigManager.HasAutomationConfigAsync*
  nameWithType.vb: ConfigManager.HasAutomationConfigAsync(VsSolution, String)
  fullName.vb: CodeFactory.WinVs.Commands.ConfigManager.HasAutomationConfigAsync(CodeFactory.WinVs.Models.ProjectSystem.VsSolution, String)
  name.vb: HasAutomationConfigAsync(VsSolution, String)
- uid: CodeFactory.WinVs.Commands.ConfigManager.RegisterCommandWithDefaultConfiguration(CodeFactory.WinVs.Commands.ConfigCommand)
  commentId: M:CodeFactory.WinVs.Commands.ConfigManager.RegisterCommandWithDefaultConfiguration(CodeFactory.WinVs.Commands.ConfigCommand)
  id: RegisterCommandWithDefaultConfiguration(CodeFactory.WinVs.Commands.ConfigCommand)
  isExtensionMethod: true
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: RegisterCommandWithDefaultConfiguration(ConfigCommand)
  nameWithType: ConfigManager.RegisterCommandWithDefaultConfiguration(ConfigCommand)
  fullName: CodeFactory.WinVs.Commands.ConfigManager.RegisterCommandWithDefaultConfiguration(CodeFactory.WinVs.Commands.ConfigCommand)
  type: Method
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Registers a command configuration with the configuration manager to be used when building a default configuration.
  example: []
  syntax:
    content: public static void RegisterCommandWithDefaultConfiguration(this ConfigCommand command)
    parameters:
    - id: command
      type: CodeFactory.WinVs.Commands.ConfigCommand
      description: Command configuration to be registered
    content.vb: Public Shared Sub RegisterCommandWithDefaultConfiguration(command As ConfigCommand)
  overload: CodeFactory.WinVs.Commands.ConfigManager.RegisterCommandWithDefaultConfiguration*
- uid: CodeFactory.WinVs.Commands.ConfigManager.ConfigurationName
  commentId: P:CodeFactory.WinVs.Commands.ConfigManager.ConfigurationName
  id: ConfigurationName
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: ConfigurationName
  nameWithType: ConfigManager.ConfigurationName
  fullName: CodeFactory.WinVs.Commands.ConfigManager.ConfigurationName
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: The name of the loaded configuration. Will be null if the configuration is not loaded.
  example: []
  syntax:
    content: public static string ConfigurationName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ConfigurationName As String
  overload: CodeFactory.WinVs.Commands.ConfigManager.ConfigurationName*
- uid: CodeFactory.WinVs.Commands.ConfigManager.Configuration
  commentId: P:CodeFactory.WinVs.Commands.ConfigManager.Configuration
  id: Configuration
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: ConfigManager.Configuration
  fullName: CodeFactory.WinVs.Commands.ConfigManager.Configuration
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: The configuration loaded into the configuration manager, will be null if not loaded.
  example: []
  syntax:
    content: public static ConfigSolution Configuration { get; }
    parameters: []
    return:
      type: CodeFactory.WinVs.Commands.ConfigSolution
    content.vb: Public Shared ReadOnly Property Configuration As ConfigSolution
  overload: CodeFactory.WinVs.Commands.ConfigManager.Configuration*
- uid: CodeFactory.WinVs.Commands.ConfigManager.HasConfiguration
  commentId: P:CodeFactory.WinVs.Commands.ConfigManager.HasConfiguration
  id: HasConfiguration
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: HasConfiguration
  nameWithType: ConfigManager.HasConfiguration
  fullName: CodeFactory.WinVs.Commands.ConfigManager.HasConfiguration
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Flag that determines if a configuration has been loaded.
  example: []
  syntax:
    content: public static bool HasConfiguration { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property HasConfiguration As Boolean
  overload: CodeFactory.WinVs.Commands.ConfigManager.HasConfiguration*
- uid: CodeFactory.WinVs.Commands.ConfigManager.HasDefaultConfiguration
  commentId: P:CodeFactory.WinVs.Commands.ConfigManager.HasDefaultConfiguration
  id: HasDefaultConfiguration
  parent: CodeFactory.WinVs.Commands.ConfigManager
  langs:
  - csharp
  - vb
  name: HasDefaultConfiguration
  nameWithType: ConfigManager.HasDefaultConfiguration
  fullName: CodeFactory.WinVs.Commands.ConfigManager.HasDefaultConfiguration
  type: Property
  source:
    href: https://github.com/CodeFactoryLLC/CodeFactoryForWindows/blob/e63c05962945f61f2329e19d324f24a768806f18/Src/CodeFactoryForWindows/CodeFactory.WinVs/Commands/ConfigManager.cs
  assemblies:
  - CodeFactory.WinVs
  namespace: CodeFactory.WinVs.Commands
  summary: Flag that determines if a default configuration has been loaded.
  example: []
  syntax:
    content: public static bool HasDefaultConfiguration { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property HasDefaultConfiguration As Boolean
  overload: CodeFactory.WinVs.Commands.ConfigManager.HasDefaultConfiguration*
references:
- uid: CodeFactory.WinVs.Commands
  commentId: N:CodeFactory.WinVs.Commands
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Commands
  nameWithType: CodeFactory.WinVs.Commands
  fullName: CodeFactory.WinVs.Commands
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Commands
    name: Commands
    isExternal: true
    href: CodeFactory.WinVs.Commands.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Commands
    name: Commands
    isExternal: true
    href: CodeFactory.WinVs.Commands.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: CodeFactory.CodeFactoryException
  commentId: T:CodeFactory.CodeFactoryException
  parent: CodeFactory
  isExternal: true
  href: CodeFactory.CodeFactoryException.html
  name: CodeFactoryException
  nameWithType: CodeFactoryException
  fullName: CodeFactory.CodeFactoryException
- uid: CodeFactory.WinVs.Commands.ConfigManager.SaveConfigurationAsync*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.SaveConfigurationAsync
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_SaveConfigurationAsync_CodeFactory_WinVs_Models_ProjectSystem_VsSolution_CodeFactory_WinVs_Commands_ConfigSolution_CodeFactory_WinVs_IVsActions_System_String_
  name: SaveConfigurationAsync
  nameWithType: ConfigManager.SaveConfigurationAsync
  fullName: CodeFactory.WinVs.Commands.ConfigManager.SaveConfigurationAsync
- uid: CodeFactory.WinVs.Models.ProjectSystem.VsSolution
  commentId: T:CodeFactory.WinVs.Models.ProjectSystem.VsSolution
  parent: CodeFactory.WinVs.Models.ProjectSystem
  isExternal: true
  href: CodeFactory.WinVs.Models.ProjectSystem.VsSolution.html
  name: VsSolution
  nameWithType: VsSolution
  fullName: CodeFactory.WinVs.Models.ProjectSystem.VsSolution
- uid: CodeFactory.WinVs.Commands.ConfigSolution
  commentId: T:CodeFactory.WinVs.Commands.ConfigSolution
  parent: CodeFactory.WinVs.Commands
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigSolution.html
  name: ConfigSolution
  nameWithType: ConfigSolution
  fullName: CodeFactory.WinVs.Commands.ConfigSolution
- uid: CodeFactory.WinVs.IVsActions
  commentId: T:CodeFactory.WinVs.IVsActions
  parent: CodeFactory.WinVs
  isExternal: true
  href: CodeFactory.WinVs.IVsActions.html
  name: IVsActions
  nameWithType: IVsActions
  fullName: CodeFactory.WinVs.IVsActions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: CodeFactory
  commentId: N:CodeFactory
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory
  nameWithType: CodeFactory
  fullName: CodeFactory
- uid: CodeFactory.WinVs.Models.ProjectSystem
  commentId: N:CodeFactory.WinVs.Models.ProjectSystem
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs.Models.ProjectSystem
  nameWithType: CodeFactory.WinVs.Models.ProjectSystem
  fullName: CodeFactory.WinVs.Models.ProjectSystem
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.ProjectSystem
    name: ProjectSystem
    isExternal: true
    href: CodeFactory.WinVs.Models.ProjectSystem.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  - name: .
  - uid: CodeFactory.WinVs.Models
    name: Models
    isExternal: true
    href: CodeFactory.WinVs.Models.html
  - name: .
  - uid: CodeFactory.WinVs.Models.ProjectSystem
    name: ProjectSystem
    isExternal: true
    href: CodeFactory.WinVs.Models.ProjectSystem.html
- uid: CodeFactory.WinVs
  commentId: N:CodeFactory.WinVs
  isExternal: true
  href: CodeFactory.html
  name: CodeFactory.WinVs
  nameWithType: CodeFactory.WinVs
  fullName: CodeFactory.WinVs
  spec.csharp:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
  spec.vb:
  - uid: CodeFactory
    name: CodeFactory
    isExternal: true
    href: CodeFactory.html
  - name: .
  - uid: CodeFactory.WinVs
    name: WinVs
    isExternal: true
    href: CodeFactory.WinVs.html
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: CodeFactory.WinVs.Commands.ConfigManager.LoadConfiguration*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.LoadConfiguration
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_LoadConfiguration_CodeFactory_WinVs_Models_ProjectSystem_VsSolution_System_String_CodeFactory_WinVs_IVsActions_
  name: LoadConfiguration
  nameWithType: ConfigManager.LoadConfiguration
  fullName: CodeFactory.WinVs.Commands.ConfigManager.LoadConfiguration
- uid: CodeFactory.WinVs.Commands.ConfigManager.SetConfiguration*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.SetConfiguration
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_SetConfiguration_CodeFactory_WinVs_Commands_ConfigSolution_CodeFactory_WinVs_IVsActions_
  name: SetConfiguration
  nameWithType: ConfigManager.SetConfiguration
  fullName: CodeFactory.WinVs.Commands.ConfigManager.SetConfiguration
- uid: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByProjectAsync*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByProjectAsync
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_LoadCommandByProjectAsync_System_String_CodeFactory_WinVs_Models_ProjectSystem_VsModel_
  name: LoadCommandByProjectAsync
  nameWithType: ConfigManager.LoadCommandByProjectAsync
  fullName: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByProjectAsync
- uid: CodeFactory.WinVs.Models.ProjectSystem.VsModel
  commentId: T:CodeFactory.WinVs.Models.ProjectSystem.VsModel
  parent: CodeFactory.WinVs.Models.ProjectSystem
  isExternal: true
  href: CodeFactory.WinVs.Models.ProjectSystem.VsModel.html
  name: VsModel
  nameWithType: VsModel
  fullName: CodeFactory.WinVs.Models.ProjectSystem.VsModel
- uid: System.Threading.Tasks.Task{CodeFactory.WinVs.Commands.ConfigCommand}
  commentId: T:System.Threading.Tasks.Task{CodeFactory.WinVs.Commands.ConfigCommand}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ConfigCommand>
  nameWithType: Task<ConfigCommand>
  fullName: System.Threading.Tasks.Task<CodeFactory.WinVs.Commands.ConfigCommand>
  nameWithType.vb: Task(Of ConfigCommand)
  fullName.vb: System.Threading.Tasks.Task(Of CodeFactory.WinVs.Commands.ConfigCommand)
  name.vb: Task(Of ConfigCommand)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: CodeFactory.WinVs.Commands.ConfigCommand
    name: ConfigCommand
    isExternal: true
    href: CodeFactory.WinVs.Commands.ConfigCommand.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeFactory.WinVs.Commands.ConfigCommand
    name: ConfigCommand
    isExternal: true
    href: CodeFactory.WinVs.Commands.ConfigCommand.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByFolderAsync*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByFolderAsync
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_LoadCommandByFolderAsync_System_String_System_String_CodeFactory_WinVs_Models_ProjectSystem_VsModel_CodeFactory_WinVs_Commands_FolderLoadType_
  name: LoadCommandByFolderAsync
  nameWithType: ConfigManager.LoadCommandByFolderAsync
  fullName: CodeFactory.WinVs.Commands.ConfigManager.LoadCommandByFolderAsync
- uid: CodeFactory.WinVs.Commands.FolderLoadType
  commentId: T:CodeFactory.WinVs.Commands.FolderLoadType
  parent: CodeFactory.WinVs.Commands
  isExternal: true
  href: CodeFactory.WinVs.Commands.FolderLoadType.html
  name: FolderLoadType
  nameWithType: FolderLoadType
  fullName: CodeFactory.WinVs.Commands.FolderLoadType
- uid: CodeFactory.WinVs.Commands.ConfigManager.CreateDefaultConfigurationAsync*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.CreateDefaultConfigurationAsync
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_CreateDefaultConfigurationAsync_CodeFactory_WinVs_Models_ProjectSystem_VsSolution_System_String_System_String_
  name: CreateDefaultConfigurationAsync
  nameWithType: ConfigManager.CreateDefaultConfigurationAsync
  fullName: CodeFactory.WinVs.Commands.ConfigManager.CreateDefaultConfigurationAsync
- uid: CodeFactory.WinVs.Commands.ConfigManager.HasAutomationConfigAsync*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.HasAutomationConfigAsync
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_HasAutomationConfigAsync_CodeFactory_WinVs_Models_ProjectSystem_VsSolution_System_String_
  name: HasAutomationConfigAsync
  nameWithType: ConfigManager.HasAutomationConfigAsync
  fullName: CodeFactory.WinVs.Commands.ConfigManager.HasAutomationConfigAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: CodeFactory.WinVs.Commands.ConfigManager.RegisterCommandWithDefaultConfiguration*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.RegisterCommandWithDefaultConfiguration
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_RegisterCommandWithDefaultConfiguration_CodeFactory_WinVs_Commands_ConfigCommand_
  name: RegisterCommandWithDefaultConfiguration
  nameWithType: ConfigManager.RegisterCommandWithDefaultConfiguration
  fullName: CodeFactory.WinVs.Commands.ConfigManager.RegisterCommandWithDefaultConfiguration
- uid: CodeFactory.WinVs.Commands.ConfigCommand
  commentId: T:CodeFactory.WinVs.Commands.ConfigCommand
  parent: CodeFactory.WinVs.Commands
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigCommand.html
  name: ConfigCommand
  nameWithType: ConfigCommand
  fullName: CodeFactory.WinVs.Commands.ConfigCommand
- uid: CodeFactory.WinVs.Commands.ConfigManager.ConfigurationName*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.ConfigurationName
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_ConfigurationName
  name: ConfigurationName
  nameWithType: ConfigManager.ConfigurationName
  fullName: CodeFactory.WinVs.Commands.ConfigManager.ConfigurationName
- uid: CodeFactory.WinVs.Commands.ConfigManager.Configuration*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.Configuration
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_Configuration
  name: Configuration
  nameWithType: ConfigManager.Configuration
  fullName: CodeFactory.WinVs.Commands.ConfigManager.Configuration
- uid: CodeFactory.WinVs.Commands.ConfigManager.HasConfiguration*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.HasConfiguration
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_HasConfiguration
  name: HasConfiguration
  nameWithType: ConfigManager.HasConfiguration
  fullName: CodeFactory.WinVs.Commands.ConfigManager.HasConfiguration
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CodeFactory.WinVs.Commands.ConfigManager.HasDefaultConfiguration*
  commentId: Overload:CodeFactory.WinVs.Commands.ConfigManager.HasDefaultConfiguration
  isExternal: true
  href: CodeFactory.WinVs.Commands.ConfigManager.html#CodeFactory_WinVs_Commands_ConfigManager_HasDefaultConfiguration
  name: HasDefaultConfiguration
  nameWithType: ConfigManager.HasDefaultConfiguration
  fullName: CodeFactory.WinVs.Commands.ConfigManager.HasDefaultConfiguration
