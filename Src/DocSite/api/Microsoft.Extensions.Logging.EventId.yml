### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.EventId
  commentId: T:Microsoft.Extensions.Logging.EventId
  id: EventId
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.EventId.#ctor(System.Int32,System.String)
  - Microsoft.Extensions.Logging.EventId.Equals(Microsoft.Extensions.Logging.EventId)
  - Microsoft.Extensions.Logging.EventId.Equals(System.Object)
  - Microsoft.Extensions.Logging.EventId.GetHashCode
  - Microsoft.Extensions.Logging.EventId.Id
  - Microsoft.Extensions.Logging.EventId.Name
  - Microsoft.Extensions.Logging.EventId.ToString
  - Microsoft.Extensions.Logging.EventId.op_Equality(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.EventId)
  - Microsoft.Extensions.Logging.EventId.op_Implicit(System.Int32)~Microsoft.Extensions.Logging.EventId
  - Microsoft.Extensions.Logging.EventId.op_Inequality(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.EventId)
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: EventId
  fullName: Microsoft.Extensions.Logging.EventId
  type: Struct
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Identifies a logging event. The primary identifier is the "Id" property, with the "Name" property providing a short description of this type of event.
  example: []
  syntax:
    content: public readonly struct EventId
    content.vb: Public Structure EventId
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Microsoft.Extensions.Logging.EventId.op_Implicit(System.Int32)~Microsoft.Extensions.Logging.EventId
  commentId: M:Microsoft.Extensions.Logging.EventId.op_Implicit(System.Int32)~Microsoft.Extensions.Logging.EventId
  id: op_Implicit(System.Int32)~Microsoft.Extensions.Logging.EventId
  parent: Microsoft.Extensions.Logging.EventId
  langs:
  - csharp
  - vb
  name: implicit operator EventId(int)
  nameWithType: EventId.implicit operator EventId(int)
  fullName: Microsoft.Extensions.Logging.EventId.implicit operator Microsoft.Extensions.Logging.EventId(int)
  type: Operator
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Implicitly creates an EventId from the given <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static implicit operator EventId(int i)
    parameters:
    - id: i
      type: System.Int32
      description: The <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> to convert to an EventId.
    return:
      type: Microsoft.Extensions.Logging.EventId
    content.vb: Public Shared Widening Operator CType(i As Integer) As EventId
  overload: Microsoft.Extensions.Logging.EventId.op_Implicit*
  nameWithType.vb: EventId.CType(Integer)
  fullName.vb: Microsoft.Extensions.Logging.EventId.CType(Integer)
  name.vb: CType(Integer)
- uid: Microsoft.Extensions.Logging.EventId.op_Equality(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.EventId)
  commentId: M:Microsoft.Extensions.Logging.EventId.op_Equality(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.EventId)
  id: op_Equality(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.EventId)
  parent: Microsoft.Extensions.Logging.EventId
  langs:
  - csharp
  - vb
  name: operator ==(EventId, EventId)
  nameWithType: EventId.operator ==(EventId, EventId)
  fullName: Microsoft.Extensions.Logging.EventId.operator ==(Microsoft.Extensions.Logging.EventId, Microsoft.Extensions.Logging.EventId)
  type: Operator
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Checks if two specified <xref href="Microsoft.Extensions.Logging.EventId" data-throw-if-not-resolved="false"></xref> instances have the same value. They are equal if they have the same Id.
  example: []
  syntax:
    content: public static bool operator ==(EventId left, EventId right)
    parameters:
    - id: left
      type: Microsoft.Extensions.Logging.EventId
      description: The first <xref href="Microsoft.Extensions.Logging.EventId" data-throw-if-not-resolved="false"></xref>.
    - id: right
      type: Microsoft.Extensions.Logging.EventId
      description: The second <xref href="Microsoft.Extensions.Logging.EventId" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the objects are equal.
    content.vb: Public Shared Operator =(left As EventId, right As EventId) As Boolean
  overload: Microsoft.Extensions.Logging.EventId.op_Equality*
  nameWithType.vb: EventId.=(EventId, EventId)
  fullName.vb: Microsoft.Extensions.Logging.EventId.=(Microsoft.Extensions.Logging.EventId, Microsoft.Extensions.Logging.EventId)
  name.vb: =(EventId, EventId)
- uid: Microsoft.Extensions.Logging.EventId.op_Inequality(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.EventId)
  commentId: M:Microsoft.Extensions.Logging.EventId.op_Inequality(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.EventId)
  id: op_Inequality(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.EventId)
  parent: Microsoft.Extensions.Logging.EventId
  langs:
  - csharp
  - vb
  name: operator !=(EventId, EventId)
  nameWithType: EventId.operator !=(EventId, EventId)
  fullName: Microsoft.Extensions.Logging.EventId.operator !=(Microsoft.Extensions.Logging.EventId, Microsoft.Extensions.Logging.EventId)
  type: Operator
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Checks if two specified <xref href="Microsoft.Extensions.Logging.EventId" data-throw-if-not-resolved="false"></xref> instances have different values.
  example: []
  syntax:
    content: public static bool operator !=(EventId left, EventId right)
    parameters:
    - id: left
      type: Microsoft.Extensions.Logging.EventId
      description: The first <xref href="Microsoft.Extensions.Logging.EventId" data-throw-if-not-resolved="false"></xref>.
    - id: right
      type: Microsoft.Extensions.Logging.EventId
      description: The second <xref href="Microsoft.Extensions.Logging.EventId" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the objects are not equal.
    content.vb: Public Shared Operator <>(left As EventId, right As EventId) As Boolean
  overload: Microsoft.Extensions.Logging.EventId.op_Inequality*
  nameWithType.vb: EventId.<>(EventId, EventId)
  fullName.vb: Microsoft.Extensions.Logging.EventId.<>(Microsoft.Extensions.Logging.EventId, Microsoft.Extensions.Logging.EventId)
  name.vb: <>(EventId, EventId)
- uid: Microsoft.Extensions.Logging.EventId.#ctor(System.Int32,System.String)
  commentId: M:Microsoft.Extensions.Logging.EventId.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: Microsoft.Extensions.Logging.EventId
  langs:
  - csharp
  - vb
  name: EventId(int, string?)
  nameWithType: EventId.EventId(int, string?)
  fullName: Microsoft.Extensions.Logging.EventId.EventId(int, string?)
  type: Constructor
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Initializes an instance of the <xref href="Microsoft.Extensions.Logging.EventId" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public EventId(int id, string? name = null)
    parameters:
    - id: id
      type: System.Int32
      description: The numeric identifier for this event.
    - id: name
      type: System.String
      description: The name of this event.
    content.vb: Public Sub New(id As Integer, name As String = Nothing)
  overload: Microsoft.Extensions.Logging.EventId.#ctor*
  nameWithType.vb: EventId.New(Integer, String)
  fullName.vb: Microsoft.Extensions.Logging.EventId.New(Integer, String)
  name.vb: New(Integer, String)
- uid: Microsoft.Extensions.Logging.EventId.ToString
  commentId: M:Microsoft.Extensions.Logging.EventId.ToString
  id: ToString
  parent: Microsoft.Extensions.Logging.EventId
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EventId.ToString()
  fullName: Microsoft.Extensions.Logging.EventId.ToString()
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Microsoft.Extensions.Logging.EventId.ToString*
- uid: Microsoft.Extensions.Logging.EventId.Equals(Microsoft.Extensions.Logging.EventId)
  commentId: M:Microsoft.Extensions.Logging.EventId.Equals(Microsoft.Extensions.Logging.EventId)
  id: Equals(Microsoft.Extensions.Logging.EventId)
  parent: Microsoft.Extensions.Logging.EventId
  langs:
  - csharp
  - vb
  name: Equals(EventId)
  nameWithType: EventId.Equals(EventId)
  fullName: Microsoft.Extensions.Logging.EventId.Equals(Microsoft.Extensions.Logging.EventId)
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Indicates whether the current object is equal to another object of the same type. Two events are equal if they have the same id.
  example: []
  syntax:
    content: public bool Equals(EventId other)
    parameters:
    - id: other
      type: Microsoft.Extensions.Logging.EventId
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the other parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As EventId) As Boolean
  overload: Microsoft.Extensions.Logging.EventId.Equals*
- uid: Microsoft.Extensions.Logging.EventId.Equals(System.Object)
  commentId: M:Microsoft.Extensions.Logging.EventId.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Extensions.Logging.EventId
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: EventId.Equals(object?)
  fullName: Microsoft.Extensions.Logging.EventId.Equals(object?)
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.Extensions.Logging.EventId.Equals*
  nameWithType.vb: EventId.Equals(Object)
  fullName.vb: Microsoft.Extensions.Logging.EventId.Equals(Object)
  name.vb: Equals(Object)
- uid: Microsoft.Extensions.Logging.EventId.GetHashCode
  commentId: M:Microsoft.Extensions.Logging.EventId.GetHashCode
  id: GetHashCode
  parent: Microsoft.Extensions.Logging.EventId
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: EventId.GetHashCode()
  fullName: Microsoft.Extensions.Logging.EventId.GetHashCode()
  type: Method
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.Extensions.Logging.EventId.GetHashCode*
- uid: Microsoft.Extensions.Logging.EventId.Id
  commentId: P:Microsoft.Extensions.Logging.EventId.Id
  id: Id
  parent: Microsoft.Extensions.Logging.EventId
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: EventId.Id
  fullName: Microsoft.Extensions.Logging.EventId.Id
  type: Property
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Gets the numeric identifier for this event.
  example: []
  syntax:
    content: public int Id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Id As Integer
  overload: Microsoft.Extensions.Logging.EventId.Id*
- uid: Microsoft.Extensions.Logging.EventId.Name
  commentId: P:Microsoft.Extensions.Logging.EventId.Name
  id: Name
  parent: Microsoft.Extensions.Logging.EventId
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EventId.Name
  fullName: Microsoft.Extensions.Logging.EventId.Name
  type: Property
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: Gets the name of this event.
  example: []
  syntax:
    content: public string? Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Microsoft.Extensions.Logging.EventId.Name*
references:
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Microsoft.Extensions.Logging.EventId.op_Implicit*
  commentId: Overload:Microsoft.Extensions.Logging.EventId.op_Implicit
  name: implicit operator
  nameWithType: EventId.implicit operator
  fullName: Microsoft.Extensions.Logging.EventId.implicit operator
  nameWithType.vb: EventId.CType
  fullName.vb: Microsoft.Extensions.Logging.EventId.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: Microsoft.Extensions.Logging.EventId
  commentId: T:Microsoft.Extensions.Logging.EventId
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: Microsoft.Extensions.Logging.EventId.html
  name: EventId
  nameWithType: EventId
  fullName: Microsoft.Extensions.Logging.EventId
- uid: Microsoft.Extensions.Logging.EventId.op_Equality*
  commentId: Overload:Microsoft.Extensions.Logging.EventId.op_Equality
  isExternal: true
  href: Microsoft.Extensions.Logging.EventId.html#Microsoft_Extensions_Logging_EventId_op_Equality_Microsoft_Extensions_Logging_EventId_Microsoft_Extensions_Logging_EventId_
  name: operator ==
  nameWithType: EventId.operator ==
  fullName: Microsoft.Extensions.Logging.EventId.operator ==
  nameWithType.vb: EventId.=
  fullName.vb: Microsoft.Extensions.Logging.EventId.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Microsoft.Extensions.Logging.EventId.op_Equality*
    name: ==
    isExternal: true
    href: Microsoft.Extensions.Logging.EventId.html#Microsoft_Extensions_Logging_EventId_op_Equality_Microsoft_Extensions_Logging_EventId_Microsoft_Extensions_Logging_EventId_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Microsoft.Extensions.Logging.EventId.op_Inequality*
  commentId: Overload:Microsoft.Extensions.Logging.EventId.op_Inequality
  isExternal: true
  href: Microsoft.Extensions.Logging.EventId.html#Microsoft_Extensions_Logging_EventId_op_Inequality_Microsoft_Extensions_Logging_EventId_Microsoft_Extensions_Logging_EventId_
  name: operator !=
  nameWithType: EventId.operator !=
  fullName: Microsoft.Extensions.Logging.EventId.operator !=
  nameWithType.vb: EventId.<>
  fullName.vb: Microsoft.Extensions.Logging.EventId.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Microsoft.Extensions.Logging.EventId.op_Inequality*
    name: '!='
    isExternal: true
    href: Microsoft.Extensions.Logging.EventId.html#Microsoft_Extensions_Logging_EventId_op_Inequality_Microsoft_Extensions_Logging_EventId_Microsoft_Extensions_Logging_EventId_
- uid: Microsoft.Extensions.Logging.EventId.#ctor*
  commentId: Overload:Microsoft.Extensions.Logging.EventId.#ctor
  isExternal: true
  href: Microsoft.Extensions.Logging.EventId.html#Microsoft_Extensions_Logging_EventId__ctor_System_Int32_System_String_
  name: EventId
  nameWithType: EventId.EventId
  fullName: Microsoft.Extensions.Logging.EventId.EventId
  nameWithType.vb: EventId.New
  fullName.vb: Microsoft.Extensions.Logging.EventId.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Microsoft.Extensions.Logging.EventId.ToString*
  commentId: Overload:Microsoft.Extensions.Logging.EventId.ToString
  isExternal: true
  href: Microsoft.Extensions.Logging.EventId.html#Microsoft_Extensions_Logging_EventId_ToString
  name: ToString
  nameWithType: EventId.ToString
  fullName: Microsoft.Extensions.Logging.EventId.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: Microsoft.Extensions.Logging.EventId.Equals*
  commentId: Overload:Microsoft.Extensions.Logging.EventId.Equals
  isExternal: true
  href: Microsoft.Extensions.Logging.EventId.html#Microsoft_Extensions_Logging_EventId_Equals_Microsoft_Extensions_Logging_EventId_
  name: Equals
  nameWithType: EventId.Equals
  fullName: Microsoft.Extensions.Logging.EventId.Equals
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Microsoft.Extensions.Logging.EventId.GetHashCode*
  commentId: Overload:Microsoft.Extensions.Logging.EventId.GetHashCode
  isExternal: true
  href: Microsoft.Extensions.Logging.EventId.html#Microsoft_Extensions_Logging_EventId_GetHashCode
  name: GetHashCode
  nameWithType: EventId.GetHashCode
  fullName: Microsoft.Extensions.Logging.EventId.GetHashCode
- uid: Microsoft.Extensions.Logging.EventId.Id*
  commentId: Overload:Microsoft.Extensions.Logging.EventId.Id
  isExternal: true
  href: Microsoft.Extensions.Logging.EventId.html#Microsoft_Extensions_Logging_EventId_Id
  name: Id
  nameWithType: EventId.Id
  fullName: Microsoft.Extensions.Logging.EventId.Id
- uid: Microsoft.Extensions.Logging.EventId.Name*
  commentId: Overload:Microsoft.Extensions.Logging.EventId.Name
  isExternal: true
  href: Microsoft.Extensions.Logging.EventId.html#Microsoft_Extensions_Logging_EventId_Name
  name: Name
  nameWithType: EventId.Name
  fullName: Microsoft.Extensions.Logging.EventId.Name
